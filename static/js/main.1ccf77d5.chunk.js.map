{"version":3,"sources":["redux/reducer.js","functions.js","redux/store.js","components/Header.js","components/TopPopup.js","components/MessagePopup.js","components/Table.js","components/Grid.js","components/BudgetInput.js","components/AmountGroup.js","components/IconButton.js","containers/SummaryTables.js","components/Input.js","components/LabelledInput.js","components/Button.js","containers/AddTransaction.js","components/ListContainer.js","components/List.js","components/Transaction.js","components/HeaderDropdown.js","components/TotalsDisplay.js","components/Modal.js","components/TransactionDetails.js","components/Transactions.js","components/Container.js","components/EditInput.js","components/MobileEditGroup.js","modals.js","containers/EditList.js","containers/Categories.js","containers/Funds.js","containers/Accounts.js","containers/Settings.js","containers/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","currentPage","addTransaction","editMode","lastSync","user","message","text","type","general","payPeriodType","currencySymbol","colourScheme","showDecimals","startDate","updated","accounts","categories","id","name","description","hidden","dateCreated","budgets","funds","targetAmount","complete","fundAdditions","transactions","updateBudget","newBudget","Number","format","Date","previousBudget","getPreviousBudget","category","budget","find","obj","undefined","amount","removeObject","replaceObject","newBudgets","sort","a","b","compareAsc","parseISO","date","i","length","compareDesc","arr","map","deleted","object","copy","index","findIndex","splice","replaceAccount","defaultAccount","forEach","getNewArray","createNameObjects","categoryNames","fundNames","fund","getFundTarget","tr","getTransactionHeading","getPeriodOfTransaction","dates","trDate","periodDate","parseCurrency","value","store","getState","isNaN","string","toFixed","negative","includes","replace","split","fromRight","unshift","join","checkBudget","categoryId","number","getLatestBudget","checkFundTarget","target","capitalize","slice","toUpperCase","fromCamelCase","replaceCapitals","getAmount","transaction","accountId","asCurrency","from","to","checkIfCanDelete","allObjs","account","filterDeleted","filter","changeColourScheme","scheme","root","document","documentElement","style","setProperty","url","sync","state","dispatch","manual","backupData","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","data","status","payload","console","log","catch","err","createStore","action","dateValue","newAccounts","newCategories","newFunds","newFundAdditions","newTransactions","updatedAccounts","updatedCategories","updatedBudgets","updatedFunds","updatedFundAdditions","removedAccounts","removedCategories","removedBudgets","removedFunds","removedFundAdditions","removedTransactions","localStorage","getItem","parse","getFromLocalStorage","applyMiddleware","next","result","setItem","StyledComp","styled","div","props","isMobile","Header","useMediaQuery","maxWidth","useDispatch","useSelector","onClick","className","TopPopup","children","MessagePopup","Table","table","padding","Grid","template","start","end","input","BudgetInput","useState","oldValue","setOldValue","currentValue","setCurrentValue","onChange","e","parseFloat","onBlur","carryOver","AmountGroup","title","editBudget","setEditMode","color","size","bordered","width","topAdjust","IconButton","Icon","SummaryTables","filteredFunds","periodLength","daysInPeriod","currentDate","today","add","months","days","latestDate","latestDates","numberOfPeriods","push","reverse","getLatestDates","setLatestDate","editCategory","setEditCategory","rows","filteredTransactions","filteredFundAdditions","addFunc","heading","Object","values","row","incomeCategories","expenseCategories","remaining","getSummaryRows","summaryTotals","saved","startingBalance","spent","addToTotals","totalRemaining","getSummaryTotals","accountSummary","objs","total","reduce","t","c","getAccountSummary","setPreviousDate","newIndex","indexOf","newDate","setNextDate","displayDate","getHeading","fontSize","fontWeight","margin","FiArrowLeft","FiArrowRight","key","noBorder","Input","placeholder","options","groups","as","option","display","group","label","disabled","labelWidth","LabelledInput","inputValue","inline","Button","AddTransaction","onAdd","defaultAccountObj","setType","setAmount","setDescription","setDate","setAccount","setFund","setCategory","setFrom","setTo","reset","types","ListContainer","List","array","onClickObj","selected","getType","page","Transaction","showDelete","FaTrashAlt","open","maxHeight","HeaderDropdown","setOpen","itemValue","TotalsDisplay","fundObj","Fragment","Modal","visible","getTableRow","TransactionDetails","onClose","onDelete","parsedObj","copyTr","parseTransaction","textAlign","formatMethod","formatDate","StyledGroup","qty","Transactions","onClickDropdown","objArray","closed","setClosed","details","setDetails","showDetails","setShowDetails","currentObj","organisedObj","formatted","organisedArr","keys","month","first","second","onToggleDetails","categoryType","fundInfo","closedObj","dateOpened","Container","EditInput","defaultValue","itemWidth","MobileEditGroup","modal","editing","setEditing","marginBottom","borderTop","backgroundColor","marginRight","modals","editString","note","interestRate","extraCharges","currency","endDate","EditList","vertical","modalKey","toLowerCase","modalObj","update","remove","newObj","colSpan","height","alignItems","justifyContent","Categories","firstCategory","firstCategoryId","firstCategoryName","categoryName","setCategoryName","React","useEffect","Funds","firstFund","firstFundId","firstFundName","fundName","setFundName","combined","Accounts","firstAccount","firstAccountId","firstAccountName","accountName","setAccountName","Settings","username","setUsername","password","setPassword","lastSyncDate","lastSyncDisplay","setColourScheme","BottomArea","MobileAddButton","Footer","isOpen","isFullyOpen","setFullyOpen","toggle","setTimeout","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1ccf77d5.chunk.js","sourcesContent":["import { format, compareAsc, compareDesc, parseISO } from 'date-fns';\n\nconst initialState = {\n    currentPage: 'Home',\n    addTransaction: false,\n    editMode: false,\n    lastSync: 0,\n    user: null,\n    message: {\n        text: '', \n        type: ''\n    },\n    general: {\n        payPeriodType: 'fourWeekly',\n        currencySymbol: '£',\n        colourScheme: 'dark',\n        showDecimals: true,\n        startDate: '2019-11-08',\n        updated: 20200220153001,\n    },\n    accounts: [],\n    categories: [\n        {\n            id: 20200723153000,\n            name: 'Earnings',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153001,\n            name: 'Interest',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153102,\n            name: 'Food',\n            description: '',\n            type: 'expense',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n    ],\n    budgets: [],\n    funds: [\n        {\n            id: 20200723153130,\n            name: 'Savings',\n            description: 'General Savings',\n            targetAmount: 0,\n            complete: false,\n            dateCreated: '2020-01-03'\n        }\n    ],\n    fundAdditions: [],\n    transactions: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let value = action.payload;\n    let dateValue = Number(format(new Date(),'yyyyMMddHHmmss'));\n    switch(action.type) {\n        case 'SET_CURRENT_PAGE': return {...state, currentPage: value, editMode: false, addTransaction: false, message: {text: '', type: ''}};\n        case 'SET_ADD_TRANSACTION': return {...state, addTransaction: value};\n        case 'SET_EDIT_MODE': return {...state, editMode: value};\n        case 'SET_USER': return {...state, user: value};\n        case 'SET_MESSAGE': return {...state, message: value};\n\n        case 'SET_PAY_PERIOD_TYPE': return {...state, general: {...state.general, payPeriodType: value, updated: dateValue}};\n        case 'SET_COLOUR_SCHEME': return {...state, general: {...state.general, colourScheme: value, updated: dateValue}};\n        case 'SET_CURRENCY_SYMBOL': return {...state, general: {...state.general, currencySymbol: value, updated: dateValue}};\n        case 'SET_SHOW_DECIMALS': return {...state, general: {...state.general, showDecimals: value, updated: dateValue}};\n        case 'SET_START_DATE': return {...state, general: {...state.general, startDate: value, updated: dateValue}};\n\n        case 'ADD_ACCOUNT': let newAccounts = getNewArray(state.accounts, value); return {...state, accounts: newAccounts};\n        case 'ADD_CATEGORY': let newCategories = getNewArray(state.categories, value); return {...state, categories: newCategories};\n        case 'ADD_BUDGET': let newBudgets = getNewArray(state.budgets, value); return {...state, budgets: newBudgets};\n        case 'ADD_FUND': let newFunds = getNewArray(state.funds, value); return {...state, funds: newFunds};\n        case 'ADD_FUND_ADDITION': let newFundAdditions = getNewArray(state.fundAdditions, value); return {...state, fundAdditions: newFundAdditions, addTransaction: false};\n        case 'ADD_TRANSACTION': let newTransactions = getNewArray(state.transactions, value); return {...state, transactions: newTransactions, addTransaction: false};\n\n        case 'UPDATE_ACCOUNT': let updatedAccounts = replaceAccount(state.accounts, value); return {...state, accounts: updatedAccounts};\n        case 'UPDATE_CATEGORY': let updatedCategories = replaceObject(state.categories, value); return {...state, categories: updatedCategories};\n        case 'UPDATE_BUDGET': let updatedBudgets = updateBudget(state.budgets, value); return {...state, budgets: updatedBudgets};\n        case 'UPDATE_FUND': let updatedFunds = replaceObject(state.funds, value); return {...state, funds: updatedFunds};\n        case 'UPDATE_FUND_ADDITION': let updatedFundAdditions = replaceObject(state.fundAdditions, value); return {...state, fundAdditions: updatedFundAdditions};\n\n        case 'REMOVE_ACCOUNT': let removedAccounts = removeObject(state.accounts, value); return {...state, accounts: removedAccounts};\n        case 'REMOVE_CATEGORY': let removedCategories = removeObject(state.categories, value); return {...state, categories: removedCategories};\n        case 'REMOVE_BUDGET': let removedBudgets = removeObject(state.budgets, value); return {...state, budgets: removedBudgets};\n        case 'REMOVE_FUND': let removedFunds = removeObject(state.funds, value); return {...state, funds: removedFunds};\n        case 'REMOVE_FUND_ADDITION': let removedFundAdditions = removeObject(state.fundAdditions, value); return {...state, fundAdditions: removedFundAdditions};\n        case 'REMOVE_TRANSACTION': let removedTransactions = removeObject(state.transactions, value); return {...state, transactions: removedTransactions};\n\n        case 'SYNC': return {...state, ...value, lastSync: dateValue};\n        default: return state;\n    }\n}\n\nconst updateBudget = (budgets, newBudget) => {\n    newBudget.id = Number(format(new Date(),'yyyyMMddHHmmss')); \n    //get previous budget\n    let previousBudget = getPreviousBudget(budgets, newBudget.startDate, newBudget.category);\n\n    //check if there's already a budget with this start date\n    let budget = budgets.find(obj => obj.startDate === newBudget.startDate && obj.category === newBudget.category);\n    if (budget !== undefined) {\n        //check if this budget is same as previous - then delete\n        if (previousBudget !== undefined && previousBudget.amount === newBudget.amount) {\n            return removeObject(budgets, budget.id);\n        }\n\n        budget.amount = newBudget.amount;\n        return replaceObject(budgets, budget);\n    }\n\n    //if there's no budget already, but new budget is same as previous budget, don't do anything\n    if (previousBudget !== undefined && newBudget.amount === previousBudget.amount) return budgets;\n\n    //if no budget already, and new budget is different, then add new\n    let newBudgets = [...budgets, newBudget];\n    newBudgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    return newBudgets;\n}\n\nconst getPreviousBudget = (budgets, date, category) => {\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) === 1) return budget;\n    }\n    return undefined;\n}\n\nconst removeObject = (arr, id) => {\n    return arr.map(obj => {\n        if (obj.id === id) {\n            let date = Number(format(new Date(),'yyyyMMddHHmmss'));\n            return {id: obj.id, deleted: date};\n        } else return obj;\n    });\n}\n\nconst replaceObject = (arr, object) => {\n    let copy = [...arr];\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst replaceAccount = (arr, object) => {\n    let copy = [...arr];\n\n    //there can only be one default account\n    if (object.defaultAccount === true) {\n        copy.forEach(obj => obj.id !== object.id ? obj.defaultAccount = false : null);\n    }\n\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst getNewArray = (arr, object) => {\n    object.id = Number(format(new Date(),'yyyyMMddHHmmss'));    \n    return [...arr, object];\n}","import { add, compareAsc, compareDesc, parseISO, format } from 'date-fns';\nimport store from './redux/store';\n\nexport const getLatestDates = (startDate, periodLength) => {\n    let daysInPeriod = 0;\n    switch (periodLength) {\n        case 'monthly': daysInPeriod = 30; break;\n        case 'weekly': daysInPeriod = 7; break;\n        case 'twoWeekly': daysInPeriod = 14; break;\n        case 'fourWeekly': daysInPeriod = 28; break;\n        default: daysInPeriod = 30; break;\n    }\n\n    //go forwards from starting date to todays date\n    let currentDate = parseISO(startDate);\n    let today = new Date();\n\n    while (compareAsc(today, currentDate) === 1) {\n        if (periodLength === 'monthly') currentDate = add(currentDate, {months: 1});\n        else currentDate = add(currentDate, {days: daysInPeriod});\n    }\n\n    //go back 1 pay period to get last pay date\n    let latestDate = periodLength === 'monthly' ? add(currentDate, {months: -1}) : add(currentDate, {days: -daysInPeriod});\n\n    //go back and add to array previous pay periods (up to 12/13);\n    let latestDates = [];\n    let numberOfPeriods = periodLength === 'fourWeekly' ? 13 : 12;\n    for (let i = 0; i < numberOfPeriods; i++) {\n        latestDates.push(format(latestDate, 'yyyy-MM-dd'));\n        latestDate = periodLength === 'monthly' ? add(latestDate, {months: -1}) : add(latestDate, {days: -daysInPeriod});\n        if (compareAsc(parseISO(startDate), latestDate) >= 1) break;\n    }\n\n    latestDates.reverse();\n\n    return latestDates;\n};\n\nexport const getSummaryTotals = (transactions, funds, categories, fundAdditions) => {\n    let obj = {};\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //make sure every key has a value even if no transactions for it\n    funds.forEach(fund => {\n        let saved = fund.startingBalance > 0 ? fund.startingBalance : 0;\n        obj[fund.name] = {saved: saved, target: fund.targetAmount, spent: 0, remaining: saved};\n    });\n    categories.forEach(category => obj[category.name] = category.startingBalance > 0 ? category.startingBalance : 0);\n\n    const addToTotals = tr => {\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n\n        if (tr.fund !== undefined) {\n            let target = getFundTarget(funds, tr);            \n            if (obj[heading] === undefined) obj[heading] = {saved: 0, target: target, spent: 0, remaining: 0};            \n            \n            if (tr.account > 0) obj[heading].spent += tr.amount;\n            else obj[heading].saved += tr.amount;\n\n            obj[heading].remaining = obj[heading].saved - obj[heading].spent;\n\n            return;\n        }\n\n        if (obj[heading] === undefined) obj[heading] = 0;\n        obj[heading] += tr.amount;\n    }\n\n    transactions.forEach(addToTotals);\n    fundAdditions.forEach(addToTotals);\n\n    //work out total remaining\n    const incomeCategories = categories.filter(obj => obj.type === 'income');\n    const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n    let totalRemaining = 0;\n    incomeCategories.forEach(category => totalRemaining += obj[category.name]);\n    expenseCategories.forEach(category => totalRemaining -= obj[category.name]);\n    funds.forEach(fund => totalRemaining -= obj[fund.name].saved);\n    obj.remaining = totalRemaining;\n\n    return obj;\n}\n\nexport const getSummaryRows = (dates, transactions, funds, categories, fundAdditions) => {\n    if (dates.length === 0) return [];    \n\n    //create object to store final values\n    let obj = {};\n    dates.forEach(date => obj[date] = {});\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //filter out transactions that happened before first date and those which are for funds\n    let filteredTransactions = transactions.filter(tr => {\n        if (tr.fund !== undefined) return false;\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    });\n\n    //filter out fund additions that happened before first date\n    let filteredFundAdditions = fundAdditions.filter(tr => {\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    })\n    \n\n    //add transaction amounts to correct heading in object\n    const addFunc = (tr) => {\n        let periodDate = getPeriodOfTransaction(dates, tr.date);\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n        if (obj[periodDate][heading] === undefined) obj[periodDate][heading] = 0;\n        obj[periodDate][heading] += tr.amount;\n    }\n    filteredTransactions.forEach(addFunc);\n    filteredFundAdditions.forEach(addFunc);\n\n    //calculate remaining amount in each period\n    Object.values(obj).forEach(row => {        \n        const incomeCategories = categories.filter(obj => obj.type === 'income');\n        const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n        let remaining = 0;\n        incomeCategories.forEach(obj => remaining += row[obj.name] !== undefined ? row[obj.name] : 0);\n        expenseCategories.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name] : 0);\n        funds.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name] : 0);\n        \n        row.remaining = remaining;\n    });\n    \n    return obj;\n};\n\nexport const getAccountSummary = (transactions, accounts, categories) => {\n    let objs = [];\n\n    accounts.forEach(account => {\n        const filteredTransactions = transactions.filter(obj => {\n            if (obj.from !== undefined && obj.to !== undefined && (obj.from === account.id || obj.to === account.id)) return true; \n            return obj.account !== undefined && obj.account === account.id ? true : false;\n        });   \n\n        let total = filteredTransactions.reduce((t,c) => {\n            t += getAmount(c, categories, account.id, false);\n            return t;\n        }, 0);        \n\n        if (account.startingBalance !== undefined) {\n            total += parseFloat(account.startingBalance);\n        }\n\n        objs.push({name: account.name, total: total, id: account.id});\n    });\n\n    return objs;\n}\n\nconst createNameObjects = (categories, funds) => {\n    let categoryNames = {};\n    let fundNames = {};\n\n    categories.forEach(category => categoryNames[category.id] = category.name);\n    funds.forEach(fund => fundNames[fund.id] = fund.name);\n\n    return {categoryNames, fundNames};\n}\n\nconst getFundTarget = (funds, tr) => {\n    let fund = funds.find(obj => obj.id === tr.fund);\n    if (fund !== undefined) return fund.targetAmount;\n    return 0;\n}\n\nconst getTransactionHeading = (fundNames, categoryNames, tr) => {\n    if (tr.category !== undefined) {\n        let name = categoryNames[tr.category];\n        if (name !== undefined) return name;\n    } else if (tr.fund !== undefined) {\n        let name = fundNames[tr.fund];\n        if (name !== undefined) return name;\n    }\n    return 'Un-Categorised';\n}\n\nconst getPeriodOfTransaction = (dates, trDate) => {\n    let periodDate = dates[0];\n\n    for (let date of dates) {\n        if (compareAsc(parseISO(trDate), parseISO(date)) >= 0) periodDate = date;\n        else break;\n    }\n    \n    return periodDate;\n};\n\nexport const parseCurrency = (value) => {\n    let { general } = store.getState();    \n    let { currencySymbol, showDecimals } = general;    \n\n    //make sure it doens't return -£0.00\n    if (value > -0.009 && value < 0.009) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    if (value === null || value === undefined || value === 0 || isNaN(value)) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    let string = Number(value).toFixed(showDecimals ? 2 : 0);    \n\n    let negative = false;\n    if (string.includes('-')) {\n        string = string.replace('-','');\n        negative = true;\n    }\n    let arr = string.split('');\n\n    for (let i = arr.length-4; i >= 0; i--) {\n        let fromRight = arr.length - i - 4;\n        if (fromRight > 0 && fromRight%3 === 0) arr[i] += ',';\n    }\n\n    arr.unshift(currencySymbol);\n    if (negative) arr.unshift('-');\n    return arr.join('');    \n}\n\nexport const checkBudget = (budgets, date, categoryId, transactions, number=false) => {\n    let budget = getLatestBudget(budgets, date, categoryId);\n\n    if (budget !== undefined && budget.amount > 0) {\n        if (number) return budget.amount;\n        return ` / ${parseCurrency(budget.amount)}`;\n    } else {\n        if (number) return 0;\n        return '';\n    }    \n}\n\n\nconst getLatestBudget = (budgets, date, category) => {\n    budgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) >= 0) return budget;\n    }\n    return undefined;\n}\n\nexport const checkFundTarget = (fund) => {\n    if (fund === undefined) return '';\n    if (fund.target !== 0) return ` / ${parseCurrency(fund.target)}`;\n    else return '';\n}\n\nexport const capitalize = (string) => {\n    return string.slice(0,1).toUpperCase() + string.slice(1);\n}\n\nexport const toCamelCase = (string) => {\n    let removeSpaces = string.replace(/ /g, '');\n    return removeSpaces.slice(0,1).toLowerCase() + removeSpaces.slice(1);\n}\n\nexport const fromCamelCase = (string) => {\n    let replaceCapitals = string.replace(/[A-Z]/g, ' $&');\n    return capitalize(replaceCapitals);\n}\n\n//determine whether amount should be positive or negative\nexport const getAmount = (transaction, categories, accountId, asCurrency=true) => {\n    //fund addition, so positive\n    if (transaction.type === undefined) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n\n    //transaction for a fund, so negative\n    if (transaction.fund !== undefined) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            //transaction for expense category, so negative\n            if (category.type === 'expense') return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n            //transaction for income category, so positive\n            if (category.type ===  'income') return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n        } else {\n            //has a category, but can't find it, so return 0\n            return asCurrency ? parseCurrency(0) : 0;\n        }\n    }    \n\n    if (transaction.from !== undefined && accountId !== undefined) {\n        //transfer from this account, so negative\n        if (transaction.from === accountId) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n        //transfer to this account, so positive\n        if (transaction.to === accountId) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n    }\n}\n\nexport const checkIfCanDelete = (obj) => {\n    let id = obj.id;\n\n    let { transactions, fundAdditions, budgets } = store.getState();\n\n    let allObjs = [...transactions, ...fundAdditions, ...budgets];\n\n    for (let obj of allObjs) {\n        if (obj.category === id) return false;\n        if (obj.fund === id) return false;\n        if (obj.account === id) return false;\n    }\n\n    return true;\n}\n\nexport const filterDeleted = (arr) => {\n    return arr.filter(obj => obj.deleted !== undefined ? false : true);\n}\n\nexport const formatDate = (date, formatMethod='MMM d, yyyy') => {\n    if (date === undefined) return '';\n    if (date.length == 0) return '';\n    return format(parseISO(date), formatMethod);\n} \n\nexport const parseTransaction = (tr) => {\n    let { categories, accounts, funds } = store.getState();\n    let copyTr = {...tr};\n\n    if (copyTr.category !== undefined) {\n        let category = categories.find((obj) => obj.id === copyTr.category);\n        if (category !== undefined) copyTr.category = category.name;\n    }\n\n    if (copyTr.account !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.account);\n        if (account !== undefined) copyTr.account = account.name;\n    }\n\n    if (copyTr.fund !== undefined) {\n        let fund = funds.find((obj) => obj.id === copyTr.fund);\n        if (fund !== undefined) copyTr.fund = fund.name;\n    }\n\n    if (copyTr.from !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.from);\n        if (account !== undefined) copyTr.from = account.name;\n    }\n\n    if (copyTr.to !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.to);\n        if (account !== undefined) copyTr.to = account.name;\n    }\n\n    return copyTr;\n}\n\nexport const changeColourScheme = (scheme) => {\n    let root = document.documentElement;\n\n    if (scheme === 'dark') {\n        root.style.setProperty('--bg-color', '#222');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', '#222');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#555');\n        root.style.setProperty('--table-heading-text-color', 'white');\n    }\n\n    if (scheme === 'black') {\n        root.style.setProperty('--bg-color', 'black');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', 'black');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#555');\n        root.style.setProperty('--table-heading-text-color', 'white');\n    }\n\n    if (scheme === 'light') {\n        root.style.setProperty('--bg-color', 'white');\n        root.style.setProperty('--text-color', 'black');\n        root.style.setProperty('--light-text-color', '#555');\n        root.style.setProperty('--icon-color', 'black');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', 'black');\n        \n        root.style.setProperty('--footer-bg', 'white');\n        root.style.setProperty('--footer-border', 'black');\n        \n        root.style.setProperty('--table-heading-bg-color', '#AAA');\n        root.style.setProperty('--table-heading-text-color', 'black');\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { reducer } from './reducer';\nimport { changeColourScheme } from '../functions';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst localStorageMiddleware = ({getState}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        \n        const ignore = ['SET_CURRENT_PAGE', 'SET_ADD_TRANSACTION', 'SET_EDIT_MODE'];\n        if (ignore.includes(action.type)) return result;\n\n        localStorage.setItem('budgetState', JSON.stringify(getState()));\n\n        return result;\n    }\n};\n\nconst syncMiddleware = ({getState, dispatch}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        //sync with server if possible\n        const ignore = ['SET_CURRENT_PAGE', 'SET_EDIT_MODE', 'SYNC', 'SET_USER', 'SET_ADD_TRANSACTION', 'SET_MESSAGE'];\n        if (ignore.includes(action.type)) return result;\n        sync(getState(), dispatch);\n\n        return result;\n    }\n};\n\nexport const sync = (state, dispatch, manual=false) => {\n    if (!state.user) return;\n\n    const backupData = {\n        general: state.general,\n        accounts: state.accounts,\n        categories: state.categories,\n        budgets: state.budgets,\n        funds: state.funds,\n        fundAdditions: state.fundAdditions,\n        transactions: state.transactions,\n        user: state.user\n    };\n\n    fetch(url+'api/backup', {\n        method: 'POST', \n        headers: {'content-type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify(backupData)\n    }).then(res => res.json()).then(data => {\n        if (data.status === 'success') {\n            dispatch({type: 'SYNC', payload: data.data});\n            dispatch({type: 'SET_USER', payload: data.user});\n            changeColourScheme(data.data.general.colourScheme);\n            if (manual) dispatch({type: 'SET_MESSAGE', payload: {text: 'Data successfully synced!', type: 'success'}});\n        } else {\n            console.log(data);\n            if (data.type === 'logout') dispatch({type: 'SET_USER', payload: null});\n            dispatch({type: 'SET_MESSAGE', payload: {text: data.message, type: 'error'}});\n        }\n    }).catch(err => {\n        console.log('Error Syncing: ', err.message);\n        dispatch({type: 'SET_USER', payload: null});\n        dispatch({type: 'SET_MESSAGE', payload: {text: 'Failed to contact server for syncing. Please try to login again.', type: 'error'}});\n    });\n}\n\nconst getFromLocalStorage = () => {\n    let state = localStorage.getItem('budgetState');\n    if (state !== null) {\n        state = JSON.parse(state);\n        state.currentPage = 'Home';\n        state.message = {text: '', type: ''};\n        state.editMode = false;\n        state.addTransaction = false;\n        changeColourScheme(state.general.colourScheme);\n        return state;\n    }\n}\n\nconst store = createStore(reducer, getFromLocalStorage(), applyMiddleware(localStorageMiddleware, syncMiddleware));\n\nexport default store;","import React from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaHome } from 'react-icons/fa';\nimport { MdSettings } from 'react-icons/md';\n\nconst StyledComp = styled.div`\n    display: flex;\n    border-bottom: 1px solid var(--menu-border-color);\n    width: 100%;\n    background-color: var(--menu-bg-color);\n\n    & > div {\n        color: var(--menu-text-color);\n        padding: 5px 10px;\n        border-right: 1px solid var(--menu-border-color);\n        ${props => props.isMobile ? 'flex-grow: 1;' : ''};\n        ${props => props.isMobile ? 'padding: 10px' : ''};\n    }\n\n    & > div:last-of-type {\n        ${props => props.isMobile ? 'border-right: none;' : ''};\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        cursor: pointer;\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div.spacer:hover {\n        background-color: transparent;\n        cursor: default;\n    }\n\n    & > div.spacer {\n        flex-grow: 1;\n    }\n\n    & > div.right {\n        border-right: none;\n    }\n\n    & > div > svg {\n        position: relative;\n        top: 3px;\n    }\n`;\n\nconst Header = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const addTransaction = useSelector(state => state.addTransaction);\n    const currentPage = useSelector(state => state.currentPage);\n\n    return (\n        <StyledComp isMobile={isMobile}>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Home'})} className={currentPage === 'Home' ? 'selected' : ''}>\n                { isMobile ? <FaHome/> : 'Home' }\n            </div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Categories'})} className={currentPage === 'Categories' ? 'selected' : ''}>Categories</div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Funds'})} className={currentPage === 'Funds' ? 'selected' : ''}>Funds</div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Accounts'})} className={currentPage === 'Accounts' ? 'selected' : ''}>Accounts</div>\n            { !isMobile ? <div onClick={() => dispatch({type: 'SET_ADD_TRANSACTION', payload: !addTransaction})}>Add Transaction</div> : null }\n            { !isMobile ? <div className=\"spacer\"></div> : null }\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Settings'})} className={currentPage === 'Settings' ? 'selected right' : 'right'}>\n                { isMobile ? <MdSettings/> : 'Settings' }\n            </div>\n        </StyledComp>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    position: fixed;\n    top: 28px;\n    width: 100%;\n\n    & > div {\n        border: 1px solid var(--menu-border-color);\n        width: 300px;\n        margin: auto;\n        padding: 10px;\n        background-color: var(--bg-color);\n    }\n`;\n\nconst TopPopup = ({children}) => {\n    return (\n        <StyledComp>{children}</StyledComp>\n    );\n}\n\nexport default TopPopup;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nconst StyledComp = styled.div`\n    width: 95%;\n    max-width: 1200px;\n    border: 2px solid white;\n    ${props => props.type === 'error' ? 'border: 2px solid red' : ''};\n    ${props => props.type === 'success' ? 'border: 2px solid #0F0' : ''};\n    margin: auto;\n    margin-top: 5px;\n    padding: 5px;\n    position: relative;\n\n    & > div:last-child {\n        position: absolute;\n        right: -1px;\n        top: -2px;\n        font-size: 2em;\n    }\n\n    & > div:last-child:hover {\n        color: red;\n        cursor: pointer;\n    }\n`;\n\nconst MessagePopup = () => {\n    const dispatch = useDispatch();\n    const message = useSelector(state => state.message);\n    const clearMessage = () => dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n\n    if (message.text.length === 0) return null;\n\n    return (\n        <StyledComp type={message.type}>\n            <div>{message.text}</div>\n            <div onClick={clearMessage}><IoMdClose/></div>\n        </StyledComp>\n    );\n}\n\nexport default MessagePopup;","import styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 5px auto;\n    ${'' /* border-collapse: collapse; */}\n    border-spacing: 0px;\n    overflow: hidden;\n    border-radius: 5px;\n    background-color: var(--bg-color);\n    color: var(--text-color);\n\n    & thead td {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n    }\n\n    & thead td.income {\n        background-color: green;\n        color: white;\n    }\n\n    & thead td.expense {\n        background-color: darkorange;\n        color: black;\n    }\n\n    & thead td.fund {\n        background-color: lightsteelblue;\n        color: black;\n    }\n\n    & thead td.remaining {\n        background-color: deepskyblue;\n        color: black;\n    }\n\n    & tbody th {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n        font-weight: normal;\n    }\n\n    & tr td.corner-top-left {\n        border-top: none !important;\n        border-left: none !important;\n        background-color: transparent;\n    }\n\n    & td, & th {\n        padding: ${props => props.padding ? props.padding : '10px 15px'};\n        border-right: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n    \n    & > *:first-child tr:first-child > * {\n        border-top: 1px solid var(--menu-border-color);\n    }\n\n    & tr td:first-child, & tr th:first-child {\n        border-left: 1px solid var(--menu-border-color);\n    }\n\n    & > *:first-child tr:first-child > *:first-child {\n        border-top-left-radius: 5px;\n    }\n\n    & > *:first-child tr:first-child > *:last-child {\n        border-top-right-radius: 5px;\n    }\n\n    & tbody tr:last-child td:first-child {\n        border-bottom-left-radius: 5px;\n    }\n\n    & tbody tr:last-child td:last-child {\n        border-bottom-right-radius: 5px;\n    }\n\n    & td {\n        position: relative;\n    }\n\n    & .budgetIcon {\n        ${'' /* position: absolute; */}\n        float: right;\n        margin-left: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n`;\n\nexport default Table;","import styled from 'styled-components';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: ${props => props.template ? props.template : '1fr 1fr'};\n    grid-gap: 10px;\n    margin: 10px;\n    ${props => props.start !== undefined ? 'grid-column-start:'+props.start : ''};\n    ${props => props.end !== undefined ? 'grid-column-end:'+props.end : ''};\n`;\n\nexport default Grid;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    width: 60px;\n    border: 1px solid var(--text-color);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n`;\n\nconst BudgetInput = ({value, category, date}) => {\n    const [oldValue, setOldValue] = useState(value);\n    const [currentValue, setCurrentValue] = useState(value);\n    const dispatch = useDispatch();\n    const updateBudget = (val) => dispatch({type: 'UPDATE_BUDGET', payload: val});\n\n    //use local state for editing object, but change if global state changes (don't want to sync with server for every keystroke)\n    if (value !== oldValue) {\n        setOldValue(value);\n        setCurrentValue(value);\n    }\n\n    const onChangeBudget = (e) => {\n        let amount = parseFloat(e.target.value);\n        setCurrentValue(amount);\n    }\n\n    const onBlurBudget = (e) => {\n        let newBudget = {\n            category: category,\n            amount: currentValue,\n            startDate: date,\n            carryOver: false,\n        };\n\n        updateBudget(newBudget);\n    }\n\n    return (\n        <StyledComp type=\"number\" value={isNaN(currentValue) || currentValue === null ? '' : currentValue} onChange={onChangeBudget} onBlur={onBlurBudget}/>\n    );\n}\n\nexport default BudgetInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaPiggyBank } from 'react-icons/fa';\n\nimport { parseCurrency } from '../functions';\n\nimport BudgetInput from './BudgetInput';\n\nconst StyledComp = styled.div`\n    text-align: center;\n    border-radius: 5px;\n    box-shadow: 0px 1px 4px gray;\n    width: 100%;\n    overflow: hidden;\n\n    &.fullRow {\n        grid-column-start: 1;\n        grid-column-end: 3;\n    }\n\n    & > div:first-of-type {\n        position: relative;\n        font-size: 1.2em;\n        font-weight: bold;\n        padding: 2px;\n        margin-bottom: 4px;\n        ${props => props.type === 'income' ? 'background-color: green; color: white;' : ''};\n        ${props => props.type === 'expense' ? 'background-color: darkorange; color: black;' : ''};\n        ${props => props.type === 'fund' ? 'background-color: lightsteelblue; color: black;' : ''};\n        ${props => props.type === 'remaining' ? 'background-color: deepskyblue; color: black;' : ''};\n        ${props => props.type === 'account' ? 'background-color: deepskyblue; color: black;' : ''};\n    }\n\n    & > div:last-of-type {\n        font-size: 1em;\n        margin-bottom: 5px;\n    }\n\n    & .budgetIcon {\n        position: absolute;\n        right: 5px;\n        top: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n`;\n\nconst AmountGroup = ({title, amount, type, budget=0, editBudget=false, id, date}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n    }\n\n    return (\n        <StyledComp type={type} className={title === 'Earnings' || title === 'Remaining' ? 'fullRow' : ''}>\n            <div>\n                { title }\n                { editBudget ? <div className=\"budgetIcon\" onClick={toggleEditMode}><FaPiggyBank/></div> : null }\n            </div>\n            <div>\n                { amount }\n                { !editMode && budget > 0 ? ` / ${parseCurrency(budget)}` : '' }\n                { editMode ? <span> / <BudgetInput value={budget} category={id} date={date}/></span> : null }\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default AmountGroup;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    color: ${props => props.color};\n    display: inline-block;\n    font-size: ${props => props.size};\n    ${props => props.bordered ? 'border: 1px solid white' : ''};\n    width: ${props => props.width ? props.width : 'auto'};\n    padding: ${props => props.bordered ? '5px' : '0px'};\n    border-radius: 5px;\n    \n    :hover {\n        cursor: pointer;\n    }\n\n    & > svg {\n        position: relative;\n        top: ${props => props.topAdjust};\n    }\n`;\n\nconst IconButton = ({Icon, onClick, color='var(--icon-color)', topAdjust='3px', size='1em', width='auto', bordered=false}) => {\n    return (\n        <StyledComp color={color} topAdjust={topAdjust} size={size} width={width} bordered={bordered}>\n            <Icon onClick={onClick}/>\n        </StyledComp>\n    );\n}\n\nexport default IconButton;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FiArrowLeft, FiArrowRight } from 'react-icons/fi';\nimport { FaPiggyBank } from 'react-icons/fa';\n\nimport Table from '../components/Table';\nimport Grid from '../components/Grid';\nimport AmountGroup from '../components/AmountGroup';\nimport IconButton from '../components/IconButton';\nimport BudgetInput from '../components/BudgetInput';\n\nimport { getLatestDates, getSummaryRows, getSummaryTotals, getAccountSummary, parseCurrency, checkBudget, checkFundTarget, filterDeleted } from '../functions';\n\nconst SummaryTables = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const general = useSelector(state => state.general);\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const budgets = useSelector(state => filterDeleted(state.budgets));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n\n    const filteredFunds = funds.filter(obj => obj.complete === false);\n\n    const dates = getLatestDates(general.startDate, general.payPeriodType);\n    const [latestDate, setLatestDate] = useState(dates[dates.length-1]);\n\n    const [editCategory, setEditCategory] = useState(0);\n\n    const rows = getSummaryRows(dates, transactions, funds, categories, fundAdditions);\n\n    const incomeCategories = categories.filter(obj => obj.type === 'income');\n    const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n    const summaryTotals = getSummaryTotals(transactions, funds, categories, fundAdditions);\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n\n    const toggleEditCategory = (id) => () => {\n        if (editCategory === id) setEditCategory(0);\n        else setEditCategory(id);\n    }\n\n    const setPreviousDate = () => {\n        if (latestDate === 'Totals') {\n            setLatestDate(dates[dates.length-1]);\n            return;\n        }\n\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex-1;\n        if (newIndex < 0) return;\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    const setNextDate = () => {\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex+1;\n        if (newIndex > dates.length-1) {\n            setLatestDate('Totals');\n            return;\n        } else if (latestDate === 'Totals') {\n            return;\n        }\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    if (isMobile) {\n        let displayDate = latestDate;\n        if (latestDate !== 'Totals') {\n            displayDate = format(new Date(latestDate), 'do MMMM yyyy');\n        }\n\n        let index = dates.indexOf(latestDate);\n\n        const getHeading = () => {\n            return (\n                <Grid style={{fontSize: '1.5em', fontWeight: 'bold', margin: '0px'}} start='1' end='3' template='50px auto 50px'>\n                    { index === 0 ? <div></div> : <IconButton Icon={FiArrowLeft} onClick={setPreviousDate} size='1.3em' topAdjust='0px'/> }\n                    <div>{displayDate}</div> \n                    { latestDate === 'Totals' ? <div></div> : <IconButton Icon={FiArrowRight} onClick={setNextDate} size='1.3em' topAdjust='0px'/> }\n                </Grid>\n            );\n        }\n\n        //when user goes foward from starting date, they can see the totals for each category\n        if (latestDate === 'Totals') {\n            return (\n                <div>\n                    <Grid>\n                        { getHeading() }\n                        { incomeCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='income'/>) }\n                        { filteredFunds.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name] ? summaryTotals[obj.name].remaining : 0)+checkFundTarget(summaryTotals[obj.name])} type='fund'/>) }\n                        { expenseCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='expense'/>) }\n                        <AmountGroup title='Remaining' amount={parseCurrency(summaryTotals.remaining)} type='remaining'/>\n                    </Grid>\n\n                    <h3>Accounts</h3>\n                    <Grid>\n                        { accountSummary.map(obj => <AmountGroup key={'account-'+obj.id} title={obj.name} amount={parseCurrency(obj.total)} type='account'/>) }\n                    </Grid>\n                </div>\n            );\n        }\n        \n        return (\n            <div>\n                <Grid>\n                    { getHeading() }\n                    { incomeCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='income'/>) }\n                    { filteredFunds.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='fund'/>) }\n                    { expenseCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='expense' editBudget={true} budget={checkBudget(budgets, latestDate, obj.id, transactions, true)} id={obj.id} date={latestDate}/>) }\n                    <AmountGroup title='Remaining' amount={parseCurrency(rows[latestDate].remaining)} type='remaining'/>\n                </Grid>\n            </div>\n        );\n    }    \n\n    return (\n        <div>\n            <h4>Period Summaries</h4>\n            <Table>\n                <thead>\n                    <tr>\n                        <td>Date</td>\n                        { incomeCategories.map(obj => <td key={'heading-'+obj.id} className=\"income\">{obj.name}</td>) }\n                        { filteredFunds.map(obj => <td key={'heading-'+obj.id} className=\"fund\">{obj.name}</td>) }\n                        { expenseCategories.map(obj => <td key={'heading-'+obj.id} className=\"expense\">{obj.name}<div className=\"budgetIcon\" onClick={toggleEditCategory(obj.id)}><FaPiggyBank/></div></td>) }\n                        <td className=\"remaining\">Remaining</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        dates.map(date => {\n                            return (\n                                <tr key={'summaryDate-'+date}>\n                                    <td>{date}</td>\n                                    { incomeCategories.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}</td>) }\n                                    { filteredFunds.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}</td>) }\n                                    { expenseCategories.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}{editCategory === obj.id ? <span> / <BudgetInput value={checkBudget(budgets, date, obj.id, transactions, true)} category={obj.id} date={date}/></span> : checkBudget(budgets, date, obj.id, transactions)}</td>) }\n                                    <td>{ parseCurrency(rows[date].remaining) }</td>\n                                </tr>\n                            )\n                        })\n                    }\n                    <tr>\n                        <td>Total</td>\n                        { incomeCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                        { filteredFunds.map(obj => <td key={'fundHeading-'+obj.id}>{parseCurrency(summaryTotals[obj.name].remaining)}{checkFundTarget(summaryTotals[obj.name])}</td>) }\n                        { expenseCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                        <td>{parseCurrency(summaryTotals.remaining)}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <h4>Account Summaries</h4>\n            <Table>\n                <thead>\n                    <tr>\n                        <td>Account</td>\n                        <td>Total</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    accountSummary.map(obj => \n                        <tr key={'account-'+obj.id}>\n                            <td>{obj.name}</td>\n                            <td>{parseCurrency(obj.total)}</td>\n                        </tr>\n                    )\n                }\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default SummaryTables;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    border: ${props => props.noBorder ? 'none' : '1px solid var(--menu-border-color)'};\n    height: var(--input-height);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    padding-left: 10px;\n    font-size: 1em;\n    width: ${props => props.width};\n    border-radius: 0px;\n    -webkit-appearance: none;\n\n    :focus {\n        outline: none;\n        border: 1px solid #33C9F9;\n    }\n\n    &::-webkit-calendar-picker-indicator {\n        filter: invert(100%);\n    }\n`;\n\nconst Input = ({value, type='text', placeholder='', onChange, options=[], groups=[], width=\"100px\", noBorder=false}) => {\n    if (type === 'dropdown' && (options.length > 0 || groups.length > 0)) return (\n        <StyledComp as='select' onChange={onChange} value={value} width={width} noBorder={noBorder}>\n            <option hidden value={undefined}>Select an Option</option>\n        {\n            options.length > 0 \n            ? options.map(option => {\n                if (option.display.length === 0) return null;\n                return <option key={'inputOption-'+option.value} value={option.value}>{option.display}</option>\n            })\n            : groups.map(group => {\n                return (\n                    <optgroup key={'inputGroup-'+group.label} label={group.label}>\n                    {\n                        group.options.map(option => {\n                            if (option.display.length === 0) return null;\n                            return <option key={'inputGroupOption-'+option.value} value={option.value}>{option.display}</option>\n                        })\n                    }\n                    </optgroup>\n                )\n            })\n        }\n        </StyledComp>\n    );\n\n    if (type === 'dropdown' && (options.length === 0 && groups.length === 0)) return <StyledComp value={'No Options'} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder} disabled={true}/>\n\n    if (type === 'number' && isNaN(value)) value = '';\n\n    return (\n        <StyledComp value={value} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder}/>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Input from './Input';\n\nconst StyledComp = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 5px;\n\n    & > label {\n        width: ${props => props.labelWidth};\n        display: inline-flex;\n        justify-content: flex-end;\n        align-items: center;\n        height: var(--input-height);\n        padding: 0px 10px;\n        border-left: 1px solid var(--menu-border-color);\n        border-top: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        background-color: var(--table-heading-bg-color);\n    }\n\n    & > input, & > select {\n        border-top-right-radius: 5px;\n        border-bottom-right-radius: 5px;\n        width: 150px;\n    }\n`;\n\nconst LabelledInput = ({label, type='text', value, placeholder='', onChange, options=[], groups=[], labelWidth='120px'}) => {\n    let inputValue = value;\n    if (isNaN(inputValue) && type === 'number') inputValue = '';\n\n    return (\n        <StyledComp labelWidth={labelWidth}>\n            <label>{label}</label>\n            <Input value={inputValue} type={type} onChange={onChange} placeholder={placeholder} options={options} groups={groups}/>\n        </StyledComp>\n    );\n}\n\nexport default LabelledInput;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    background-color: var(--menu-bg-color);\n    color: var(--menu-text-color);\n    border: 1px solid var(--menu-border-color);\n    ${props => props.color ? `border-color: ${props.color}` : ''};\n    border-radius: 5px;\n    height: var(--input-height);\n    display: ${props => props.inline ? 'inline flex' : 'flex'};\n    justify-content: center;\n    align-items: center;\n    width: ${props => props.width};\n    margin: auto;\n\n    :hover {\n        cursor: pointer;\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n`;\n\nconst Button = ({value, onClick, width='100%', inline=false, color=undefined, style={}}) => {\n    return (\n        <StyledComp width={width} onClick={onClick} inline={inline} color={color} style={style}>{value}</StyledComp>\n    );\n}\n\nexport default Button;","import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterDeleted } from '../functions';\n\nimport LabelledInput from '../components/LabelledInput';\nimport Button from '../components/Button';\n\nconst AddTransaction = ({onAdd=()=>{}}) => {\n    const dispatch = useDispatch();\n\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let defaultAccountObj = accounts.find(obj => obj.defaultAccount === true);\n    let defaultAccount = defaultAccountObj !== undefined ? defaultAccountObj.id : accounts.length > 0 ? accounts[0].id : undefined;\n\n    const [type, setType] = useState('spend');\n    const [amount, setAmount] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n    const [account, setAccount] = useState(defaultAccount);\n    const [fund, setFund] = useState(undefined);\n    const [category, setCategory] = useState(undefined);\n    const [from, setFrom] = useState(undefined);\n    const [to, setTo] = useState(undefined);\n\n    const reset = () => {\n        setType('spend');\n        setAmount('');\n        setDescription('');\n        setDate(format(new Date(), 'yyyy-MM-dd'));\n        setAccount(defaultAccount);\n        setFund(undefined);\n        setCategory(undefined);\n        setFrom(undefined);\n        setTo(undefined);\n    }\n\n\n    const addTransaction = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (account === undefined) return;\n        if (type === 'spend' && fund === undefined && category === undefined) return;\n        if (type === 'transfer' && from === undefined && to === undefined) return;\n\n        let transaction;\n        if (type === 'spend') {\n            transaction = {type, amount, description, date, account, fund, category};\n        } else if (type === 'transfer') {\n            transaction = {type, amount, date, from, to};\n        }        \n\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\n        onAdd();\n        reset();\n    }\n\n    const addFundAddition = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (fund === undefined) return;\n\n        let fundAddition = {amount, date, fund};        \n        dispatch({type: 'ADD_FUND_ADDITION', payload: fundAddition});\n        onAdd();\n        reset();\n    }\n\n    const onChangeGroup = (e) => {\n        let value = e.target.value;\n        let [id, name] = value.split(':');\n        id = Number(id);\n        \n        let fund = funds.find(obj => obj.id === id && obj.name === name);\n        \n        if (fund !== undefined) {\n            setFund(id);\n            setCategory(undefined);\n        } else {\n            let category = categories.find(obj => obj.id === id && obj.name === name);\n            if (category !== undefined) {\n                setCategory(id);\n                setFund(undefined);\n            }\n        }\n    }\n\n    let types = [\n        {value: 'spend', display: 'Spend/Receive'},\n        {value: 'fundAddition', display: 'Add to Fund'},\n    ];\n\n    if (accounts.length > 1) types.push({value: 'transfer', display: 'Transfer'});\n\n    if (type === 'fundAddition') {\n        return (\n            <div>\n                <strong>Add Transaction</strong>\n                <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/>\n                <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n                <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n                <LabelledInput label={'Fund'} type='dropdown' value={fund} onChange={(e) => setFund(Number(e.target.value))} options={funds.map(obj => ({value: obj.id, display: obj.name}))}/>\n                <Button value=\"Add Transaction\" onClick={addFundAddition} width=\"140px\"/>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <strong>Add Transaction</strong>\n            <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/>\n            <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Description'} value={description} onChange={(e) => setDescription(e.target.value)}/> }\n            <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Account'} type='dropdown' value={account} onChange={(e) => setAccount(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> }\n            { type === 'transfer' ? <LabelledInput label={'From'} type='dropdown' value={from} onChange={(e) => setFrom(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? <LabelledInput label={'To'} type='dropdown' value={to} onChange={(e) => setTo(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? null : <LabelledInput label={'Group'} type='dropdown' value={undefined} onChange={onChangeGroup} groups={[ \n                                                                    {label: 'Funds', options: funds.map(obj => ({value: obj.id+':'+obj.name, display: obj.name}) )} , \n                                                                    {label: 'Categories', options: categories.map(obj => ({value: obj.id+':'+obj.name, display: obj.name}) )}  ]}/> }\n            <Button value=\"Add Transaction\" onClick={addTransaction} width=\"140px\"/>\n        </div>\n    );\n}\n\nexport default AddTransaction;","import styled from 'styled-components';\n\nconst ListContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: calc(100vh - 70px);\n\n    & > div:last-child {\n        flex-grow: 1;\n    }\n`;\n\nexport default ListContainer;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    width: 200px;\n    margin: 5px;\n    padding: 0px 5px;\n    overflow: scroll;\n    position: relative;\n\n    & > div {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        width: 100%;\n        margin-bottom: 5px;\n        background-color: var(--menu-bg-color);\n        color: var(--menu-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n        cursor: pointer;\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div:last-child {\n        position: absolute;\n        bottom: 0px;\n        left: 5px;\n        width: calc(100% - 10px);\n    }\n`;\n\nconst List = ({heading='', array=[], onClickObj, selected}) => {\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n\n    const toggleEditMode = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: !editMode});\n    }\n\n    return (\n        <StyledComp>\n            <h4>{heading}</h4>\n            {\n                array.map(obj => {\n                    if (obj.name.length === 0) return null;\n                    return (\n                        <div key={'objList-'+obj.id} onClick={onClickObj(obj.id)} className={selected === obj.id && editMode === false ? 'selected': ''}>{obj.name}</div>\n                    );\n                })\n            }\n            <div onClick={toggleEditMode} className={editMode ? 'selected' : ''}>Edit {heading}</div>\n        </StyledComp>\n    );\n}\n\nexport default List;","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { format, parseISO } from 'date-fns';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport IconButton from '../components/IconButton';\n\nconst StyledComp = styled.div`\n    & > table {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n    }\n\n    & td {\n        ${'' /* border: 1px solid white; */}\n        height: 39px;\n    }\n\n    & td:nth-child(1) {\n        text-align: left;\n    }\n\n    & td:nth-child(2) {\n        width: 100px;\n        text-align: right;\n    }\n\n    & td:nth-child(3) {\n        width: 50px;\n        text-align: right;\n    }\n\n    & div.description {\n        max-width: 540px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    & td span.date {\n        font-size: 0.8em;\n        color: var(--light-text-color);\n    }\n\n    &:hover {\n        cursor: pointer;\n        background-color: var(--table-heading-bg-color);\n    }\n\n    @media screen and (max-width: 700px) {        \n        & > table {\n            width: 100%;\n        }\n\n        & div.description {\n            max-width: 250px;\n        }\n\n        & td {\n            height: 40px;\n        }\n\n        & tr > td:first-child {\n            padding-left: 15px;\n        }\n\n        & tr > td:last-child {\n            padding-right: 15px;\n        }\n    }\n`;\n\nconst Transaction = ({obj, accountId, showDelete=false, onClick=()=>{}}) => {\n    const dispatch = useDispatch();\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const currentPage = useSelector(state => state.currentPage);\n\n    const remove = () => {     \n        if (obj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: obj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: obj.id});\n    }\n\n    let date = obj.date !== undefined ? format(parseISO(obj.date), 'MMM d, yyyy') : '';\n    let description = getType(obj, accountId, categories, funds, accounts, currentPage);\n\n    return (\n        <StyledComp onClick={onClick(obj)}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            { description.length > 0 ? <div className='description'>{ description }</div> : null }\n                            { description.length > 0 ? <span className='date'>{ date }</span> : <div className='description'>{ date }</div>}\n                        </td>\n                        <td>{getAmount(obj, categories, accountId)}</td>\n                        { showDelete ? <td><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px'/></td> : null }\n                    </tr>\n                </tbody>\n            </table>\n        </StyledComp>\n    );\n}\n\nconst getType = (transaction, accountId, categories, funds, accounts, page) => {\n    if (page === 'Categories') {\n        let id = transaction.account;\n        let account = accounts.find(obj => obj.id === id);\n        if (account !== undefined) {\n            if (transaction.description.length > 0) return account.name + ' - ' + transaction.description;\n            return account.name;\n        } else {\n            if (transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    if (page === 'Funds') {\n        if (transaction.description && transaction.description.length > 0) return transaction.description;\n        else return '';\n    }\n\n    if (accountId === undefined) return '';\n\n    //get category name\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            if (transaction.description.length > 0) return category.name + ' - ' + transaction.description;\n            return category.name;\n        } else {\n            if (transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    //get fund name\n    if (transaction.fund !== undefined) {\n        let fund = funds.find(obj => obj.id === transaction.fund);\n        if (fund !== undefined) {\n            if (transaction.description.length > 0) return `${fund.name} Fund - ${transaction.description}`;\n            return `${fund.name} Fund`;\n        }\n    }\n\n    //get transfer details\n    if (transaction.from !== undefined) {\n        if (transaction.from === accountId) {\n            let account = accounts.find(obj => obj.id === transaction.to);\n            if (account !== undefined) return `Transfered to ${account.name}`;\n        } else {\n            let account = accounts.find(obj => obj.id === transaction.from);\n            if (account !== undefined) return `Transfered from ${account.name}`;\n        }\n    }\n\n    return '';\n}\n\nexport default Transaction;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { TiArrowSortedDown } from 'react-icons/ti';\n\nconst StyledComp = styled.div`\n    width: 250px;\n    margin: 5px auto;\n    position: relative;\n\n    & > div > svg {\n        fill: var(--icon-color);\n    }\n\n    & > div.dropdownDisplay {\n        font-size: 1.5em;\n        font-weight: bold;\n        border-bottom: 2px solid var(--icon-color);\n        padding: 5px;\n        position: relative;\n        padding-right: 30px;\n        padding-left: 30px;\n        overflow: hidden;\n    }\n\n    & > div.dropdownDisplay > svg {\n        position: absolute;\n        right: 0px;\n        top: 2px;\n        font-size: 1.5em;\n    }\n\n    & > div.dropdownGroup {\n        border-left: 1px solid var(--menu-border-color);\n        border-bottom: ${props => props.open ? '1px solid var(--menu-border-color)' : 'none'};\n        border-right: 1px solid var(--menu-border-color);\n        position: absolute;\n        top: 100%;\n        left: 0px;\n        right: 0px;\n        background-color: var(--bg-color);\n        max-height: ${props => props.open ? props.maxHeight : '0px'};\n        overflow: scroll;\n        transition: 0.3s;\n    }\n\n    & div.dropdownItem {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n\n    & div.dropdownItem:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst HeaderDropdown = ({value, options=[], onChange}) => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n\n    let currentValue = options.find(obj => obj.value === value);\n    if (value === 'Edit') currentValue = {display: 'Edit'};\n\n    if (currentValue === undefined) {\n        currentValue = {display: 'Edit'};\n    }\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    }\n\n    const onClickItem = (itemValue) => () => {\n        onChange(itemValue);\n        setOpen(false);\n    }\n\n    const onClickEdit = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: true});\n    }\n\n    let maxHeight = (options.length * 40) + 40;\n    if (maxHeight > 300) maxHeight = 300;\n    \n    return (\n        <StyledComp open={open} maxHeight={maxHeight+'px'}>\n            <div className='dropdownDisplay' onClick={toggleOpen}>{currentValue.display}<TiArrowSortedDown/></div>\n            <div className='dropdownGroup'>\n            {\n                options.map(obj => <div key={'headerDropdown-'+obj.value} className='dropdownItem' onClick={onClickItem(obj.value)}>{obj.display}</div>)\n            }\n                <div className='dropdownItem' onClick={onClickEdit}>Edit</div>\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default HeaderDropdown;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { parseCurrency } from '../functions';\n\nconst StyledComp = styled.div`\n    margin: 10px;\n    font-size: 1em;\n    font-weight: bold;\n\n    & > table {\n        margin: auto;\n    }\n\n    & > table td:first-of-type {\n        text-align: right;\n    }\n\n    & > table td:last-of-type {\n        text-align: left;\n    }\n`;\n\nconst TotalsDisplay = ({label, value, fundObj}) => {\n    if (fundObj !== undefined) {\n        return (\n            <StyledComp>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Total Saved: </td>\n                            <td>{parseCurrency(value)}</td>\n                        </tr>\n                        {\n                            fundObj.target > 0 ?\n                                <React.Fragment>\n                                    <tr>\n                                        <td>Fund Target: </td>\n                                        <td>{parseCurrency(fundObj.target)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total Needed: </td>\n                                        <td>{parseCurrency(fundObj.remaining)}</td>\n                                    </tr>\n                                </React.Fragment> : null \n                        }\n                    </tbody>\n                </table>\n            </StyledComp>\n        );\n    }\n\n    return (\n        <StyledComp>\n            {label}: {parseCurrency(value)}\n        </StyledComp>\n    );\n}\n\nexport default TotalsDisplay;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    width: ${props => props.width+'px'};\n    border: 1px solid white;\n    position: fixed;\n    top: 50px;\n    background-color: var(--bg-color);\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    opacity: 0;\n    transition: 0.4s;\n    pointer-events: none;\n\n    &.visible {\n        opacity: 1;\n        transition: 0.4s;\n        pointer-events: all;\n    }\n`;\n\nconst Modal = ({children, width=350, visible=false}) => {\n    return (\n        <StyledComp width={width} className={visible ? 'visible' : ''}>{children}</StyledComp>\n    );\n}\n\nexport default Modal;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { formatDate, parseTransaction, parseCurrency } from '../functions';\n\nimport Button from './Button';\nimport IconButton from './IconButton';\nimport Grid from './Grid';\n\nconst StyledComp = styled.div`    \n    padding: 10px;\n\n    & > table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    & > table td {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        text-transform: capitalize;\n    }\n\n    & > table tr > td:first-child {\n        width: 110px;\n    }\n\n    & strong {\n        font-size: 1.3em;\n    }\n`;\n\nconst getTableRow = (heading, value) => {\n    if (value === undefined) return null;\n    if (value.length === 0) return null;\n\n    return <tr><td>{heading}</td><td>{value}</td></tr>\n}\n\nconst TransactionDetails = ({obj, onClose, onDelete}) => {\n    const dispatch = useDispatch();\n\n    if (obj === null) return null;\n    let parsedObj = parseTransaction(obj);\n\n    const remove = () => {     \n        if (parsedObj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: parsedObj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: parsedObj.id});\n        onClose();\n    }\n\n    return (\n        <StyledComp>\n            <Grid template=\"50px auto 50px\">\n                <div style={{textAlign: 'left'}}><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px' size=\"1.3em\"/></div>\n                <strong>Transaction Details</strong>\n            </Grid>\n\n            <table>\n                <tbody>\n                    { getTableRow('Type', parsedObj.type) }\n                    { getTableRow('From', parsedObj.from) }\n                    { getTableRow('To', parsedObj.to) }\n                    { getTableRow('Category', parsedObj.category) }\n                    { getTableRow('Account', parsedObj.account) }\n                    { getTableRow('Fund', parsedObj.fund) }\n                    { getTableRow('Date', formatDate(parsedObj.date)) }\n                    { getTableRow('Description', parsedObj.description) }\n                    { getTableRow('Amount', parseCurrency(parsedObj.amount)) }\n                </tbody>\n            </table>\n\n            <br/>\n\n            <Button onClick={onClose} value=\"Close\"/>\n        </StyledComp>\n    );\n}\n\nexport default TransactionDetails;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { format, parseISO, parse, compareAsc } from 'date-fns';\nimport { FaEdit } from 'react-icons/fa';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport Transaction from './Transaction';\nimport IconButton from './IconButton';\nimport HeaderDropdown from './HeaderDropdown';\nimport TotalsDisplay from './TotalsDisplay';\nimport Modal from './Modal';\nimport TransactionDetails from './TransactionDetails';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n    position: relative;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n    }\n`;\n\nconst StyledGroup = styled.div`\n    margin: 0px 10px;\n\n    & > div > div {\n        border-bottom: 1px solid gray;\n        padding: 3px;\n    }\n\n    & > div > div:first-of-type {\n        margin-top: 0px;\n        border-top: none;\n    }\n\n    & > div > div:last-of-type {\n        border-bottom: none;\n    }\n\n    & > div {\n        border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n        ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*51}px`};\n        overflow: hidden;\n        transition: 0.3s;\n    }\n\n    & > strong {\n        display: block;\n        width: 100%;\n        background-color: var(--menu-bg-color);\n        padding: 10px;\n        color: var(--menu-text-color);\n    }\n\n    & > strong:hover {\n        cursor: pointer;\n    }\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n\n        & > div > div {\n            padding: 0px;\n        }\n\n        & > div {\n            border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n            ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*45}px`};\n            overflow: hidden;\n            transition: 0.3s;\n        }\n    }\n`;\n\nconst EditButton = styled.div`\n    position: absolute;\n    right: 12px;\n    top: 10px;\n    font-size: 1.5em;\n\n    @media screen and (max-width: 700px) {\n        top: 15px;\n    }\n`;\n\nconst Transactions = ({transactions=[], heading='', id, onClickDropdown=()=>{}, objArray=[]}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const currentPage = useSelector(state => state.currentPage);\n    const [showDelete, setShowDelete] = useState(false);\n    const [closed, setClosed] = useState({});\n\n    const [details, setDetails] = useState({});\n    const [showDetails, setShowDetails] = useState(false);\n\n    let accountId = currentPage === 'Accounts' ? id : undefined;    \n    let currentObj = objArray.find(obj => obj.id === id);\n\n    //organise by month/year\n    let organisedObj = {};\n    transactions.forEach(obj => {\n        let date = obj.date;\n        let formatted = format(parseISO(date), 'MMMM yyyy');\n        if (organisedObj[formatted] === undefined) organisedObj[formatted] = [];\n        organisedObj[formatted].push(obj);\n    });\n\n    //put into an array and sort by date so newest first\n    let organisedArr = Object.keys(organisedObj).map(key => {\n        let sortedTransactions = organisedObj[key].sort((a,b) => {\n            return compareAsc(parseISO(b.date), parseISO(a.date));\n        });\n        return {month: key, transactions: sortedTransactions};\n    }).sort((a,b) => {\n        let first = parse(a.month, 'MMMM yyyy', new Date());\n        let second = parse(b.month, 'MMMM yyyy', new Date());\n        return compareAsc(second, first);\n    });\n\n    const toggleDelete = () => {\n        setShowDelete(!showDelete);\n    }\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    const onToggleGroup = (month) => () => {\n        let closedObj = {...closed};\n        closedObj[month] === undefined ? closedObj[month] = true : closedObj[month] = !closedObj[month];\n        setClosed(closedObj);\n    }\n\n    const onToggleDetails = (obj) => () => {\n        setDetails(obj);\n        setShowDetails(true);\n    }\n\n    const onCloseDetails = () => {\n        setShowDetails(false);\n    }\n\n    let total = transactions.reduce((t,c) => {\n        t += getAmount(c, categories, id, false);\n        return t;\n    }, 0);        \n\n    let negative = false;\n    if (currentObj && currentObj.startingBalance !== undefined) {\n        if (currentObj.type === 'expense') {\n            total -= parseFloat(currentObj.startingBalance);\n            negative = true;\n        } else total += parseFloat(currentObj.startingBalance);\n    }\n    \n    let categoryType = 'Expense';\n    if (currentPage === 'Categories') {\n        if (currentObj !== undefined) categoryType = currentObj.type;\n    }\n\n    let fundInfo = {};\n    if (currentPage === 'Funds') {\n        if (currentObj !== undefined) {\n            fundInfo = {\n                target: currentObj.targetAmount,\n                remaining: currentObj.targetAmount - total\n            }\n        }\n    }\n\n    return (\n        <StyledComp>\n            { isMobile ? null : <h4>{heading}</h4> }\n            { isMobile ? <HeaderDropdown value={id} options={objArray.map(obj => ({display: obj.name, value: obj.id}))} onChange={onChangePage} /> : null }\n            <Modal visible={showDetails}><TransactionDetails obj={details} onClose={onCloseDetails}/></Modal>\n            {/* <EditButton><IconButton Icon={FaEdit} onClick={toggleDelete}/></EditButton> */}\n            { currentPage === 'Accounts' ? <TotalsDisplay label=\"Balance\" value={total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'expense' ? <TotalsDisplay label=\"Total Spent\" value={-total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'income' ? <TotalsDisplay label=\"Total Earned\" value={total}/> : null }\n            { currentPage === 'Funds' ? <TotalsDisplay value={total} fundObj={fundInfo}/> : null }\n            {\n                organisedArr.length === 0 && objArray.length > 0 ? <div style={{margin: '10px'}}>No Transactions to Display</div> : null\n            }\n            {\n                organisedArr.map(group => {\n                    return (\n                        <StyledGroup key={'transactionGroup-'+group.month+id} open={closed[group.month] !== true} qty={group.transactions.length}>\n                            <strong onClick={onToggleGroup(group.month)}>{group.month}</strong>\n                            <div>\n                                { group.transactions.map(obj => <Transaction key={'transaction-'+obj.id} obj={obj} accountId={accountId} showDelete={showDelete} onClick={onToggleDetails}/>) }\n                            </div>\n                        </StyledGroup>\n                    )\n\n                })\n            }\n            {\n                currentObj && currentObj.startingBalance !== undefined ? (\n                    <StyledGroup>\n                        <strong>Opening Balance</strong>\n                        <Transaction obj={{date: currentObj.dateOpened, amount: negative ? -currentObj.startingBalance : currentObj.startingBalance, description: ''}} accountId={accountId}/>\n                    </StyledGroup>\n                ) : null\n            }\n        </StyledComp>\n    );\n}\n\nexport default Transactions;","import styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 90%;\n    max-width: 1150px;\n    margin: 10px auto;\n\n    @media screen and (max-width: 700px) {\n        width: 100%;\n        margin: 0px;\n    }\n`;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Input from './Input';\n\nimport { capitalize, filterDeleted } from '../functions';\n\nconst EditInput = ({label, defaultValue, value, onChange, width=undefined}) => {\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let itemWidth = '100px';\n    if (width === undefined && label === 'description') itemWidth = '300px';\n    else if (width !== undefined) itemWidth = width;\n\n    if (label === 'category') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={categories.map(obj => ({value: obj.id, display: obj.name}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'number') return <Input type=\"number\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue === 'date') return <Input type=\"date\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue.includes(',') > 0) return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={defaultValue.split(',').map(obj => ({value: obj, display: capitalize(obj)}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string') return <Input onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'boolean') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={[{display: 'Yes', value: true}, {display: 'No', value: false}]} width={itemWidth} noBorder={true}/>;\n}\n\nexport default EditInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Table from './Table';\nimport Button from './Button';\nimport EditInput from './EditInput';\n\nimport { fromCamelCase, checkIfCanDelete } from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    display: inline-block;\n    margin: 10px;\n    border-radius: 5px;\n    width: 40%;\n\n    & > div:first-child {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n        font-weight: bold;\n    }\n\n    & > div:last-child {\n        display: flex;\n    }\n\n    & > div:last-child > div {\n        padding: 10px;\n        width: 50%;\n    }\n\n    & > div:last-child > div:first-child {\n        border-right: 1px solid white;\n    }\n\n    & > div.popup {\n        background-color: rgba(0,0,0,0.5);\n        position: absolute;\n        top: 0px;\n        bottom: 0px;\n        left: 0px;\n        right: 0px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transform: scale(${props => props.open ? '1.0' : '0.0'});\n        transition: 0.3s;\n    }\n\n    & > div.popup > div {\n        width: 100%;\n        padding: 10px;\n    }\n`;\n\nconst MobileEditGroup = ({modal, obj, onChange, onDelete}) => {\n    const [open, setOpen] = useState(obj.name.length === 0 ? true : false);\n    const [editing, setEditing] = useState(false);\n\n    const onEdit = () => {\n        setOpen(true);\n        setEditing(true);\n    }\n\n    const onCancel = () => {\n        onDelete(obj.id)();\n    }\n\n    const close = () => {\n        if (obj.name.length === 0) return;\n        setOpen(false);\n        setEditing(false);\n    }\n\n    return (\n        <StyledComp open={open}>\n            <div>{obj.name}</div>\n            <div className=\"popup\">\n                <div>\n                    <Table key={'EditListTable-'+obj.id} style={{marginBottom: '10px', width: '100%', borderTop: '1px solid #555'}} padding='2px'>\n                        <tbody>\n                        {\n                            Object.keys(modal).map(key => {\n                                return (\n                                    <tr key={'EditListRow-'+key}>\n                                        <td style={{backgroundColor: '#222', fontWeight: 'bold'}}>{fromCamelCase(key)}</td>\n                                        <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='100%'/></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                        </tbody>\n                    </Table>\n                    { !editing ? <Button value=\"Cancel\" onClick={onCancel} width=\"150px\" inline={true} style={{marginRight: '5px'}}/> : null }\n                    <Button value=\"Close\" onClick={close} width=\"150px\" inline={true}/>\n                </div>\n            </div>\n            <div>\n                <div onClick={onEdit}>Edit</div>\n                { checkIfCanDelete(obj) ? <div onClick={onDelete(obj.id)}>Delete</div> : <div style={{color: 'grey'}}>Delete</div>}\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default MobileEditGroup;","const category = {\n    name: '',\n    description: '',\n    type: 'income,expense',\n    hidden: false,\n    startingBalance: 0\n};\n\nconst fund = {\n    name: '',\n    description: '',\n    targetAmount: 0,\n    complete: false,\n    startingBalance: 0\n}\n\nconst account = {\n    name: '',\n    note: '',\n    interestRate: 0.0,\n    startingBalance: 0,\n    defaultAccount: false,\n    closed: false,\n    extraCharges: 0,\n    currency: '£',\n    dateOpened: 'date'\n}\n\nconst budget = {\n    category: 0,\n    amount: 0,\n    startDate: 'date',\n    endDate: 'date'\n}\n\nexport const modals = {\n    categories: {\n        modal: category,\n        editString: '_CATEGORY'\n    },\n    funds: {\n        modal: fund,\n        editString: '_FUND'\n    },\n    accounts: {\n        modal: account,\n        editString: '_ACCOUNT'\n\n    },\n    budgets: {\n        modal: budget,\n        editString: '_BUDGET'\n    }\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useMediaQuery } from 'react-responsive';\nimport { format } from 'date-fns';\n\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport IconButton from '../components/IconButton';\nimport HeaderDropdown from '../components/HeaderDropdown';\nimport EditInput from '../components/EditInput';\nimport MobileEditGroup from '../components/MobileEditGroup';\n\nimport { modals } from '../modals';\nimport { fromCamelCase, checkIfCanDelete} from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid white;\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n    }\n`;\n\nconst EditList = ({array=[], vertical=false, onClickDropdown=()=>{}, id}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const currentPage = useSelector(state => state.currentPage);\n\n    const modalKey = currentPage.toLowerCase();\n    const modalObj = {...modals[modalKey]};\n    const modal = {...modalObj.modal};\n    const add = 'ADD'+modalObj.editString;\n    const update = 'UPDATE'+modalObj.editString;\n    const remove = 'REMOVE'+modalObj.editString; \n\n    const onChange = (obj, key) => (e) => {\n        let value = e.target.value;\n        if (typeof modal[key] === 'number') value = parseFloat(value);\n\n        obj[key] = value;\n        //make sure false and true are boolean not string\n        if (obj[key] === 'false') obj[key] = false;\n        if (obj[key] === 'true') obj[key] = true;\n        dispatch({type: update, payload: obj});\n    }\n\n    const onDelete = (id) => () => {\n        dispatch({type: remove, payload: id});\n    }\n\n    const onAdd = () => {      \n        let newObj = {...modal};\n        Object.keys(newObj).forEach(key => {\n            if (typeof newObj[key] === 'string' && newObj[key].includes(',')) newObj[key] = newObj[key].split(',')[0];\n            if (typeof newObj[key] === 'string' && newObj[key] === 'date') newObj[key] = format(new Date(), 'yyyy-MM-dd');\n        });  \n        dispatch({type: add, payload: newObj});\n    }\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    if (isMobile) return (\n        <StyledComp>\n            <HeaderDropdown value={'Edit'} options={array.map(obj => ({display: obj.name, value: obj.id}))} onChange={onChangePage} />\n            {\n                array.map(obj => {\n                    return (\n                        <MobileEditGroup key={'MobileEditGroup-'+obj.id} modal={modal} obj={obj} onChange={onChange} onDelete={onDelete}/>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n\n    if (true || isMobile) return (\n        <StyledComp>\n            <h4>Edit {currentPage}</h4>\n            {\n                array.map(obj => {\n                    return (\n                        <Table key={'EditListTable-'+obj.id} style={{display: 'inline-block', margin: '10px'}} padding='2px 5px'>\n                            <tbody>\n                                {\n                                    Object.keys(modal).map(key => {\n                                        return (\n                                            <tr key={'EditListRow-'+key}>\n                                                <th>{fromCamelCase(key)}</th>\n                                                <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='140px'/></td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                                <tr>\n                                    <td colSpan='2'>\n                                    { checkIfCanDelete(obj) \n                                        ? <Button value=\"Delete\" onClick={onDelete(obj.id)} width='50%' color='red'/> \n                                        : <div style={{height: 'var(--input-height)', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>Being Used</div> }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n\n    return (\n        <StyledComp>\n            <h4>Edit {currentPage}</h4>\n            <Table padding='2px'>\n                <thead>\n                    <tr>\n                    {\n                        Object.keys(modal).map(key => {\n                            return <td key={\"EditListHeading-\"+key}>{fromCamelCase(key)}</td>\n                        })\n                    }\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    array.map((obj, i) => {\n                        return (\n                            <tr key={\"EditListRow-\"+i}>\n                            {\n                                Object.keys(modal).map((key,j) => {\n                                    return (\n                                        <td key={\"EditListData-\"+key+i}><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)}/></td>\n                                    );\n                                })\n                            }\n                                { checkIfCanDelete(obj) ? <td><IconButton Icon={FaTrashAlt} onClick={onDelete(obj.id)} color='red'/></td> : <td></td> }\n                            </tr>\n                        );\n                    })\n                }\n                </tbody>\n            </Table>\n\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n}\n\nexport default EditList;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Categories = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const firstCategory = categories[0];\n    let firstCategoryId = firstCategory !== undefined ? firstCategory.id : undefined;\n    let firstCategoryName = firstCategory !== undefined ? firstCategory.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [category, setCategory] = useState(firstCategoryId);\n    const [categoryName, setCategoryName] = useState(firstCategoryName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (categories.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let category = categories.find(obj => obj.id === id);\n        setCategory(id);\n        setCategoryName(category.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.category !== undefined && obj.category === category ? true : false;\n    });    \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Categories'} array={categories} onClickObj={onClickObj} selected={category}/> }\n                    { editMode \n                        ? <EditList array={categories} onClickDropdown={onClickObj} id={category}/>\n                        : <Transactions transactions={filteredTransactions} heading={categoryName} onClickDropdown={onClickObj} objArray={categories} id={category}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Categories;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Funds = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const firstFund = funds[0];\n    let firstFundId = firstFund !== undefined ? firstFund.id : undefined;\n    let firstFundName = firstFund !== undefined ? firstFund.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const [fund, setFund] = useState(firstFundId);\n    const [fundName, setFundName] = useState(firstFundName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (funds.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let fund = funds.find(obj => obj.id === id);\n        setFund(id);\n        setFundName(fund.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    }); \n\n    const filteredFundAdditions = fundAdditions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    });\n\n    const combined = [...filteredTransactions, ...filteredFundAdditions];\n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Funds'} array={funds} onClickObj={onClickObj} selected={fund}/> }\n                    { editMode \n                        ? <EditList array={funds} onClickDropdown={onClickObj} id={fund}/>\n                        : <Transactions transactions={combined} heading={fundName} onClickDropdown={onClickObj} objArray={funds} id={fund}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Funds;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Accounts = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const firstAccount = accounts[0];\n    let firstAccountId = firstAccount !== undefined ? firstAccount.id : undefined;\n    let firstAccountName = firstAccount !== undefined ? firstAccount.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [account, setAccount] = useState(firstAccountId);\n    const [accountName, setAccountName] = useState(firstAccountName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (accounts.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let account = accounts.find(obj => obj.id === id);\n        setAccount(id);\n        setAccountName(account.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        if (obj.from !== undefined && obj.to !== undefined && (obj.from === account || obj.to === account)) return true; \n        return obj.account !== undefined && obj.account === account ? true : false;\n    });   \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Accounts'} array={accounts} onClickObj={onClickObj} selected={account}/> }\n                    { editMode \n                        ? <EditList array={accounts} vertical={true} onClickDropdown={onClickObj} id={account}/>\n                        : <Transactions transactions={filteredTransactions} heading={accountName} id={account} onClickDropdown={onClickObj} objArray={accounts}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Accounts;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { changeColourScheme } from '../functions';\nimport { sync } from '../redux/store';\n\nimport Container from '../components/Container';\nimport LabelledInput from '../components/LabelledInput';\nimport Button from '../components/Button';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst Settings = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user);\n    const lastSync = useSelector(state => state.lastSync);\n\n    const payPeriodType = useSelector(state => state.general.payPeriodType);\n    const currencySymbol = useSelector(state => state.general.currencySymbol);\n    const showDecimals = useSelector(state => state.general.showDecimals);\n    const startDate = useSelector(state => state.general.startDate);\n    const colourScheme = useSelector(state => state.general.colourScheme);\n\n    const setPayPeriodType = (e) => dispatch({type: 'SET_PAY_PERIOD_TYPE', payload: e.target.value});\n    const setCurrencySymbol = (e) => dispatch({type: 'SET_CURRENCY_SYMBOL', payload: e.target.value});\n    const setShowDecimals = (e) => {\n        let value = e.target.value === 'false' ? false : true;\n        dispatch({type: 'SET_SHOW_DECIMALS', payload: value});\n    }\n    const setStartDate = (e) => dispatch({type: 'SET_START_DATE', payload: e.target.value});\n    const setColourScheme = (value) => dispatch({type: 'SET_COLOUR_SCHEME', payload: value});\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions,\n            user: state.user\n        };\n    });\n\n    const onChangeColorScheme = (e) => {\n        let value = e.target.value;\n        changeColourScheme(value);\n        setColourScheme(value);\n    }\n\n    const manualSync = () => {\n        sync(backupData, dispatch, true);\n    }\n\n    const login = () => {\n        dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n        fetch(url+'api/login', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            if (data.status === 'success') {\n                setUsername('');\n                setPassword('');\n                dispatch({type: 'SET_USER', payload: data.user});\n            } else {\n                if (data.type === 'logout') dispatch({type: 'SET_USER', payload: null});\n                dispatch({type: 'SET_MESSAGE', payload: {text: data.message, type: 'error'}});\n            }\n        }).catch(err => {\n            console.log(err.message);\n            dispatch({type: 'SET_MESSAGE', payload: {text: 'Failed to contact server.', type: 'error'}});\n        });\n    }\n\n    const register = () => {\n        if (username.length < 3) {\n            dispatch({type: 'SET_MESSAGE', payload: {text: 'Username should be 3 or more characters', type: 'error'}});\n            return;\n        }\n\n        if (password.length < 5) {\n            dispatch({type: 'SET_MESSAGE', payload: {text: 'Password should be 5 or more characters', type: 'error'}});\n            return;\n        }\n\n        dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n        fetch(url+'api/register', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            console.log(data);\n            setUsername('');\n            setPassword('');\n            if (data.status === 'success') dispatch({type: 'SET_USER', payload: data.user});\n            else dispatch({type: 'SET_MESSAGE', payload: {text: data.message, type: 'error'}});\n        }).catch(err => {\n            console.log(err.message);\n            dispatch({type: 'SET_USER', payload: null});\n            dispatch({type: 'SET_MESSAGE', payload: {text: 'Failed to contact server. Please try again.', type: 'error'}});\n        });\n    }\n\n    const logout = () => {\n        dispatch({type: 'SET_USER', payload: null});\n    }\n\n    const onChangeUsername = (e) => setUsername(e.target.value);\n    const onChangePassword = (e) => setPassword(e.target.value);\n\n    let lastSyncDate = lastSync.toFixed(0);\n    let lastSyncDisplay = `${lastSyncDate.slice(6,8)}/${lastSyncDate.slice(4,6)}/${lastSyncDate.slice(0,4)} at ${lastSyncDate.slice(8,10)}:${lastSyncDate.slice(10,12)}`;\n    if (lastSync === 0 || lastSync === undefined) lastSyncDisplay = 'Never';\n\n    return (\n        <div>\n            <Container>\n                <h4>Settings</h4>\n\n                <LabelledInput label=\"Start Date\" type=\"date\" value={startDate} onChange={setStartDate} labelWidth='150px'/>\n                <LabelledInput label=\"Currency Symbol\" value={currencySymbol} onChange={setCurrencySymbol} labelWidth='150px'/>\n                <LabelledInput label=\"Show Decimals\" type=\"dropdown\" value={showDecimals} options={[{value: true, display: 'Yes'}, {value: false, display: 'No'}]} onChange={setShowDecimals} labelWidth='150px'/>\n                <LabelledInput label=\"Pay Period\" type=\"dropdown\" value={payPeriodType} onChange={setPayPeriodType} labelWidth='150px' options={[\n                    {value: 'monthly', display: 'Monthly'}, \n                    {value: 'fourWeekly', display: '4-Weekly'}, \n                    {value: 'twoWeekly', display: '2-Weekly'}, \n                    {value: 'weekly', display: 'Weekly'}\n                ]}/>\n                <LabelledInput label=\"Colour Scheme\" type=\"dropdown\" value={colourScheme} options={[{value: 'dark', display: 'Dark'}, {value: 'black', display: 'Black'}, {value: 'light', display: 'Light'}]} onChange={onChangeColorScheme} labelWidth='150px'/>\n\n                <h4>Syncing</h4>\n                <p>This will allow you to upload your data to a server for backup and to sync with other devices.</p>\n                <p>Last synced on: {lastSyncDisplay}</p>\n                { user === null \n                ?   <div>\n                        <LabelledInput label=\"Username\" value={username} onChange={onChangeUsername}/>\n                        <LabelledInput label=\"Password\" value={password} onChange={onChangePassword} type=\"password\"/>\n                        <Button value=\"Login\" width=\"120px\"inline={true} onClick={login}/> <Button value=\"Register\" width=\"120px\"inline={true} onClick={register}/>\n                    </div>\n\n                :   <div>\n                        <Button value=\"Sync Now\" width=\"120px\"inline={true} onClick={manualSync}/> <Button value=\"Logout\" width=\"120px\"inline={true} onClick={logout}/>\n                    </div>\n                }\n            </Container>\n        </div>\n    );\n}\n\nexport default Settings;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { IoIosAdd, IoIosRemove } from 'react-icons/io';\n\nimport AddTransaction from './AddTransaction';\n\nconst BottomArea = styled.div`\n    position: fixed;\n    bottom: -275px;\n    transition: 0.3s;\n    width: 100%;\n    height: 288px;\n    background-color: var(--footer-bg);\n    padding: 10px;\n    border: 2px solid var(--footer-bg);\n    z-index: 3;\n    ${props => props.open ? 'transform: translateY(-275px);' : ''};\n\n    & > div {\n        margin: auto;\n    }\n`;\n\nconst MobileAddButton = styled.div`\n    & > * {\n        transition: 0.3s;\n    }\n\n    & > svg {\n        background-color: var(--footer-bg);\n        border: 3px solid var(--footer-border);\n        border-radius: 100%;\n        font-size: 51px;\n        position: fixed;\n        bottom: 5px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-275px' : '0px'});\n        z-index: 4;\n        fill: var(--footer-border);\n    }\n\n    & > div.left, & > div.right {\n        border-bottom: 3px solid var(--footer-border);\n        position: fixed;\n        bottom: 11px;\n        width: calc(50% - 22.5px);\n        height: 20px;\n        z-index: 4;\n        ${props => props.open ? 'transform: translateY(-275px);' : ''};\n    }\n\n    & > div.right {\n        border-left: 3px solid var(--footer-border);\n        right: 0px;\n        border-radius: 0px 0px 0px 20px;\n    }\n\n    & > div.left {\n        border-right: 3px solid var(--footer-border);\n        left: 0px;\n        border-radius: 0px 0px 20px 0px;\n    }\n\n    & > div.middle {\n        background-color: var(--footer-bg);\n        position: fixed;\n        z-index: 1;\n        width: 55px;\n        height: 55px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-275px' : '0px'}) rotate(-45deg);\n        bottom: -16px;\n        border-radius: 0px 51px 0px 100%;\n    }\n`;\n\nconst Footer = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n    const [isOpen, setOpen] = useState(false);\n    const [isFullyOpen, setFullyOpen] = useState(false);\n\n    if (!isMobile) return null;\n\n    const toggle = () => {\n        setOpen(!isOpen);\n\n        setTimeout(() => {\n            setFullyOpen(!isFullyOpen);\n        }, 300);\n    }\n\n    const onAddTransaction = () => {\n        setOpen(false);\n        setTimeout(() => {\n            setFullyOpen(false);\n        }, 300);\n    }\n\n    return (\n        <div>\n            <MobileAddButton open={isOpen}>\n                { isFullyOpen ? <IoIosRemove onClick={toggle}/> : <IoIosAdd onClick={toggle}/> }\n                <div className=\"right\"></div>\n                <div className=\"left\"></div>\n                <div className=\"middle\"></div>\n            </MobileAddButton>\n            <BottomArea open={isOpen}>\n                <AddTransaction onAdd={onAddTransaction}/> \n                {/* { isOpen ? <AddTransaction onAdd={onAddTransaction}/> : isFullyOpen ? <AddTransaction onAdd={onAddTransaction}/> : null } */}\n            </BottomArea>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { sync } from './redux/store';\n\nimport Header from './components/Header';\nimport TopPopup from './components/TopPopup';\nimport MessagePopup from './components/MessagePopup';\n\nimport SummaryTables from './containers/SummaryTables';\nimport AddTransaction from './containers/AddTransaction';\nimport Categories from './containers/Categories';\nimport Funds from './containers/Funds';\nimport Accounts from './containers/Accounts';\nimport Settings from './containers/Settings';\nimport Footer from './containers/Footer';\n\nfunction App() {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.currentPage);\n    const addTransaction = useSelector(state => state.addTransaction);\n    const user = useSelector(state => state.user);\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions\n        };\n    });\n\n    //sync with server when starting app\n    useEffect(() => {\n        if (user !== null) sync(backupData, dispatch);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <MessagePopup/>\n            { page === 'Home' ? <SummaryTables/> : null }\n            { page === 'Categories' ? <Categories/> : null }\n            { page === 'Funds' ? <Funds/> : null }\n            { page === 'Accounts' ? <Accounts/> : null }\n            { page === 'Settings' ? <Settings/> : null }\n            { addTransaction ? <TopPopup><AddTransaction/></TopPopup> : null }\n            <Footer/>\n        </div>\n    );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n      <Provider store={store}>\n          <App />\n      </Provider>\n        , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}