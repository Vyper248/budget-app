{"version":3,"sources":["redux/reducer.js","functions.js","redux/store.js","components/Header.js","components/TopPopup.js","components/MessagePopup.js","components/Grid.js","components/BudgetInput.js","components/AmountGroup.js","components/IconButton.js","components/AccountSummary.js","components/Transaction.js","components/TransactionList.js","components/Table.js","components/SummaryTable.js","containers/SummaryTables.js","components/Input.js","components/LabelledInput.js","components/Button.js","components/TransactionForm.js","containers/AddTransaction.js","components/ListContainer.js","components/List.js","components/HeaderDropdown.js","components/TotalsDisplay.js","components/Modal.js","components/TransactionDetails.js","components/Transactions.js","components/Container.js","components/EditInput.js","components/MobileEditGroup.js","modals.js","containers/EditList.js","containers/Categories.js","containers/Funds.js","containers/Accounts.js","containers/Settings.js","containers/InterestCalc.js","containers/Breakdown.js","containers/FundList.js","containers/Spendings.js","containers/SavingGoal.js","containers/VisaTool.js","containers/Tools.js","containers/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","currentPage","addTransaction","editMode","lastSync","user","fetching","message","text","type","general","payPeriodType","currencySymbol","colourScheme","showDecimals","startDate","swapSummaries","periodsToDisplay","reverseSummaryTable","savingsGoalDate","savingsGoalTarget","salary","updated","accounts","categories","id","name","description","hidden","dateCreated","budgets","funds","targetAmount","complete","fundAdditions","transactions","updateBudget","newBudget","Number","format","Date","previousBudget","getPreviousBudget","category","budget","find","obj","undefined","amount","removeObject","replaceObject","newBudgets","sort","a","b","compareAsc","parseISO","date","i","length","compareDesc","arr","map","deleted","object","copy","index","findIndex","splice","replaceAccount","defaultAccount","forEach","getNewArray","getAllDates","periodLength","daysInPeriod","getDaysInPeriod","currentDate","today","dates","push","add","months","days","getAccountSummary","objs","account","closed","total","filter","from","to","reduce","t","c","getAmount","startingBalance","parseFloat","createNameObjects","categoryNames","fundNames","fund","getFundTarget","tr","getTransactionHeading","getPeriodOfTransaction","trDate","periodDate","parseCurrency","value","store","getState","isNaN","string","toFixed","negative","includes","replace","split","fromRight","unshift","join","checkBudget","categoryId","number","getLatestBudget","checkFundTarget","target","capitalize","slice","toUpperCase","fromCamelCase","replaceCapitals","transaction","accountId","asCurrency","checkIfCanDelete","allObjs","filterDeleted","ignoreHidden","formatDate","formatMethod","reverseDate","parseTransaction","copyTr","changeColourScheme","scheme","root","document","documentElement","style","setProperty","url","sync","state","dispatch","manual","setUser","payload","setMessage","setFetching","backupData","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","data","status","console","log","catch","err","createStore","action","dateValue","newAccounts","newCategories","newFunds","newFundAdditions","newTransactions","updatedAccounts","updatedCategories","updatedBudgets","updatedFunds","updatedFundAdditions","updatedTransactions","removedAccounts","removedCategories","removedBudgets","removedFunds","removedFundAdditions","removedTransactions","localStorage","getItem","parse","getFromLocalStorage","applyMiddleware","next","result","setItem","StyledComp","styled","div","props","isMobile","HeaderButton","page","alignment","icon","useDispatch","className","useSelector","onClick","Header","useMediaQuery","maxWidth","width","dragging","StyledInnerComp","TopPopup","children","onClose","posX","posY","useState","setDragging","startClientX","setStartClientX","startClientY","setStartClientY","startX","setStartX","startY","setStartY","x","setX","y","setY","ref","useRef","useEffect","checkYPos","height","current","offsetHeight","newPos","window","innerHeight","onMouseUp","onMouseMove","e","objWidth","offsetWidth","xDiff","clientX","yDiff","clientY","newX","newY","innerWidth","top","left","onMouseDown","MessagePopup","Grid","template","start","end","input","BudgetInput","oldValue","setOldValue","currentValue","setCurrentValue","onChange","onBlur","carryOver","AmountGroup","title","editBudget","setEditMode","color","size","bordered","topAdjust","IconButton","Icon","AccountSummary","key","maxDescWidth","hover","getType","Transaction","showDelete","FaTrashAlt","TransactionList","heading","sortedTransactions","Table","table","padding","SummaryTable","incomeCategories","filteredFunds","expenseCategories","summaryTotals","rows","editCategory","toggleEditCategory","onClickValue","transactionId","getValueRow","tdClassName","remaining","minWidth","valueObj","SummaryTables","periods","latestDate","latestDates","numberOfPeriods","reverse","getLatestDates","setLatestDate","setEditCategory","showTransactions","setShowTransactions","transactionArray","setTransactionArray","transactionHeading","setTransactionHeading","transactionPos","setTransactionPos","setTransactionId","transactionType","setTransactionType","filteredTransactions","filteredFundAdditions","filteredFundTransactions","addFunc","Object","values","row","getSummaryRows","saved","spent","addToTotals","totalRemaining","getSummaryTotals","accountSummary","accountTotal","setPreviousDate","newIndex","indexOf","newDate","setNextDate","displayDate","getHeading","fontSize","fontWeight","margin","FiArrowLeft","FiArrowRight","marginBottom","leftPos","offsetLeft","topPos","offsetTop","noBorder","Input","placeholder","options","groups","others","as","option","display","group","label","disabled","labelWidth","LabelledInput","inputValue","inline","Loader","Button","loading","selected","TransactionForm","buttonLabel","defaultAccountObj","setId","setType","setAmount","setDescription","setDate","setAccount","setFund","setCategory","setFrom","setTo","reset","types","groupValue","fundAddition","AddTransaction","onAdd","addFundAddition","ListContainer","List","array","hiddenArray","onClickObj","open","maxHeight","HeaderDropdown","setOpen","onClickItem","itemValue","visibleOptions","hiddenOptions","TotalsDisplay","fundObj","Fragment","Modal","visible","getTableRow","TransactionDetails","onDelete","onEdit","parsedObj","textAlign","FaEdit","newObj","getTable","setTimeout","StyledGroup","qty","Transactions","onClickDropdown","objArray","setClosed","details","setDetails","showDetails","setShowDetails","currentObj","organisedObj","formatted","organisedArr","keys","month","first","second","onToggleDetails","categoryType","fundInfo","headerOptions","closedObj","dateOpened","Container","paddingBottom","EditInput","defaultValue","itemWidth","MobileEditGroup","modal","editing","setEditing","borderTop","backgroundColor","marginRight","modals","editString","note","interestRate","extraCharges","endDate","EditList","vertical","modalKey","toLowerCase","modalObj","update","remove","colSpan","alignItems","justifyContent","Categories","allCategories","cat","hiddenCategories","firstCategory","firstCategoryId","firstCategoryName","categoryName","setCategoryName","React","Funds","allFunds","hiddenFunds","firstFund","firstFundId","firstFundName","fundName","setFundName","combined","Accounts","allAccounts","closedAccounts","firstAccount","firstAccountId","firstAccountName","accountName","setAccountName","Settings","importData","setImportData","username","setUsername","password","setPassword","restoreMessage","setRestoreMessage","fileInput","lastSyncDate","lastSyncDisplay","parseInt","setColourScheme","dataStr","encodeURIComponent","link","createElement","setAttribute","click","file","files","match","reader","FileReader","onload","readAsText","addExtras","totalYearly","totalMonthly","extras","getExtraDetails","monthlyInterest","InterestCalc","customInterest","setCustomInterest","customAmount","setCustomAmount","customCharges","setCustomCharges","yearlyInterest","Breakdown","fromDate","setFromDate","toDate","setToDate","firstPeriod","tableObj","totals","accountObj","period","totalAmount","min","max","dateObj","FundList","Spendings","accountTotals","setupTableObj","itemObj","parsed","SavingsGoal","targetDate","totalMoney","amountToSave","monthsToTarget","differenceInMonths","monthlySavings","VisaTool","savingsNeeded","moneyRequired","Tools","subPage","setSubPage","onClickSubMenu","SavingGoal","BottomArea","MobileAddButton","Footer","isOpen","isFullyOpen","setFullyOpen","toggle","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.40ee3aa6.chunk.js","sourcesContent":["import { format, compareAsc, compareDesc, parseISO } from 'date-fns';\n\nconst initialState = {\n    currentPage: 'Home',\n    addTransaction: false,\n    editMode: false,\n    lastSync: 0,\n    user: null,\n    fetching: false,\n    message: {\n        text: '', \n        type: ''\n    },\n    general: {\n        payPeriodType: 'fourWeekly',\n        currencySymbol: '£',\n        colourScheme: 'dark',\n        showDecimals: true,\n        startDate: '2019-11-08',\n        swapSummaries: false,\n        periodsToDisplay: 6,\n        reverseSummaryTable: false,\n        savingsGoalDate: '2019-11-08',\n        savingsGoalTarget: 0,\n        salary: 0,\n        updated: 20200220153001,\n    },\n    accounts: [],\n    categories: [\n        {\n            id: 20200723153000,\n            name: 'Earnings',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153001,\n            name: 'Interest',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153102,\n            name: 'Food',\n            description: '',\n            type: 'expense',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n    ],\n    budgets: [],\n    funds: [\n        {\n            id: 20200723153130,\n            name: 'Savings',\n            description: 'General Savings',\n            targetAmount: 0,\n            complete: false,\n            dateCreated: '2020-01-03'\n        }\n    ],\n    fundAdditions: [],\n    transactions: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let value = action.payload;\n    let dateValue = Number(format(new Date(),'yyyyMMddHHmmss'));\n    switch(action.type) {\n        case 'SET_CURRENT_PAGE': return {...state, currentPage: value, editMode: false, addTransaction: false, message: {text: '', type: ''}};\n        case 'SET_ADD_TRANSACTION': return {...state, addTransaction: value};\n        case 'SET_EDIT_MODE': return {...state, editMode: value};\n        case 'SET_USER': return {...state, user: value};\n        case 'SET_FETCHING': return {...state, fetching: value};\n        case 'SET_MESSAGE': return {...state, message: value};\n\n        case 'SET_PAY_PERIOD_TYPE': return {...state, general: {...state.general, payPeriodType: value, updated: dateValue}};\n        case 'SET_COLOUR_SCHEME': return {...state, general: {...state.general, colourScheme: value, updated: dateValue}};\n        case 'SET_CURRENCY_SYMBOL': return {...state, general: {...state.general, currencySymbol: value, updated: dateValue}};\n        case 'SET_SHOW_DECIMALS': return {...state, general: {...state.general, showDecimals: value, updated: dateValue}};\n        case 'SET_START_DATE': return {...state, general: {...state.general, startDate: value, updated: dateValue}};\n        case 'SET_SAVINGS_GOAL_DATE': return {...state, general: {...state.general, savingsGoalDate: value, updated: dateValue}};\n        case 'SET_SAVINGS_GOAL_TARGET': return {...state, general: {...state.general, savingsGoalTarget: value, updated: dateValue}};\n        case 'SET_SALARY': return {...state, general: {...state.general, salary: value, updated: dateValue}};\n        case 'SET_PERIODS_TO_DISPLAY': return {...state, general: {...state.general, periodsToDisplay: value, updated: dateValue}};\n        case 'SET_SWAP_SUMMARIES': return {...state, general: {...state.general, swapSummaries: value, updated: dateValue}};\n        case 'SET_REVERSE_SUMMARY_TABLE': return {...state, general: {...state.general, reverseSummaryTable: value, updated: dateValue}};\n\n        case 'ADD_ACCOUNT': let newAccounts = getNewArray(state.accounts, value); return {...state, accounts: newAccounts};\n        case 'ADD_CATEGORY': let newCategories = getNewArray(state.categories, value); return {...state, categories: newCategories};\n        case 'ADD_BUDGET': let newBudgets = getNewArray(state.budgets, value); return {...state, budgets: newBudgets};\n        case 'ADD_FUND': let newFunds = getNewArray(state.funds, value); return {...state, funds: newFunds};\n        case 'ADD_FUND_ADDITION': let newFundAdditions = getNewArray(state.fundAdditions, value); return {...state, fundAdditions: newFundAdditions, addTransaction: false};\n        case 'ADD_TRANSACTION': let newTransactions = getNewArray(state.transactions, value); return {...state, transactions: newTransactions, addTransaction: false};\n\n        case 'UPDATE_ACCOUNT': let updatedAccounts = replaceAccount(state.accounts, value); return {...state, accounts: updatedAccounts};\n        case 'UPDATE_CATEGORY': let updatedCategories = replaceObject(state.categories, value); return {...state, categories: updatedCategories};\n        case 'UPDATE_BUDGET': let updatedBudgets = updateBudget(state.budgets, value); return {...state, budgets: updatedBudgets};\n        case 'UPDATE_FUND': let updatedFunds = replaceObject(state.funds, value); return {...state, funds: updatedFunds};\n        case 'UPDATE_FUND_ADDITION': let updatedFundAdditions = replaceObject(state.fundAdditions, value); return {...state, fundAdditions: updatedFundAdditions};\n        case 'UPDATE_TRANSACTION': let updatedTransactions = replaceObject(state.transactions, value); return {...state, transactions: updatedTransactions, addTransaction: false};\n\n        case 'REMOVE_ACCOUNT': let removedAccounts = removeObject(state.accounts, value); return {...state, accounts: removedAccounts};\n        case 'REMOVE_CATEGORY': let removedCategories = removeObject(state.categories, value); return {...state, categories: removedCategories};\n        case 'REMOVE_BUDGET': let removedBudgets = removeObject(state.budgets, value); return {...state, budgets: removedBudgets};\n        case 'REMOVE_FUND': let removedFunds = removeObject(state.funds, value); return {...state, funds: removedFunds};\n        case 'REMOVE_FUND_ADDITION': let removedFundAdditions = removeObject(state.fundAdditions, value); return {...state, fundAdditions: removedFundAdditions};\n        case 'REMOVE_TRANSACTION': let removedTransactions = removeObject(state.transactions, value); return {...state, transactions: removedTransactions};\n\n        case 'SYNC': return {...state, ...value, lastSync: dateValue};\n        case 'IMPORT_BACKUP': return {...state, ...value};\n        default: return state;\n    }\n}\n\nconst updateBudget = (budgets, newBudget) => {\n    newBudget.id = Number(format(new Date(),'yyyyMMddHHmmss')); \n    //get previous budget\n    let previousBudget = getPreviousBudget(budgets, newBudget.startDate, newBudget.category);\n\n    //check if there's already a budget with this start date\n    let budget = budgets.find(obj => obj.startDate === newBudget.startDate && obj.category === newBudget.category);\n    if (budget !== undefined) {\n        //check if this budget is same as previous - then delete\n        if (previousBudget !== undefined && previousBudget.amount === newBudget.amount) {\n            return removeObject(budgets, budget.id);\n        }\n\n        budget.amount = newBudget.amount;\n        return replaceObject(budgets, budget);\n    }\n\n    //if there's no budget already, but new budget is same as previous budget, don't do anything\n    if (previousBudget !== undefined && newBudget.amount === previousBudget.amount) return budgets;\n\n    //if no budget already, and new budget is different, then add new\n    let newBudgets = [...budgets, newBudget];\n    newBudgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    return newBudgets;\n}\n\nconst getPreviousBudget = (budgets, date, category) => {\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) === 1) return budget;\n    }\n    return undefined;\n}\n\nconst removeObject = (arr, id) => {\n    return arr.map(obj => {\n        if (obj.id === id) {\n            let date = Number(format(new Date(),'yyyyMMddHHmmss'));\n            return {id: obj.id, deleted: date};\n        } else return obj;\n    });\n}\n\nconst replaceObject = (arr, object) => {\n    let copy = [...arr];\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst replaceAccount = (arr, object) => {\n    let copy = [...arr];\n\n    //there can only be one default account\n    if (object.defaultAccount === true) {\n        copy.forEach(obj => obj.id !== object.id ? obj.defaultAccount = false : null);\n    }\n\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst getNewArray = (arr, object) => {\n    object.id = Number(format(new Date(),'yyyyMMddHHmmss'));    \n    return [...arr, object];\n}","import { add, compareAsc, compareDesc, parseISO, format } from 'date-fns';\nimport store from './redux/store';\n\nexport const getLatestDates = (startDate, periodLength, periods=0) => {\n    let daysInPeriod = getDaysInPeriod(periodLength);\n\n    //go forwards from starting date to todays date\n    let currentDate = parseISO(startDate);\n    let today = new Date();\n\n    while (compareAsc(today, currentDate) === 1) {\n        if (periodLength === 'monthly') currentDate = add(currentDate, {months: 1});\n        else currentDate = add(currentDate, {days: daysInPeriod});\n    }\n\n    //go back 1 pay period to get last pay date\n    let latestDate = periodLength === 'monthly' ? add(currentDate, {months: -1}) : add(currentDate, {days: -daysInPeriod});\n\n    //go back and add to array previous pay periods (up to 12/13);\n    let latestDates = [];\n    let numberOfPeriods = periodLength === 'fourWeekly' ? 13 : 12;\n    if (periods > 0) numberOfPeriods = periods;\n    for (let i = 0; i < numberOfPeriods; i++) {\n        latestDates.push(format(latestDate, 'yyyy-MM-dd'));\n        latestDate = periodLength === 'monthly' ? add(latestDate, {months: -1}) : add(latestDate, {days: -daysInPeriod});\n        if (compareAsc(parseISO(startDate), latestDate) >= 1) break;\n    }\n\n    latestDates.reverse();\n\n    return latestDates;\n};\n\nexport const getAllDates = (startDate, periodLength) => {\n    let daysInPeriod = getDaysInPeriod(periodLength);\n\n    //go forwards from starting date to todays date\n    let currentDate = parseISO(startDate);\n    let today = new Date();\n\n    let dates = [];\n\n    while (compareAsc(today, currentDate) === 1) {\n        dates.push(format(currentDate, 'yyyy-MM-dd'));\n        if (periodLength === 'monthly') currentDate = add(currentDate, {months: 1});\n        else currentDate = add(currentDate, {days: daysInPeriod});\n    }\n\n    return dates;\n}\n\nexport const getDaysInPeriod = (periodLength) => {\n    switch (periodLength) {\n        case 'monthly': return 30;\n        case 'weekly': return 7;\n        case 'twoWeekly': return 14;\n        case 'fourWeekly': return 28;\n        default: return 30;\n    }\n}\n\nexport const getSummaryTotals = (transactions, funds, categories, fundAdditions) => {\n    let obj = {};\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //make sure every key has a value even if no transactions for it\n    funds.forEach(fund => {\n        let saved = fund.startingBalance > 0 ? fund.startingBalance : 0;\n        obj[fund.name] = {saved: saved, target: fund.targetAmount, spent: 0, remaining: saved};\n    });\n    categories.forEach(category => obj[category.name] = category.startingBalance > 0 ? category.startingBalance : 0);\n\n    const addToTotals = tr => {\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n\n        if (tr.fund !== undefined) {\n            let target = getFundTarget(funds, tr);            \n            if (obj[heading] === undefined) obj[heading] = {saved: 0, target: target, spent: 0, remaining: 0};            \n            \n            if (tr.account > 0) obj[heading].spent += tr.amount;\n            else obj[heading].saved += tr.amount;\n\n            obj[heading].remaining = obj[heading].saved - obj[heading].spent;\n\n            return;\n        }\n\n        if (obj[heading] === undefined) obj[heading] = 0;\n        obj[heading] += tr.amount;\n    }\n\n    transactions.forEach(addToTotals);\n    fundAdditions.forEach(addToTotals);\n\n    //work out total remaining\n    const incomeCategories = categories.filter(obj => obj.type === 'income');\n    const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n    let totalRemaining = 0;\n    incomeCategories.forEach(category => totalRemaining += obj[category.name]);\n    expenseCategories.forEach(category => totalRemaining -= obj[category.name]);\n    funds.forEach(fund => totalRemaining -= obj[fund.name].saved);\n    obj.remaining = totalRemaining;\n\n    return obj;\n}\n\nexport const getSummaryRows = (dates, transactions, funds, categories, fundAdditions) => {\n    if (dates.length === 0) return [];    \n\n    //create object to store final values\n    let obj = {};\n    dates.forEach(date => obj[date] = {});\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //filter out transactions that happened before first date and those which are for funds\n    let filteredTransactions = transactions.filter(tr => {\n        if (tr.fund !== undefined) return false;\n        if (tr.type === 'transfer') return false;\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    });\n\n    //filter out fund additions that happened before first date\n    let filteredFundAdditions = fundAdditions.filter(tr => {\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    });\n\n    //filter out transactions for funds, to be added after remaining amounts have been calculated\n    let filteredFundTransactions = transactions.filter(tr => {\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) < 0) return false;\n        if (tr.fund !== undefined) return true;\n        return false;\n    });\n\n    //add transaction amounts to correct heading in object\n    const addFunc = (negative) => (tr) => {\n        let periodDate = getPeriodOfTransaction(dates, tr.date);\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n        if (obj[periodDate][heading] === undefined) obj[periodDate][heading] = {amount: 0, transactions: []};\n        if (negative === true) obj[periodDate][heading].amount -= tr.amount;\n        else obj[periodDate][heading].amount += tr.amount;\n\n        obj[periodDate][heading].transactions.push(tr);\n    }\n    filteredTransactions.forEach(addFunc(false));\n    filteredFundAdditions.forEach(addFunc(false));\n\n    //calculate remaining amount in each period\n    Object.values(obj).forEach(row => {        \n        const incomeCategories = categories.filter(obj => obj.type === 'income');\n        const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n        let remaining = 0;\n        incomeCategories.forEach(obj => remaining += row[obj.name] !== undefined ? row[obj.name].amount : 0);\n        expenseCategories.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name].amount : 0);\n        funds.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name].amount : 0);\n        \n        row.remaining = remaining;\n    });\n\n    //add fund transactions, shouldn't have any effect on remaining amount as they come out of the fund instead\n    filteredFundTransactions.forEach(addFunc(true));\n    \n    return obj;\n};\n\nexport const getAccountSummary = (transactions, accounts, categories) => {\n    let objs = [];\n\n    accounts.forEach(account => {\n        if (account.closed) return;\n\n        const filteredTransactions = transactions.filter(obj => {\n            if (obj.from !== undefined && obj.to !== undefined && (obj.from === account.id || obj.to === account.id)) return true; \n            return obj.account !== undefined && obj.account === account.id ? true : false;\n        });   \n\n        let total = filteredTransactions.reduce((t,c) => {\n            t += getAmount(c, categories, account.id, false);\n            return t;\n        }, 0);        \n\n        if (account.startingBalance !== undefined) {\n            total += parseFloat(account.startingBalance);\n        }\n\n        objs.push({name: account.name, total: total, id: account.id});\n    });\n\n    return objs;\n}\n\nconst createNameObjects = (categories, funds) => {\n    let categoryNames = {};\n    let fundNames = {};\n\n    categories.forEach(category => categoryNames[category.id] = category.name);\n    funds.forEach(fund => fundNames[fund.id] = fund.name);\n\n    return {categoryNames, fundNames};\n}\n\nconst getFundTarget = (funds, tr) => {\n    let fund = funds.find(obj => obj.id === tr.fund);\n    if (fund !== undefined) return fund.targetAmount;\n    return 0;\n}\n\nconst getTransactionHeading = (fundNames, categoryNames, tr) => {\n    if (tr.category !== undefined) {\n        let name = categoryNames[tr.category];\n        if (name !== undefined) return name;\n    } else if (tr.fund !== undefined) {\n        let name = fundNames[tr.fund];\n        if (name !== undefined) return name;\n    }\n    return 'Un-Categorised';\n}\n\nexport const getPeriodOfTransaction = (dates, trDate) => {\n    let periodDate = dates[0];\n\n    for (let date of dates) {\n        if (compareAsc(parseISO(trDate), parseISO(date)) >= 0) periodDate = date;\n        else break;\n    }\n    \n    return periodDate;\n}\n\nexport const parseCurrency = (value) => {\n    let { general } = store.getState();    \n    let { currencySymbol, showDecimals } = general;    \n\n    //make sure it doens't return -£0.00\n    if (value > -0.009 && value < 0.009) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    if (value === null || value === undefined || value === 0 || isNaN(value)) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    let string = Number(value).toFixed(showDecimals ? 2 : 0);    \n\n    let negative = false;\n    if (string.includes('-')) {\n        string = string.replace('-','');\n        negative = true;\n    }\n    let arr = string.split('');\n\n    for (let i = arr.length-4; i >= 0; i--) {\n        let fromRight = arr.length - i - 4;\n        if (fromRight > 0 && fromRight%3 === 0) arr[i] += ',';\n    }\n\n    arr.unshift(currencySymbol);\n    if (negative) arr.unshift('-');\n    return arr.join('');    \n}\n\nexport const checkBudget = (budgets, date, categoryId, transactions, number=false) => {\n    let budget = getLatestBudget(budgets, date, categoryId);\n\n    if (budget !== undefined && budget.amount > 0) {\n        if (number) return budget.amount;\n        return ` / ${parseCurrency(budget.amount)}`;\n    } else {\n        if (number) return 0;\n        return '';\n    }    \n}\n\n\nconst getLatestBudget = (budgets, date, category) => {\n    budgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) >= 0) return budget;\n    }\n    return undefined;\n}\n\nexport const checkFundTarget = (fund) => {\n    if (fund === undefined) return '';\n    if (fund.target !== 0) return ` / ${parseCurrency(fund.target)}`;\n    else return '';\n}\n\nexport const capitalize = (string) => {\n    return string.slice(0,1).toUpperCase() + string.slice(1);\n}\n\nexport const toCamelCase = (string) => {\n    let removeSpaces = string.replace(/ /g, '');\n    return removeSpaces.slice(0,1).toLowerCase() + removeSpaces.slice(1);\n}\n\nexport const fromCamelCase = (string) => {\n    let replaceCapitals = string.replace(/[A-Z]/g, ' $&');\n    return capitalize(replaceCapitals);\n}\n\n//determine whether amount should be positive or negative\nexport const getAmount = (transaction, categories, accountId, asCurrency=true) => {\n    //fund addition, so positive\n    if (transaction.type === undefined) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n\n    //transaction for a fund, so negative\n    if (transaction.fund !== undefined) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            //transaction for expense category, so negative\n            if (category.type === 'expense') return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n            //transaction for income category, so positive\n            if (category.type ===  'income') return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n        } else {\n            //has a category, but can't find it, so return 0\n            return asCurrency ? parseCurrency(0) : 0;\n        }\n    }    \n\n    if (transaction.from !== undefined && accountId !== undefined) {\n        //transfer from this account, so negative\n        if (transaction.from === accountId) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n        //transfer to this account, so positive\n        if (transaction.to === accountId) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n    }\n}\n\nexport const checkIfCanDelete = (obj) => {\n    let id = obj.id;\n\n    let { transactions, fundAdditions, budgets } = store.getState();\n\n    let allObjs = [...transactions, ...fundAdditions, ...budgets];\n\n    for (let obj of allObjs) {\n        if (obj.category === id) return false;\n        if (obj.fund === id) return false;\n        if (obj.account === id) return false;\n        if (obj.from === id) return false;\n        if (obj.to === id) return false;\n    }\n\n    return true;\n}\n\nexport const filterDeleted = (arr, ignoreHidden=false) => {\n    return arr.filter(obj => {\n        if (obj.deleted !== undefined) return false;\n        if (ignoreHidden && obj.hidden) return false;\n        if (ignoreHidden && obj.closed) return false;\n        if (ignoreHidden && obj.complete) return false;\n        return true;\n    });\n}\n\nexport const formatDate = (date, formatMethod='MMM d, yyyy') => {\n    if (date === undefined) return '';\n    if (date.length === 0) return '';\n    return format(parseISO(date), formatMethod);\n} \n\nexport const reverseDate = (date) => {\n    return formatDate(date, 'dd-MM-yyyy');\n}\n\nexport const today = () => {\n    return format(new Date(), 'yyyy-MM-dd');\n}\n\nexport const parseTransaction = (tr) => {\n    let { categories, accounts, funds } = store.getState();\n    let copyTr = {...tr};\n\n    if (copyTr.category !== undefined) {\n        let category = categories.find((obj) => obj.id === copyTr.category);\n        if (category !== undefined) copyTr.category = category.name;\n    }\n\n    if (copyTr.account !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.account);\n        if (account !== undefined) copyTr.account = account.name;\n    }\n\n    if (copyTr.fund !== undefined) {\n        let fund = funds.find((obj) => obj.id === copyTr.fund);\n        if (fund !== undefined) copyTr.fund = fund.name;\n    }\n\n    if (copyTr.from !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.from);\n        if (account !== undefined) copyTr.from = account.name;\n    }\n\n    if (copyTr.to !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.to);\n        if (account !== undefined) copyTr.to = account.name;\n    }\n\n    return copyTr;\n}\n\nexport const changeColourScheme = (scheme) => {\n    let root = document.documentElement;\n\n    if (scheme === 'dark') {\n        root.style.setProperty('--bg-color', '#222');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', '#222');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#009fe8');\n        root.style.setProperty('--table-heading-text-color', 'white');\n        \n        root.style.setProperty('--obj-highlight-bg', '#444');\n        root.style.setProperty('--obj-highlight-text', 'white');\n    }\n\n    if (scheme === 'black') {\n        root.style.setProperty('--bg-color', 'black');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', 'black');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#009fe8');\n        root.style.setProperty('--table-heading-text-color', 'white');\n\n        root.style.setProperty('--obj-highlight-bg', '#444');\n        root.style.setProperty('--obj-highlight-text', 'white');\n    }\n\n    if (scheme === 'light') {\n        root.style.setProperty('--bg-color', 'white');\n        root.style.setProperty('--text-color', 'black');\n        root.style.setProperty('--light-text-color', '#555');\n        root.style.setProperty('--icon-color', 'black');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', 'black');\n        \n        root.style.setProperty('--footer-bg', 'white');\n        root.style.setProperty('--footer-border', 'black');\n        \n        root.style.setProperty('--table-heading-bg-color', '#AAA');\n        root.style.setProperty('--table-heading-text-color', 'black');\n\n        root.style.setProperty('--obj-highlight-bg', '#CCC');\n        root.style.setProperty('--obj-highlight-text', 'black');\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { reducer } from './reducer';\nimport { changeColourScheme } from '../functions';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst localStorageMiddleware = ({getState}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        \n        const ignore = ['SET_CURRENT_PAGE', 'SET_ADD_TRANSACTION', 'SET_EDIT_MODE', 'SET_FETCHING'];\n        if (ignore.includes(action.type)) return result;\n\n        localStorage.setItem('budgetState', JSON.stringify(getState()));\n\n        return result;\n    }\n};\n\nconst syncMiddleware = ({getState, dispatch}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        //sync with server if possible\n        const ignore = ['SET_CURRENT_PAGE', 'SET_EDIT_MODE', 'SYNC', 'SET_USER', 'SET_ADD_TRANSACTION', 'SET_MESSAGE', 'SET_FETCHING'];\n        if (ignore.includes(action.type)) return result;\n        sync(getState(), dispatch);\n\n        return result;\n    }\n};\n\nexport const sync = (state, dispatch, manual=false) => {\n    if (!state.user) return;\n    const setUser = (value) => dispatch({type: 'SET_USER', payload: value});\n    const setMessage = (value) => dispatch({type: 'SET_MESSAGE', payload: value});\n    const setFetching = (value) => dispatch({type: 'SET_FETCHING', payload: value});\n\n    const backupData = {\n        general: state.general,\n        accounts: state.accounts,\n        categories: state.categories,\n        budgets: state.budgets,\n        funds: state.funds,\n        fundAdditions: state.fundAdditions,\n        transactions: state.transactions,\n        user: state.user\n    };\n\n    setFetching(true);\n    fetch(url+'api/backup', {\n        method: 'POST', \n        headers: {'content-type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify(backupData)\n    }).then(res => res.json()).then(data => {\n        setFetching(false);\n        if (data.status === 'success') {\n            dispatch({type: 'SYNC', payload: data.data});\n            setUser(data.user);\n            changeColourScheme(data.data.general.colourScheme);\n            if (manual) setMessage({text: 'Data successfully synced!', type: 'success'});\n        } else {\n            console.log(data);\n            if (data.type === 'logout') setUser(null);\n            setMessage({text: data.message, type: 'error'});\n        }\n    }).catch(err => {\n        console.log('Error Syncing: ', err.message);\n        setFetching(false);\n        setUser(null);\n        setMessage({text: 'Failed to contact server for syncing. Please try to login again.', type: 'error'});\n    });\n}\n\nconst getFromLocalStorage = () => {\n    let state = localStorage.getItem('budgetState');\n    if (state !== null) {\n        state = JSON.parse(state);\n        state.currentPage = 'Home';\n        state.message = {text: '', type: ''};\n        state.editMode = false;\n        state.addTransaction = false;\n        state.fetching = false;\n        changeColourScheme(state.general.colourScheme);\n        return state;\n    }\n}\n\nconst store = createStore(reducer, getFromLocalStorage(), applyMiddleware(localStorageMiddleware, syncMiddleware));\n\nexport default store;","import React from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaHome } from 'react-icons/fa';\nimport { MdSettings } from 'react-icons/md';\n\nconst StyledComp = styled.div`\n    display: flex;\n    position: fixed;\n    top: 0px;\n    border-bottom: 1px solid var(--menu-border-color);\n    width: 100%;\n    background-color: var(--menu-bg-color);\n    z-index: 10;\n\n    & > div {\n        color: var(--menu-text-color);\n        padding: 5px 10px;\n        border-right: 1px solid var(--menu-border-color);\n        ${props => props.isMobile ? 'flex-grow: 1;' : ''};\n        ${props => props.isMobile ? 'padding: 10px' : ''};\n    }\n\n    & > div:last-of-type {\n        ${props => props.isMobile ? 'border-right: none;' : ''};\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        cursor: pointer;\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div.spacer:hover {\n        background-color: transparent;\n        cursor: default;\n    }\n\n    & > div.spacer {\n        flex-grow: 1;\n        border: none;\n    }\n\n    & > div.right {\n        border-right: none;\n        border-left: 1px solid var(--menu-border-color);\n    }\n\n    & > div > svg {\n        position: relative;\n        top: 3px;\n    }\n`;\n\nconst HeaderButton = ({page, alignment='', icon=null}) => {\n    const dispatch = useDispatch();\n    const currentPage = useSelector(state => state.currentPage);\n    let className = currentPage === page ? 'selected' : '';\n    if (alignment.length > 0) className += ` ${alignment}`;\n\n    return  <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: page})} className={className}>\n                { icon === null ? page : icon }\n            </div>;\n}\n\nconst Header = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const addTransaction = useSelector(state => state.addTransaction);\n\n    const onClickAddTransaction = () => {\n        dispatch({type: 'SET_ADD_TRANSACTION', payload: !addTransaction});\n    }\n\n    return (\n        <StyledComp isMobile={isMobile}>\n            <HeaderButton page='Home' icon={isMobile ? <FaHome/> : null}/>\n            <HeaderButton page='Categories'/>\n            <HeaderButton page='Funds'/>\n            <HeaderButton page='Accounts'/>\n            { !isMobile ? <HeaderButton page='Tools'/> : null }\n            { !isMobile ? <div onClick={onClickAddTransaction}>Add Transaction</div> : null }\n            { !isMobile ? <div className=\"spacer\"></div> : null }\n            <HeaderButton page='Settings' icon={isMobile ? <MdSettings/> : null} alignment='right'/>\n        </StyledComp>\n    )\n}\n\nexport default Header;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\n\nconst StyledComp = styled.div`\n    position: absolute;\n    width: calc(${props => props.width} + 200px);\n    height: 300px;\n    z-index: 5;\n    ${props => props.dragging ? 'pointer-events: all' : 'pointer-events: none'};\n`;\n\nconst StyledInnerComp = styled.div`\n    position: absolute;\n    width: max-content;\n    top: 100px;\n    left: 100px;\n    z-index: 5;\n    pointer-events: all;\n\n    & > div:first-child {\n        position: absolute;\n        width: 100%;\n        opacity: 0;\n        cursor: move;\n        height: 40px;\n    }\n\n    & > svg {\n        position: absolute;\n        right: 2px;\n        top: 2px;\n        font-size: 1.5em;\n        cursor: pointer;\n        color: var(--text-color);\n        background-color: var(--bg-color);\n        width: 26px;\n        height: 26px;\n        border-radius: 50%;\n        ${props => props.dragging ? 'pointer-events: none' : 'pointer-events: all'};\n    }\n\n    & > svg:hover {\n        // filter: brightness(0.8);\n        color: var(--light-text-color);\n    }\n\n    & > div:last-child {\n        border: 2px solid var(--menu-border-color);\n        width: ${props => props.width};\n        margin: auto;\n        padding: 10px;\n        background-color: var(--bg-color);\n    }\n`;\n\nconst TopPopup = ({children, onClose, posX=200, posY=-73, width='300px'}) => {\n    const [dragging, setDragging] = useState(false);\n    const [startClientX, setStartClientX] = useState(0);\n    const [startClientY, setStartClientY] = useState(0);\n    const [startX, setStartX] = useState(0);\n    const [startY, setStartY] = useState(100);\n    const [x, setX] = useState(posX);\n    const [y, setY] = useState(posY);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setX(posX);\n        setY(posY);\n        checkYPos();\n    }, [posX, posY]);\n\n    useEffect(() => {\n        checkYPos();\n    }, [ref]);\n\n    const checkYPos = () => {\n        let height = ref.current.offsetHeight;\n        let newPos = (posY - height/2) + 20; //move to a centered position\n        if (newPos < -73) newPos = -73; //if it then goes off the top, move to 0\n        else if (newPos + height + 50 > window.innerHeight) newPos = -73; //if it goes off the bottom after moving up, move to 0\n        setY(newPos);\n    }\n\n    const onMouseDown = (e) => {\n        setStartClientX(e.clientX);\n        setStartClientY(e.clientY);\n        setStartX(x);\n        setStartY(y);\n        setDragging(true);\n    }\n\n    const onMouseUp = () => {\n        setDragging(false);\n    }\n\n    const onMouseMove = (e) => {\n        if (dragging) {\n            let objWidth = e.target.offsetWidth;\n            let xDiff = e.clientX - startClientX;\n            let yDiff = e.clientY - startClientY;\n            let newX = startX + xDiff;\n            let newY = startY + yDiff;\n\n            //prevent going off the side\n            if (newY < -73) newY = -73;\n            if (newY > window.innerHeight-396) newY = window.innerHeight-396;\n            if (newX < -100) newX = -100;\n            if (newX > window.innerWidth-objWidth-100) newX = window.innerWidth-objWidth-100;\n            \n            setX(newX);\n            setY(newY);\n        }\n    }\n\n    return (\n        <StyledComp dragging={dragging} width={width} onMouseUp={onMouseUp} onMouseMove={onMouseMove} style={{top: y, left: x}}>\n            <StyledInnerComp width={width} ref={ref} dragging={dragging}>\n                <div onMouseDown={onMouseDown}></div>\n                <MdClose onClick={onClose}/>\n                {children}\n            </StyledInnerComp>\n        </StyledComp>\n    );\n}\n\nexport default TopPopup;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nconst StyledComp = styled.div`\n    width: 95%;\n    max-width: 1200px;\n    border: 2px solid white;\n    ${props => props.type === 'error' ? 'border: 2px solid red' : ''};\n    ${props => props.type === 'success' ? 'border: 2px solid #0F0' : ''};\n    margin: auto;\n    margin-top: 5px;\n    padding: 5px;\n    position: relative;\n\n    & > div:last-child {\n        position: absolute;\n        right: -1px;\n        top: -2px;\n        font-size: 2em;\n    }\n\n    & > div:last-child:hover {\n        color: red;\n        cursor: pointer;\n    }\n`;\n\nconst MessagePopup = () => {\n    const dispatch = useDispatch();\n    const message = useSelector(state => state.message);\n    const clearMessage = () => dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n\n    if (message.text.length === 0) return null;\n\n    return (\n        <StyledComp type={message.type}>\n            <div>{message.text}</div>\n            <div onClick={clearMessage}><IoMdClose/></div>\n        </StyledComp>\n    );\n}\n\nexport default MessagePopup;","import styled from 'styled-components';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: ${props => props.template ? props.template : '1fr 1fr'};\n    grid-gap: 10px;\n    margin: 10px;\n    ${props => props.start !== undefined ? 'grid-column-start: '+props.start : ''};\n    ${props => props.end !== undefined ? 'grid-column-end: '+props.end : ''};\n    ${props => props.width !== undefined ? 'width: '+props.width : ''};\n    ${props => props.width !== undefined ? 'margin: auto' : ''};\n`;\n\nexport default Grid;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    width: 60px;\n    border: 1px solid var(--text-color);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n`;\n\nconst BudgetInput = ({value, category, date}) => {\n    const [oldValue, setOldValue] = useState(value);\n    const [currentValue, setCurrentValue] = useState(value);\n    const dispatch = useDispatch();\n    const updateBudget = (val) => dispatch({type: 'UPDATE_BUDGET', payload: val});\n\n    //use local state for editing object, but change if global state changes (don't want to sync with server for every keystroke)\n    if (value !== oldValue) {\n        setOldValue(value);\n        setCurrentValue(value);\n    }\n\n    const onChangeBudget = (e) => {\n        let amount = parseFloat(e.target.value);\n        setCurrentValue(amount);\n    }\n\n    const onBlurBudget = (e) => {\n        let newBudget = {\n            category: category,\n            amount: currentValue,\n            startDate: date,\n            carryOver: false,\n        };\n\n        updateBudget(newBudget);\n    }\n\n    return (\n        <StyledComp type=\"number\" value={isNaN(currentValue) || currentValue === null ? '' : currentValue} onChange={onChangeBudget} onBlur={onBlurBudget}/>\n    );\n}\n\nexport default BudgetInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaPiggyBank } from 'react-icons/fa';\n\nimport { parseCurrency } from '../functions';\n\nimport BudgetInput from './BudgetInput';\n\nconst StyledComp = styled.div`\n    text-align: center;\n    border-radius: 5px;\n    box-shadow: 0px 1px 4px gray;\n    width: 100%;\n    overflow: hidden;\n\n    &.fullRow {\n        grid-column-start: 1;\n        grid-column-end: 3;\n    }\n\n    & > div:first-of-type {\n        position: relative;\n        font-size: 1em;\n        font-weight: bold;\n        padding: 5px;\n        margin-bottom: 4px;\n        ${props => props.type === 'income' ? 'background-color: green; color: white;' : ''};\n        ${props => props.type === 'expense' ? 'background-color: darkorange; color: black;' : ''};\n        ${props => props.type === 'fund' ? 'background-color: lightsteelblue; color: black;' : ''};\n        ${props => props.type === 'remaining' ? 'background-color: deepskyblue; color: black;' : ''};\n        ${props => props.type === 'account' ? 'background-color: deepskyblue; color: black;' : ''};\n    }\n\n    & > div:last-of-type {\n        font-size: 1em;\n        margin-bottom: 5px;\n    }\n\n    & .budgetIcon {\n        position: absolute;\n        right: 5px;\n        top: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n\n    @media only screen and (min-width: 701px) {\n        &.fullRow {\n            grid-column-start: 1;\n            grid-column-end: 5;\n        }\n    }\n`;\n\nconst AmountGroup = ({title, amount, type, budget=0, editBudget=false, id, date}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n    }\n\n    return (\n        <StyledComp type={type} className={title === 'Earnings' || title === 'Remaining' || title === 'Total' ? 'fullRow' : ''}>\n            <div>\n                { title }\n                { editBudget ? <div className=\"budgetIcon\" onClick={toggleEditMode}><FaPiggyBank/></div> : null }\n            </div>\n            <div>\n                { amount }\n                { !editMode && budget > 0 ? ` / ${parseCurrency(budget)}` : '' }\n                { editMode ? <span> / <BudgetInput value={budget} category={id} date={date}/></span> : null }\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default AmountGroup;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    color: ${props => props.color};\n    display: inline-block;\n    font-size: ${props => props.size};\n    ${props => props.bordered ? 'border: 1px solid white' : ''};\n    width: ${props => props.width ? props.width : 'auto'};\n    padding: ${props => props.bordered ? '5px' : '0px'};\n    border-radius: 5px;\n    \n    :hover {\n        cursor: pointer;\n    }\n\n    & > svg {\n        position: relative;\n        top: ${props => props.topAdjust};\n    }\n`;\n\nconst IconButton = ({Icon, onClick, color='var(--icon-color)', topAdjust='3px', size='1em', width='auto', bordered=false}) => {\n    return (\n        <StyledComp color={color} topAdjust={topAdjust} size={size} width={width} bordered={bordered}>\n            <Icon onClick={onClick}/>\n        </StyledComp>\n    );\n}\n\nexport default IconButton;","import React from 'react';\n\nimport { parseCurrency } from '../functions';\n\nimport AmountGroup from './AmountGroup';\nimport Grid from './Grid';\n\nconst AccountSummary = ({arr, total}) => {\n    return (\n        <div>\n            <Grid template='repeat(4, 1fr)' width='800px'>\n            {\n                arr.map(obj => <AmountGroup key={obj.id} title={obj.name} amount={parseCurrency(obj.total)} type='account'/>)\n            }\n                <AmountGroup title='Total' amount={parseCurrency(total)} type='account'/>\n            </Grid>\n        </div>\n    );\n}\n\nexport default AccountSummary;","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { format, parseISO } from 'date-fns';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport IconButton from '../components/IconButton';\n\nconst StyledComp = styled.div`\n    & > table {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n    }\n\n    & td {\n        ${'' /* border: 1px solid white; */}\n        height: 39px;\n    }\n\n    & td:nth-child(1) {\n        text-align: left;\n    }\n\n    & td:nth-child(2) {\n        width: 100px;\n        text-align: right;\n    }\n\n    & td:nth-child(3) {\n        width: 50px;\n        text-align: right;\n    }\n\n    & div.description {\n        max-width: ${props => props.maxDescWidth};\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    & td span.date {\n        font-size: 0.8em;\n        color: var(--light-text-color);\n    }\n\n    &:hover {\n        ${props => props.hover ? 'cursor: pointer;' : ''};\n        ${props => props.hover ? 'background-color: var(--table-heading-bg-color);' : ''};\n    }\n\n    @media screen and (max-width: 700px) {        \n        & > table {\n            width: 100%;\n        }\n\n        & div.description {\n            max-width: 250px;\n        }\n\n        & td {\n            height: 40px;\n        }\n\n        & tr > td:first-child {\n            padding-left: 15px;\n        }\n\n        & tr > td:last-child {\n            padding-right: 15px;\n        }\n    }\n`;\n\nconst Transaction = ({obj, accountId, showDelete=false, hover=true, maxDescWidth='540px', onClick=()=>{}}) => {\n    const dispatch = useDispatch();\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const currentPage = useSelector(state => state.currentPage);\n\n    const remove = () => {     \n        if (obj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: obj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: obj.id});\n    }\n\n    let date = obj.date !== undefined ? format(parseISO(obj.date), 'MMM d, yyyy') : '';\n    let description = getType(obj, accountId, categories, funds, accounts, currentPage);\n\n    return (\n        <StyledComp onClick={onClick(obj)} hover={hover} maxDescWidth={maxDescWidth}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            { description.length > 0 ? <div className='description'>{ description }</div> : null }\n                            { description.length > 0 ? <span className='date'>{ date }</span> : <div className='description'>{ date }</div>}\n                        </td>\n                        <td>{getAmount(obj, categories, accountId)}</td>\n                        { showDelete ? <td><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px'/></td> : null }\n                    </tr>\n                </tbody>\n            </table>\n        </StyledComp>\n    );\n}\n\nconst getType = (transaction, accountId, categories, funds, accounts, page) => {\n    if (page === 'Categories' || page === 'Home') {\n        let id = transaction.account;\n        let account = accounts.find(obj => obj.id === id);\n        if (account !== undefined) {\n            if (transaction.description && transaction.description.length > 0) return account.name + ' - ' + transaction.description;\n            return account.name;\n        } else {\n            if (transaction.description && transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    if (page === 'Funds') {\n        if (transaction.description && transaction.description.length > 0) return transaction.description;\n        else return '';\n    }\n\n    if (accountId === undefined) return '';\n\n    //get category name\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            if (transaction.description.length > 0) return category.name + ' - ' + transaction.description;\n            return category.name;\n        } else {\n            if (transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    //get fund name\n    if (transaction.fund !== undefined) {\n        let fund = funds.find(obj => obj.id === transaction.fund);\n        if (fund !== undefined) {\n            if (transaction.description.length > 0) return `${fund.name} Fund - ${transaction.description}`;\n            return `${fund.name} Fund`;\n        }\n    }\n\n    //get transfer details\n    if (transaction.from !== undefined) {\n        if (transaction.from === accountId) {\n            let account = accounts.find(obj => obj.id === transaction.to);\n            if (account !== undefined) return `Transfered to ${account.name}`;\n        } else {\n            let account = accounts.find(obj => obj.id === transaction.from);\n            if (account !== undefined) return `Transfered from ${account.name}`;\n        }\n    }\n\n    return '';\n}\n\nexport default Transaction;","import React from 'react';\nimport styled from 'styled-components';\nimport { compareDesc, parseISO } from 'date-fns';\n\nimport Transaction from './Transaction';\n\nconst StyledComp = styled.div`\n    ${props => props.type === 'income' ? 'border-color: green !important' : ''};\n    ${props => props.type === 'expense' ? 'border-color: darkorange !important' : ''};\n    ${props => props.type === 'fund' ? 'border-color: lightsteelblue !important' : ''};\n    box-shadow: 0px 1px 4px gray;\n    padding: 0px !important;\n\n    & > div {\n        font-weight: bold;\n        padding: 5px;\n        color: black;\n    }\n\n    & > div.income {\n        background-color: green;\n        color: white;\n    }\n\n    & > div.expense {\n        background-color: darkorange;\n    }\n\n    & > div.fund {\n        background-color: lightsteelblue;\n    }\n\n    & > span > div {\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n\n    & > span > div:first-child {\n        margin-top: 5px;\n    }\n\n    & > span > div:last-child {\n        margin-bottom: 5px;\n    }\n`\n\nconst TransactionList = ({heading, transactions, type}) => {\n    let sortedTransactions = transactions.sort((a,b) => {\n        return compareDesc(parseISO(b.date), parseISO(a.date));\n    });\n\n    return (\n        <StyledComp type={type}>\n            <div className={type}>{heading}</div>\n            <span>\n                {\n                    sortedTransactions.map(tr => <Transaction key={tr.id} obj={tr} accountId={tr.account} hover={false} maxDescWidth='350px'/>)\n                }\n            </span>\n        </StyledComp>\n    );\n}\n\nexport default TransactionList;","import styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 5px auto;\n    ${'' /* border-collapse: collapse; */}\n    border-spacing: 0px;\n    overflow: hidden;\n    border-radius: 5px;\n    background-color: var(--bg-color);\n    color: var(--text-color);\n\n    & thead td {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n    }\n\n    & td.income {\n        background-color: green;\n        color: white;\n    }\n\n    & td.expense {\n        background-color: darkorange;\n        color: black;\n    }\n\n    & td.fund {\n        background-color: lightsteelblue;\n        color: black;\n    }\n\n    & td.remaining {\n        background-color: deepskyblue;\n        color: black;\n    }\n\n    & tbody th {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n        font-weight: normal;\n    }\n\n    & tr td.corner-top-left {\n        border-top: none !important;\n        border-left: none !important;\n        background-color: transparent;\n    }\n\n    & td, & th {\n        padding: ${props => props.padding ? props.padding : '10px 15px'};\n        border-right: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n    \n    & > *:first-child tr:first-child > * {\n        border-top: 1px solid var(--menu-border-color);\n    }\n\n    & tr td:first-child, & tr th:first-child {\n        border-left: 1px solid var(--menu-border-color);\n    }\n\n    & > *:first-child tr:first-child > *:first-child {\n        border-top-left-radius: 5px;\n    }\n\n    & > *:first-child tr:first-child > *:last-child {\n        border-top-right-radius: 5px;\n    }\n\n    & tbody tr:last-child td:first-child {\n        border-bottom-left-radius: 5px;\n    }\n\n    & tbody tr:last-child td:last-child {\n        border-bottom-right-radius: 5px;\n    }\n\n    & td {\n        position: relative;\n    }\n\n    & .budgetIcon {\n        ${'' /* position: absolute; */}\n        float: right;\n        margin-left: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n\n    & td.input {\n        padding: 2px;\n    }\n\n    & td.trValue:hover {\n        cursor: pointer;\n        background-color: var(--obj-highlight-bg);\n        color: var(--obj-highlight-text);\n    }\n\n    & td.trValue.selected {\n        background-color: var(--obj-highlight-bg);\n        color: var(--obj-highlight-text);\n    }\n`;\n\nexport default Table;","import React from \"react\";\nimport { FaPiggyBank } from \"react-icons/fa\";\nimport { useSelector } from 'react-redux';\n\nimport { reverseDate, parseCurrency, checkBudget, filterDeleted } from \"../functions\";\n\nimport Table from \"./Table\";\nimport BudgetInput from \"./BudgetInput\";\n\nconst SummaryTable = ({dates, incomeCategories, filteredFunds, expenseCategories, summaryTotals, rows, editCategory, toggleEditCategory, onClickValue, checkFundTarget, transactionId, getAmount}) => {\n    const budgets = useSelector(state => filterDeleted(state.budgets));\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const reverseSummaryTable = useSelector(state => state.general.reverseSummaryTable);\n\n    const budgetIcon = (id) => {\n        return <div className=\"budgetIcon\" onClick={toggleEditCategory(id)}><FaPiggyBank/></div>;\n    }\n\n    const getValueRow = (arr, className) => {\n        return arr.map(obj => {\n            return  <tr key={obj.id}>\n                        <td className={className}>{obj.name}{className === 'expense' ? budgetIcon(obj.id) : null}</td>\n                        {\n                            dates.map(date =>   {\n                                let amount = getAmount(rows, date, obj.name);\n                                let tdClassName = transactionId === obj.id+date ? 'trValue selected' : 'trValue';\n                                //only give class name if it's a cell user can click on\n                                if (amount === '-') tdClassName = '';\n                                return  <td key={obj.id+date} className={tdClassName} onClick={onClickValue(rows[date][obj.name], obj.name, className, obj.id+date)}>\n                                            { amount }\n                                            { editCategory === obj.id ? <span> / <BudgetInput value={checkBudget(budgets, date, obj.id, transactions, true)} category={obj.id} date={date}/></span> : checkBudget(budgets, date, obj.id, transactions) }\n                                        </td>\n                            })\n                        }\n                        { \n                            className === 'fund' \n                                ? <td>{parseCurrency(summaryTotals[obj.name].remaining)}{checkFundTarget(summaryTotals[obj.name])}</td> \n                                : <td>{parseCurrency(summaryTotals[obj.name])}</td> \n                        }\n                    </tr>\n        });\n    }\n\n    if (reverseSummaryTable) {\n        return (\n            <Table>\n                <thead>\n                    <tr>\n                        <td>Dates</td>\n                        { dates.map(date => <td key={'date-'+date} style={{minWidth: '120px'}}>{date}</td>) }\n                        <td>Total</td>\n                    </tr>    \n                </thead>  \n                <tbody>\n                    { getValueRow(incomeCategories, 'income') }\n                    { getValueRow(filteredFunds, 'fund') }\n                    { getValueRow(expenseCategories, 'expense') }\n                    <tr>\n                        <td className=\"remaining\">Remaining</td>\n                        { dates.map(date => <td key={'remaining-'+date}>{ parseCurrency(rows[date].remaining) }</td>) }\n                        <td>{parseCurrency(summaryTotals.remaining)}</td>\n                    </tr>\n                </tbody>\n            </Table>\n        );\n    }\n\n    return (\n        <Table>\n            <thead>\n                <tr>\n                    <td>Date</td>\n                    { incomeCategories.map(obj => <td key={'heading-'+obj.id} className=\"income\">{obj.name}</td>) }\n                    { filteredFunds.map(obj => <td key={'heading-'+obj.id} className=\"fund\">{obj.name}</td>) }\n                    { expenseCategories.map(obj => <td key={'heading-'+obj.id} className=\"expense\">{obj.name}<div className=\"budgetIcon\" onClick={toggleEditCategory(obj.id)}><FaPiggyBank/></div></td>) }\n                    <td className=\"remaining\">Remaining</td>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    dates.map(date => {\n                        return (\n                            <tr key={'summaryDate-'+date}>\n                                <td>{reverseDate(date)}</td>\n                                { incomeCategories.map(obj => <td key={obj.id+date} className={transactionId === obj.id+date ? 'trValue selected' : 'trValue'} onClick={onClickValue(rows[date][obj.name], obj.name, 'income', obj.id+date)}>{getAmount(rows, date, obj.name)}</td>) }\n                                { filteredFunds.map(obj => <td key={obj.id+date}className={transactionId === obj.id+date ? 'trValue selected' : 'trValue'} onClick={onClickValue(rows[date][obj.name], obj.name, 'fund', obj.id+date)}>{getAmount(rows, date, obj.name)}</td>) }\n                                { expenseCategories.map(obj => <td key={obj.id+date} className={transactionId === obj.id+date ? 'trValue selected' : 'trValue'} onClick={onClickValue(rows[date][obj.name], obj.name, 'expense', obj.id+date)}>{getAmount(rows, date, obj.name)}{editCategory === obj.id ? <span> / <BudgetInput value={checkBudget(budgets, date, obj.id, transactions, true)} category={obj.id} date={date}/></span> : checkBudget(budgets, date, obj.id, transactions)}</td>) }\n                                <td>{ parseCurrency(rows[date].remaining) }</td>\n                            </tr>\n                        )\n                    })\n                }\n                <tr>\n                    <td>Total</td>\n                    { incomeCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                    { filteredFunds.map(obj => <td key={'fundHeading-'+obj.id}>{parseCurrency(summaryTotals[obj.name].remaining)}{checkFundTarget(summaryTotals[obj.name])}</td>) }\n                    { expenseCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                    <td>{parseCurrency(summaryTotals.remaining)}</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n}\n\nexport default SummaryTable;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FiArrowLeft, FiArrowRight } from 'react-icons/fi';\n\nimport Grid from '../components/Grid';\nimport AmountGroup from '../components/AmountGroup';\nimport IconButton from '../components/IconButton';\nimport AccountSummary from '../components/AccountSummary';\nimport TopPopup from '../components/TopPopup';\nimport TransactionList from '../components/TransactionList';\nimport SummaryTable from '../components/SummaryTable';\n\nimport { getLatestDates, getSummaryRows, getSummaryTotals, getAccountSummary, parseCurrency, checkBudget, checkFundTarget, filterDeleted } from '../functions';\n\nconst SummaryTables = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const general = useSelector(state => state.general);\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const budgets = useSelector(state => filterDeleted(state.budgets));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n\n    const filteredFunds = funds.filter(obj => obj.complete === false);\n\n    const dates = getLatestDates(general.startDate, general.payPeriodType, general.periodsToDisplay);\n    const [latestDate, setLatestDate] = useState('Totals');\n\n    const [editCategory, setEditCategory] = useState(0);\n\n    const [showTransactions, setShowTransactions] = useState(false);\n    const [transactionArray, setTransactionArray] = useState([]);\n    const [transactionHeading, setTransactionHeading] = useState('');\n    const [transactionPos, setTransactionPos] = useState({x: 0, y: 0});\n    const [transactionId, setTransactionId] = useState(0);\n    const [transactionType, setTransactionType] = useState('');\n\n    const rows = getSummaryRows(dates, transactions, funds, categories, fundAdditions);\n\n    const incomeCategories = categories.filter(obj => obj.type === 'income' && obj.hidden === false);\n    const expenseCategories = categories.filter(obj => obj.type === 'expense' && obj.hidden === false);\n\n    const summaryTotals = getSummaryTotals(transactions, funds, categories, fundAdditions);\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n    const accountTotal = accountSummary.reduce((a,c) => { return a+c.total; }, 0);\n\n    const toggleEditCategory = (id) => () => {\n        if (editCategory === id) setEditCategory(0);\n        else setEditCategory(id);\n    }\n\n    const setPreviousDate = () => {\n        if (latestDate === 'Totals') {\n            setLatestDate(dates[dates.length-1]);\n            return;\n        }\n\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex-1;\n        if (newIndex < 0) return;\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    const setNextDate = () => {\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex+1;\n        if (newIndex > dates.length-1) {\n            setLatestDate('Totals');\n            return;\n        } else if (latestDate === 'Totals') {\n            return;\n        }\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    const onClickValue = (obj, heading='', type='', id) => (e) => {\n        if (obj === undefined) return;\n        let transactions = obj.transactions;\n        setShowTransactions(true);\n        setTransactionArray(transactions);\n        setTransactionHeading(heading);\n        setTransactionType(type);\n        setTransactionId(id);\n\n        let leftPos = e.target.offsetLeft-550;\n        if (leftPos < 0) leftPos = e.target.offsetLeft + e.target.offsetWidth - 101;\n        let topPos = e.target.offsetTop - 101;\n        setTransactionPos({x: leftPos, y: topPos});\n    }\n\n    const onCloseTransactions = () => {\n        setShowTransactions(false);\n        setTransactionArray([]);\n        setTransactionHeading('');\n        setTransactionPos(0);\n        setTransactionType('');\n        setTransactionId(0);\n    }\n\n    if (isMobile) {\n        let displayDate = latestDate;\n        if (latestDate !== 'Totals') {\n            displayDate = format(new Date(latestDate), 'do MMM yyyy');\n        }\n\n        let index = dates.indexOf(latestDate);\n\n        const getHeading = () => {\n            return (\n                <Grid style={{fontSize: '1.5em', fontWeight: 'bold', margin: '0px'}} start='1' end='3' template='50px auto 50px'>\n                    { index === 0 ? <div></div> : <IconButton Icon={FiArrowLeft} onClick={setPreviousDate} size='1.3em' topAdjust='0px'/> }\n                    <div>{displayDate}</div> \n                    { latestDate === 'Totals' ? <div></div> : <IconButton Icon={FiArrowRight} onClick={setNextDate} size='1.3em' topAdjust='0px'/> }\n                </Grid>\n            );\n        }\n\n        //when user goes foward from starting date, they can see the totals for each category\n        if (latestDate === 'Totals') {\n            return (\n                <div style={{marginBottom: '100px'}}>\n                    <Grid>\n                        { getHeading() }\n                        { incomeCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='income'/>) }\n                        { filteredFunds.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name] ? summaryTotals[obj.name].remaining : 0)+checkFundTarget(summaryTotals[obj.name])} type='fund'/>) }\n                        { expenseCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='expense'/>) }\n                        <AmountGroup title='Remaining' amount={parseCurrency(summaryTotals.remaining)} type='remaining'/>\n                    </Grid>\n\n                    <h3>Accounts</h3>\n                    <Grid>\n                        { accountSummary.map(obj => <AmountGroup key={'account-'+obj.id} title={obj.name} amount={parseCurrency(obj.total)} type='account'/>) }\n                        <AmountGroup title='Total' amount={parseCurrency(accountTotal)} type='remaining'/>\n                    </Grid>\n                </div>\n            );\n        }\n        \n        return (\n            <div style={{marginBottom: '100px'}}>\n                <Grid>\n                    { getHeading() }\n                    { incomeCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={getAmount(rows, latestDate, obj.name)} type='income'/>) }\n                    { filteredFunds.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={getAmount(rows, latestDate, obj.name)} type='fund'/>) }\n                    { expenseCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={getAmount(rows, latestDate, obj.name)} type='expense' editBudget={true} budget={checkBudget(budgets, latestDate, obj.id, transactions, true)} id={obj.id} date={latestDate}/>) }\n                    <AmountGroup title='Remaining' amount={parseCurrency(rows[latestDate].remaining)} type='remaining'/>\n                </Grid>\n            </div>\n        );\n    }    \n\n    return (\n        <div>\n            {\n                general.swapSummaries ? (<div>\n                    <h4>Account Summaries</h4>\n                    <AccountSummary arr={accountSummary} total={accountTotal}/>\n                </div>) : null\n            }\n            <h4>Period Summaries</h4>\n            { \n                showTransactions ? <TopPopup onClose={onCloseTransactions} posX={transactionPos.x} posY={transactionPos.y} width={'450px'}>\n                        <TransactionList heading={transactionHeading} transactions={transactionArray} type={transactionType}/>\n                    </TopPopup> : null \n            }\n            <SummaryTable \n                dates={dates} \n                incomeCategories={incomeCategories} filteredFunds={filteredFunds} expenseCategories={expenseCategories} \n                summaryTotals={summaryTotals} rows={rows} \n                editCategory={editCategory} toggleEditCategory={toggleEditCategory} \n                onClickValue={onClickValue} checkFundTarget={checkFundTarget} \n                transactionId={transactionId} getAmount={getAmount}\n            />\n            {\n                !general.swapSummaries ? (<div>\n                    <h4>Account Summaries</h4>\n                    <AccountSummary arr={accountSummary} total={accountTotal}/>\n                </div>) : null\n            }\n        </div>\n    );\n}\n\nconst getAmount = (rows, date, name) => {\n    let valueObj = rows[date][name];\n    if (valueObj === undefined) return '-';\n    return parseCurrency(valueObj.amount);\n}\n\nexport default SummaryTables;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    border: ${props => props.noBorder ? 'none' : '1px solid var(--menu-border-color)'};\n    height: var(--input-height);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    padding-left: 10px;\n    font-size: 1em;\n    width: ${props => props.width};\n    border-radius: 0px;\n    -webkit-appearance: none;\n\n    :focus {\n        outline: none;\n        border: 1px solid #33C9F9;\n    }\n\n    &::-webkit-calendar-picker-indicator {\n        filter: invert(100%);\n    }\n`;\n\nconst Input = ({value, type='text', placeholder='', onChange, options=[], groups=[], width=\"100px\", noBorder=false, ...others}) => {\n    if (type === 'dropdown' && (options.length > 0 || groups.length > 0)) return (\n        <StyledComp as='select' onChange={onChange} value={value} width={width} noBorder={noBorder}>\n            <option hidden value={undefined}>Select an Option</option>\n        {\n            options.length > 0 \n            ? options.map(option => {\n                if (option.display.length === 0) return null;\n                return <option key={'inputOption-'+option.value} value={option.value}>{option.display}</option>\n            })\n            : groups.map(group => {\n                return (\n                    <optgroup key={'inputGroup-'+group.label} label={group.label}>\n                    {\n                        group.options.map(option => {\n                            if (option.display.length === 0) return null;\n                            return <option key={'inputGroupOption-'+option.value} value={option.value}>{option.display}</option>\n                        })\n                    }\n                    </optgroup>\n                )\n            })\n        }\n        </StyledComp>\n    );\n\n    if (type === 'dropdown' && (options.length === 0 && groups.length === 0)) return <StyledComp value={'No Options'} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder} disabled={true}/>\n\n    if (type === 'number' && isNaN(value)) value = '';\n\n    return (\n        <StyledComp value={value} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder} {...others}/>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Input from './Input';\n\nconst StyledComp = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 5px;\n\n    & > label {\n        width: ${props => props.labelWidth};\n        display: inline-flex;\n        justify-content: flex-end;\n        align-items: center;\n        height: var(--input-height);\n        padding: 0px 10px;\n        border-left: 1px solid var(--menu-border-color);\n        border-top: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        background-color: var(--table-heading-bg-color);\n    }\n\n    & > input, & > select {\n        border-top-right-radius: 5px;\n        border-bottom-right-radius: 5px;\n        width: 150px;\n    }\n`;\n\nconst LabelledInput = ({label, type='text', value, options=[], groups=[], labelWidth='120px', ...others}) => {\n    let inputValue = value;\n    if (isNaN(inputValue) && type === 'number') inputValue = '';\n\n    return (\n        <StyledComp labelWidth={labelWidth}>\n            <label>{label}</label>\n            <Input value={inputValue} type={type} options={options} groups={groups} {...others}/>\n        </StyledComp>\n    );\n}\n\nexport default LabelledInput;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    background-color: var(--menu-bg-color);\n    color: var(--menu-text-color);\n    border: 1px solid var(--menu-border-color);\n    ${props => props.color ? `border-color: ${props.color}` : ''};\n    border-radius: 5px;\n    height: var(--input-height);\n    display: ${props => props.inline ? 'inline flex' : 'flex'};\n    justify-content: center;\n    align-items: center;\n    width: ${props => props.width};\n    margin: auto;\n    ${props => props.inline ? 'margin: 3px' : ''};\n    position: relative;\n\n    &:hover {\n        cursor: pointer;\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    &.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n`;\n\nconst Loader = styled.div`\n    position: absolute;\n    left: 0px;\n    right: 0px;\n    top: 0px;\n    bottom: 0px;\n\n    background-color: rgba(0,0,0,0.6);\n    border-radius: 5px;\n    cursor: default;\n\n    :after {\n        content: ' ';\n        position: relative;\n        top: 2px;\n        border: 3px solid black;\n        border-radius: 50%;\n        border-top: none;\n        border-left: none;\n        width: 20px;\n        height: 20px;\n        display: block;\n        margin: auto;\n        animation-name: spin;\n        animation-duration: 0.9s;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n\n    @keyframes spin {\n        from {transform: rotate(0deg);}\n        to {transform: rotate(360deg);}\n    }\n`;\n\nconst Button = ({value, onClick, width='100%', inline=false, color=undefined, style={}, loading=false, selected=false}) => {\n    if (loading) return <StyledComp width={width} inline={inline} color={color} style={style} className={selected ? 'selected' : ''}><Loader/>{value}</StyledComp>\n\n    return <StyledComp width={width} onClick={onClick} inline={inline} color={color} style={style} className={selected ? 'selected' : ''}>{value}</StyledComp>\n}\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { filterDeleted } from '../functions';\n\nimport LabelledInput from './LabelledInput';\nimport Button from './Button';\n\nconst StyledComp = styled.div`\n\n`\n\nconst TransactionForm = ({onChange, obj={}, buttonLabel='Save'}) => {\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let defaultAccountObj = accounts.find(obj => obj.defaultAccount === true);\n    let defaultAccount = defaultAccountObj !== undefined ? defaultAccountObj.id : accounts.length > 0 ? accounts[0].id : undefined;\n\n    const [id, setId] = useState(0);\n    const [type, setType] = useState('spend');\n    const [amount, setAmount] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n    const [account, setAccount] = useState(defaultAccount);\n    const [fund, setFund] = useState(undefined);\n    const [category, setCategory] = useState(undefined);\n    const [from, setFrom] = useState(undefined);\n    const [to, setTo] = useState(undefined);\n    const [editMode, setEditMode] = useState(false);\n\n    useEffect(() => {\n        reset();\n    }, [obj]);\n\n    const reset = () => {\n        let type = obj.type || 'spend';\n        if (obj.amount !== undefined && obj.type === undefined) type = 'fundAddition';\n        if (obj.amount !== undefined) setEditMode(true);\n        setId(obj.id || 0);\n        setType(type);\n        setAmount(obj.amount || '');\n        setDescription(obj.description || '');\n        setDate(obj.date || format(new Date(), 'yyyy-MM-dd'));\n        setAccount(obj.account || defaultAccount);\n        setFund(obj.fund || undefined);\n        setCategory(obj.category || undefined);\n        setFrom(obj.from || undefined);\n        setTo(obj.to || undefined);\n    }\n\n    const finishTransaction = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (account === undefined) return;\n        if (type === 'spend' && fund === undefined && category === undefined) return;\n        if (type === 'transfer' && from === undefined && to === undefined) return;\n\n        let transaction;\n        if (type === 'spend') {\n            transaction = {type, amount, description, date, account, fund, category};\n        } else if (type === 'transfer') {\n            transaction = {type, amount, date, from, to};\n        }        \n\n        if (id !== 0) transaction.id = id;\n\n        onChange(transaction);\n    }\n\n    const finishFundAddition = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (fund === undefined) return;\n\n        let fundAddition = {amount, date, fund};\n\n        if (id !== 0) fundAddition.id = id;\n\n        onChange(fundAddition);\n    }\n\n    const onChangeGroup = (e) => {\n        let value = e.target.value;\n        let id = Number(value);\n        \n        let fund = funds.find(obj => obj.id === id);\n        \n        if (fund !== undefined) {\n            setFund(id);\n            setCategory(undefined);\n        } else {\n            let category = categories.find(obj => obj.id === id);\n            if (category !== undefined) {\n                setCategory(id);\n                setFund(undefined);\n            }\n        }\n    }\n\n    let types = [\n        {value: 'spend', display: 'Spend/Receive'},\n        {value: 'fundAddition', display: 'Add to Fund'},\n    ];\n\n    if (accounts.length > 1) types.push({value: 'transfer', display: 'Transfer'});\n\n    let groupValue = category;\n    if (category === undefined) groupValue = fund;\n\n    if (type === 'fundAddition') {\n        return (\n            <StyledComp>\n                { editMode ? null : <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/> }\n                <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n                <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n                <LabelledInput label={'Fund'} type='dropdown' value={fund} onChange={(e) => setFund(Number(e.target.value))} options={funds.map(obj => ({value: obj.id, display: obj.name}))}/>\n                <Button value={buttonLabel} onClick={finishFundAddition} width=\"140px\"/>\n            </StyledComp>\n        );\n    }\n\n    return (\n        <StyledComp>\n            { editMode ? null : <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/> }\n            <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Description'} value={description} onChange={(e) => setDescription(e.target.value)}/> }\n            <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Account'} type='dropdown' value={account} onChange={(e) => setAccount(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> }\n            { type === 'transfer' ? <LabelledInput label={'From'} type='dropdown' value={from} onChange={(e) => setFrom(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? <LabelledInput label={'To'} type='dropdown' value={to} onChange={(e) => setTo(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? null : <LabelledInput label={'Group'} type='dropdown' value={groupValue} onChange={onChangeGroup} groups={[ \n                                                                    {label: 'Funds', options: funds.map(obj => ({value: obj.id, display: obj.name}) )} , \n                                                                    {label: 'Categories', options: categories.map(obj => ({value: obj.id, display: obj.name}) )}  ]}/> }\n            <Button value={buttonLabel} onClick={finishTransaction} width=\"140px\"/>\n        </StyledComp>\n    );\n}\n\nexport default TransactionForm;","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\nimport TransactionForm from '../components/TransactionForm';\n\nconst StyledComp = styled.div`\n    & > div:first-child {\n        font-weight: bold;\n        padding: 5px;\n        margin-top: -9px;\n    }\n`;\n\nconst AddTransaction = ({onAdd=()=>{}}) => {\n    const dispatch = useDispatch();\n\n    const onClickAdd = (obj) => {\n        if (obj.type === undefined) addFundAddition(obj);\n        else addTransaction(obj);\n        onAdd();\n    }\n\n    const addTransaction = (transaction) => {\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\n    }\n\n    const addFundAddition = (fundAddition) => {\n        dispatch({type: 'ADD_FUND_ADDITION', payload: fundAddition});\n    }\n\n    return (\n        <StyledComp>\n            <div>Add Transaction</div>\n            <TransactionForm onChange={onClickAdd} obj={{}}/>\n        </StyledComp>\n    );\n}\n\nexport default AddTransaction;","import styled from 'styled-components';\n\nconst ListContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: calc(100vh - 70px);\n\n    & > div:last-child {\n        flex-grow: 1;\n    }\n`;\n\nexport default ListContainer;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    width: 200px;\n    min-width: 200px;\n    margin: 5px;\n    padding: 0px 5px;\n    overflow: scroll;\n    position: relative;\n\n    & > div {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        width: 100%;\n        margin-bottom: 5px;\n        background-color: var(--menu-bg-color);\n        color: var(--menu-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n        cursor: pointer;\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div.hidden {\n        background-color: #999;\n        color: white;\n    }\n\n    & > div.hidden.selected {\n        background-color: #777;\n        color: white;\n    }\n\n    & > div.hidden:hover {\n        background-color: #777;\n        color: white;\n    }\n\n    & > div:last-child {\n        position: absolute;\n        bottom: 0px;\n        left: 5px;\n        width: calc(100% - 10px);\n    }\n`;\n\nconst List = ({heading='', array=[], hiddenArray=[], onClickObj, selected}) => {\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n\n    const toggleEditMode = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: !editMode});\n    }\n\n    return (\n        <StyledComp>\n            <h4>{heading}</h4>\n            {\n                array.map(obj => {\n                    if (obj.name.length === 0) return null;\n                    return (\n                        <div key={'objList-'+obj.id} onClick={onClickObj(obj.id)} className={selected === obj.id && editMode === false ? 'selected': ''}>{obj.name}</div>\n                    );\n                })\n            }\n            {   hiddenArray.length > 0 ? <hr/> : null   }\n            {\n                hiddenArray.map(obj => {\n                    if (obj.name.length === 0) return null;\n                    return (\n                        <div key={'objList-'+obj.id} onClick={onClickObj(obj.id)} className={selected === obj.id && editMode === false ? 'selected hidden': 'hidden'}>{obj.name}</div>\n                    );\n                })\n            }\n            <div onClick={toggleEditMode} className={editMode ? 'selected' : ''}>Edit {heading}</div>\n        </StyledComp>\n    );\n}\n\nexport default List;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { TiArrowSortedDown } from 'react-icons/ti';\n\nconst StyledComp = styled.div`\n    width: 250px;\n    margin: 5px auto;\n    position: relative;\n\n    & > div > svg {\n        fill: var(--icon-color);\n    }\n\n    & > div.dropdownDisplay {\n        font-size: 1.5em;\n        font-weight: bold;\n        border-bottom: 2px solid var(--icon-color);\n        padding: 5px;\n        position: relative;\n        padding-right: 30px;\n        padding-left: 30px;\n        overflow: hidden;\n    }\n\n    & > div.dropdownDisplay > svg {\n        position: absolute;\n        right: 0px;\n        top: 2px;\n        font-size: 1.5em;\n    }\n\n    & > div.dropdownGroup {\n        border-left: 1px solid var(--menu-border-color);\n        border-bottom: ${props => props.open ? '1px solid var(--menu-border-color)' : 'none'};\n        border-right: 1px solid var(--menu-border-color);\n        position: absolute;\n        top: 100%;\n        left: 0px;\n        right: 0px;\n        background-color: var(--bg-color);\n        max-height: ${props => props.open ? props.maxHeight : '0px'};\n        overflow: scroll;\n        transition: 0.3s;\n    }\n\n    & div.dropdownItem {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n\n    & div.dropdownItem:last-child {\n        border-bottom: none;\n    }\n\n    & div.dropdownItem.hidden {\n        color: #888;\n    }\n`;\n\nconst HeaderDropdown = ({value, options=[], onChange}) => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n\n    let currentValue = options.find(obj => obj.value === value);\n    if (value === 'Edit') currentValue = {display: 'Edit'};\n\n    if (currentValue === undefined) {\n        currentValue = {display: 'Edit'};\n    }\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    }\n\n    const onClickItem = (itemValue) => () => {\n        onChange(itemValue);\n        setOpen(false);\n    }\n\n    const onClickEdit = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: true});\n    }\n\n    let maxHeight = (options.length * 40) + 40;\n    if (maxHeight > 300) maxHeight = 300;\n\n    let visibleOptions = options.filter(obj => !obj.hidden);\n    let hiddenOptions = options.filter(obj => obj.hidden);\n    \n    return (\n        <StyledComp open={open} maxHeight={maxHeight+'px'}>\n            <div className='dropdownDisplay' onClick={toggleOpen}>{currentValue.display}<TiArrowSortedDown/></div>\n            <div className='dropdownGroup'>\n            {\n                visibleOptions.map(obj => <div key={'headerDropdown-'+obj.value} className='dropdownItem' onClick={onClickItem(obj.value)}>{obj.display}</div>)\n            }\n            {\n                hiddenOptions.map(obj => <div key={'headerDropdown-'+obj.value} className='dropdownItem hidden' onClick={onClickItem(obj.value)}>{obj.display}</div>)\n            }\n                <div className='dropdownItem' onClick={onClickEdit}>Edit</div>\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default HeaderDropdown;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { parseCurrency } from '../functions';\n\nconst StyledComp = styled.div`\n    margin: 10px;\n    font-size: 1em;\n    font-weight: bold;\n\n    & > table {\n        margin: auto;\n    }\n\n    & > table td:first-of-type {\n        text-align: right;\n    }\n\n    & > table td:last-of-type {\n        text-align: left;\n    }\n`;\n\nconst TotalsDisplay = ({label, value, fundObj}) => {\n    if (fundObj !== undefined) {\n        return (\n            <StyledComp>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Total Saved: </td>\n                            <td>{parseCurrency(value)}</td>\n                        </tr>\n                        {\n                            fundObj.target > 0 ?\n                                <React.Fragment>\n                                    <tr>\n                                        <td>Fund Target: </td>\n                                        <td>{parseCurrency(fundObj.target)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total Needed: </td>\n                                        <td>{parseCurrency(fundObj.remaining)}</td>\n                                    </tr>\n                                </React.Fragment> : null \n                        }\n                    </tbody>\n                </table>\n            </StyledComp>\n        );\n    }\n\n    return (\n        <StyledComp>\n            {label}: {parseCurrency(value)}\n        </StyledComp>\n    );\n}\n\nexport default TotalsDisplay;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    width: ${props => props.width+'px'};\n    border: 1px solid white;\n    position: fixed;\n    background-color: var(--bg-color);\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    opacity: 0;\n    transition: 0.4s;\n    pointer-events: none;\n\n    &.visible {\n        opacity: 1;\n        transition: 0.4s;\n        pointer-events: all;\n    }\n`;\n\nconst Modal = ({children, width=350, visible=false}) => {\n    return (\n        <StyledComp width={width} className={visible ? 'visible' : ''}>{children}</StyledComp>\n    );\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrashAlt, FaEdit } from 'react-icons/fa';\nimport { formatDate, parseTransaction, parseCurrency } from '../functions';\n\nimport Button from './Button';\nimport IconButton from './IconButton';\nimport Grid from './Grid';\nimport TransactionForm from './TransactionForm';\n\nconst StyledComp = styled.div`    \n    padding: 10px;\n\n    & > table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    & > table td {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        text-transform: capitalize;\n    }\n\n    & > table tr > td:first-child {\n        width: 110px;\n    }\n\n    & strong {\n        font-size: 1.3em;\n    }\n`;\n\nconst getTableRow = (heading, value) => {\n    if (value === undefined) return null;\n    if (value.length === 0) return null;\n\n    return <tr><td>{heading}</td><td>{value}</td></tr>\n}\n\nconst getTable = (parsedObj) => {\n    if (parsedObj.type === undefined) parsedObj.type = 'Add to Fund';\n    return <table>\n                <tbody>\n                    { getTableRow('Type', parsedObj.type) }\n                    { getTableRow('From', parsedObj.from) }\n                    { getTableRow('To', parsedObj.to) }\n                    { getTableRow('Category', parsedObj.category) }\n                    { getTableRow('Account', parsedObj.account) }\n                    { getTableRow('Fund', parsedObj.fund) }\n                    { getTableRow('Date', formatDate(parsedObj.date)) }\n                    { getTableRow('Description', parsedObj.description) }\n                    { getTableRow('Amount', parseCurrency(parsedObj.amount)) }\n                </tbody>\n            </table>\n}\n\nconst TransactionDetails = ({obj, onClose, onDelete, onEdit=()=>{}}) => {\n    const dispatch = useDispatch();\n    const [editMode, setEditMode] = useState(false);\n\n    if (obj === null) return null;\n    let parsedObj = parseTransaction(obj);\n\n    const edit = () => {\n        setEditMode(!editMode);\n    }\n\n    const remove = () => {     \n        if (parsedObj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: parsedObj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: parsedObj.id});\n        onClose();\n    }\n\n    const onChangeTransaction = (newObj) => {\n        if (newObj.type === undefined) dispatch({type: 'UPDATE_FUND_ADDITION', payload: newObj});\n        else dispatch({type: 'UPDATE_TRANSACTION', payload: newObj});\n        onEdit(newObj);\n        setEditMode(false);\n    }\n\n    const onClickClose = () => {\n        setTimeout(() => {\n            setEditMode(false);\n        }, 400);\n        onClose();\n    }\n\n    return (\n        <StyledComp>\n            <Grid template=\"50px auto 50px\">\n                <div style={{textAlign: 'left'}}><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px' size=\"1.3em\"/></div>\n                <strong>Transaction Details</strong>\n                <div style={{textAlign: 'right'}}><IconButton Icon={FaEdit} onClick={edit} color='white' topAdjust='1px' size=\"1.3em\"/></div>\n            </Grid>\n\n            { editMode ? <TransactionForm obj={obj} onChange={onChangeTransaction}/> : getTable(parsedObj) }\n\n            <br/>\n\n            <Button onClick={onClickClose} value=\"Close\"/>\n        </StyledComp>\n    );\n}\n\nexport default TransactionDetails;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { format, parseISO, parse, compareAsc } from 'date-fns';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport Transaction from './Transaction';\nimport HeaderDropdown from './HeaderDropdown';\nimport TotalsDisplay from './TotalsDisplay';\nimport Modal from './Modal';\nimport TransactionDetails from './TransactionDetails';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n    position: relative;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n        padding-bottom: 40px;\n    }\n`;\n\nconst StyledGroup = styled.div`\n    margin: 0px 10px;\n\n    & > div > div {\n        border-bottom: 1px solid gray;\n        padding: 3px;\n    }\n\n    & > div > div:first-of-type {\n        margin-top: 0px;\n        border-top: none;\n    }\n\n    & > div > div:last-of-type {\n        border-bottom: none;\n    }\n\n    & > div {\n        border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n        ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*50}px`};\n        overflow: hidden;\n        transition: 0.3s;\n    }\n\n    & > strong {\n        display: block;\n        width: 100%;\n        background-color: var(--menu-bg-color);\n        padding: 10px;\n        color: var(--menu-text-color);\n    }\n\n    & > strong:hover {\n        cursor: pointer;\n    }\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n\n        & > div > div {\n            padding: 0px;\n        }\n\n        & > div {\n            border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n            ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*47}px`};\n            overflow: hidden;\n            transition: 0.3s;\n        }\n    }\n`;\n\nconst Transactions = ({transactions=[], heading='', id, onClickDropdown=()=>{}, objArray=[]}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const currentPage = useSelector(state => state.currentPage);\n    const [closed, setClosed] = useState({});\n\n    const [details, setDetails] = useState({});\n    const [showDetails, setShowDetails] = useState(false);\n\n    let accountId = currentPage === 'Accounts' ? id : undefined;    \n    let currentObj = objArray.find(obj => obj.id === id);\n\n    //organise by month/year\n    let organisedObj = {};\n    transactions.forEach(obj => {\n        let date = obj.date;\n        let formatted = format(parseISO(date), 'MMMM yyyy');\n        if (organisedObj[formatted] === undefined) organisedObj[formatted] = [];\n        organisedObj[formatted].push(obj);\n    });\n\n    //put into an array and sort by date so newest first\n    let organisedArr = Object.keys(organisedObj).map(key => {\n        let sortedTransactions = organisedObj[key].sort((a,b) => {\n            return compareAsc(parseISO(b.date), parseISO(a.date));\n        });\n        return {month: key, transactions: sortedTransactions};\n    }).sort((a,b) => {\n        let first = parse(a.month, 'MMMM yyyy', new Date());\n        let second = parse(b.month, 'MMMM yyyy', new Date());\n        return compareAsc(second, first);\n    });\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    const onToggleGroup = (month) => () => {\n        let closedObj = {...closed};\n        closedObj[month] === undefined ? closedObj[month] = true : closedObj[month] = !closedObj[month];\n        setClosed(closedObj);\n    }\n\n    const onToggleDetails = (obj) => () => {\n        setDetails(obj);\n        setShowDetails(true);\n    }\n\n    const onEditTransaction = (obj) => {\n        setDetails(obj);\n    }\n\n    const onCloseDetails = () => {\n        setShowDetails(false);\n    }\n\n    let total = transactions.reduce((t,c) => {\n        t += getAmount(c, categories, id, false);\n        return t;\n    }, 0);        \n\n    let negative = false;\n    if (currentObj && currentObj.startingBalance !== undefined) {\n        if (currentObj.type === 'expense') {\n            total -= parseFloat(currentObj.startingBalance);\n            negative = true;\n        } else total += parseFloat(currentObj.startingBalance);\n    }\n    \n    let categoryType = 'Expense';\n    if (currentPage === 'Categories') {\n        if (currentObj !== undefined) categoryType = currentObj.type;\n    }\n\n    let fundInfo = {};\n    if (currentPage === 'Funds') {\n        if (currentObj !== undefined) {\n            fundInfo = {\n                target: currentObj.targetAmount,\n                remaining: currentObj.targetAmount - total\n            }\n        }\n    }\n\n    let headerOptions = objArray.map(obj => {\n        let hidden = obj.hidden || obj.complete || obj.closed;\n        return {display: obj.name, value: obj.id, hidden: hidden};\n    });\n\n    return (\n        <StyledComp>\n            { isMobile ? null : <h4>{heading}</h4> }\n            { isMobile ? <HeaderDropdown value={id} options={headerOptions} onChange={onChangePage} /> : null }\n            <Modal visible={showDetails}><TransactionDetails obj={details} onClose={onCloseDetails} onEdit={onEditTransaction}/></Modal>\n            {/* <EditButton><IconButton Icon={FaEdit} onClick={toggleDelete}/></EditButton> */}\n            { currentPage === 'Accounts' ? <TotalsDisplay label=\"Balance\" value={total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'expense' ? <TotalsDisplay label=\"Total Spent\" value={-total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'income' ? <TotalsDisplay label=\"Total Earned\" value={total}/> : null }\n            { currentPage === 'Funds' ? <TotalsDisplay value={total} fundObj={fundInfo}/> : null }\n            {\n                organisedArr.length === 0 && objArray.length > 0 ? <div style={{margin: '10px'}}>No Transactions to Display</div> : null\n            }\n            {\n                organisedArr.map(group => {\n                    return (\n                        <StyledGroup key={'transactionGroup-'+group.month+id} open={closed[group.month] !== true} qty={group.transactions.length}>\n                            <strong onClick={onToggleGroup(group.month)}>{group.month}</strong>\n                            <div>\n                                { group.transactions.map(obj => <Transaction key={'transaction-'+obj.id} obj={obj} accountId={accountId} showDelete={false} onClick={onToggleDetails}/>) }\n                            </div>\n                        </StyledGroup>\n                    )\n\n                })\n            }\n            {\n                currentObj && currentObj.startingBalance !== undefined ? (\n                    <StyledGroup>\n                        <strong>Opening Balance</strong>\n                        <Transaction obj={{date: currentObj.dateOpened, amount: negative ? -currentObj.startingBalance : currentObj.startingBalance, description: ''}} accountId={accountId}/>\n                    </StyledGroup>\n                ) : null\n            }\n        </StyledComp>\n    );\n}\n\nexport default Transactions;","import styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 90%;\n    max-width: 1150px;\n    margin: 10px auto;\n\n    @media screen and (max-width: 700px) {\n        width: 100%;\n        margin: 0px;\n        ${props => props.paddingBottom ? `padding-bottom: ${props.paddingBottom}` : ''};\n    }\n`;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Input from './Input';\n\nimport { capitalize, filterDeleted } from '../functions';\n\nconst EditInput = ({label, defaultValue, value, onChange, width=undefined}) => {\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let itemWidth = '100px';\n    if (width === undefined && label === 'description') itemWidth = '300px';\n    else if (width !== undefined) itemWidth = width;\n\n    if (label === 'category') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={categories.map(obj => ({value: obj.id, display: obj.name}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'number') return <Input type=\"number\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue === 'date') return <Input type=\"date\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue.includes(',') > 0) return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={defaultValue.split(',').map(obj => ({value: obj, display: capitalize(obj)}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string') return <Input onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'boolean') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={[{display: 'Yes', value: true}, {display: 'No', value: false}]} width={itemWidth} noBorder={true}/>;\n}\n\nexport default EditInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Table from './Table';\nimport Button from './Button';\nimport EditInput from './EditInput';\n\nimport { fromCamelCase, checkIfCanDelete } from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    display: inline-block;\n    margin: 10px;\n    border-radius: 5px;\n    width: 40%;\n\n    & > div:first-child {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n        font-weight: bold;\n    }\n\n    & > div:last-child {\n        display: flex;\n    }\n\n    & > div:last-child > div {\n        padding: 10px;\n        width: 50%;\n    }\n\n    & > div:last-child > div:first-child {\n        border-right: 1px solid white;\n    }\n\n    & > div.popup {\n        background-color: rgba(0,0,0,0.5);\n        position: absolute;\n        top: 0px;\n        bottom: 0px;\n        left: 0px;\n        right: 0px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transform: scale(${props => props.open ? '1.0' : '0.0'});\n        transition: 0.3s;\n        z-index: 5;\n    }\n\n    & > div.popup > div {\n        width: 100%;\n        padding: 10px;\n    }\n`;\n\nconst MobileEditGroup = ({modal, obj, onChange, onDelete}) => {\n    const [open, setOpen] = useState(obj.name.length === 0 ? true : false);\n    const [editing, setEditing] = useState(false);\n\n    const onEdit = () => {\n        setOpen(true);\n        setEditing(true);\n    }\n\n    const onCancel = () => {\n        onDelete(obj.id)();\n    }\n\n    const close = () => {\n        if (obj.name.length === 0) return;\n        setOpen(false);\n        setEditing(false);\n    }\n\n    return (\n        <StyledComp open={open}>\n            <div>{obj.name}</div>\n            <div className=\"popup\">\n                <div>\n                    <Table key={'EditListTable-'+obj.id} style={{marginBottom: '10px', width: '100%', borderTop: '1px solid #555'}} padding='2px'>\n                        <tbody>\n                        {\n                            Object.keys(modal).map(key => {\n                                return (\n                                    <tr key={'EditListRow-'+key}>\n                                        <td style={{backgroundColor: '#222', fontWeight: 'bold'}}>{fromCamelCase(key)}</td>\n                                        <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='100%'/></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                        </tbody>\n                    </Table>\n                    { !editing ? <Button value=\"Cancel\" onClick={onCancel} width=\"150px\" inline={true} style={{marginRight: '5px'}}/> : null }\n                    <Button value=\"Close\" onClick={close} width=\"150px\" inline={true}/>\n                </div>\n            </div>\n            <div>\n                <div onClick={onEdit}>Edit</div>\n                { checkIfCanDelete(obj) ? <div onClick={onDelete(obj.id)}>Delete</div> : <div style={{color: 'grey'}}>Delete</div>}\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default MobileEditGroup;","const category = {\n    name: '',\n    description: '',\n    type: 'income,expense',\n    hidden: false,\n    startingBalance: 0\n};\n\nconst fund = {\n    name: '',\n    description: '',\n    targetAmount: 0,\n    complete: false,\n    startingBalance: 0\n}\n\nconst account = {\n    name: '',\n    note: '',\n    interestRate: 0.0,\n    startingBalance: 0,\n    defaultAccount: false,\n    closed: false,\n    extraCharges: 0,\n}\n\nconst budget = {\n    category: 0,\n    amount: 0,\n    startDate: 'date',\n    endDate: 'date'\n}\n\nexport const modals = {\n    categories: {\n        modal: category,\n        editString: '_CATEGORY'\n    },\n    funds: {\n        modal: fund,\n        editString: '_FUND'\n    },\n    accounts: {\n        modal: account,\n        editString: '_ACCOUNT'\n\n    },\n    budgets: {\n        modal: budget,\n        editString: '_BUDGET'\n    }\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\nimport { format } from 'date-fns';\n\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport HeaderDropdown from '../components/HeaderDropdown';\nimport EditInput from '../components/EditInput';\nimport MobileEditGroup from '../components/MobileEditGroup';\n\nimport { modals } from '../modals';\nimport { fromCamelCase, checkIfCanDelete} from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid white;\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n    }\n`;\n\nconst EditList = ({array=[], vertical=false, onClickDropdown=()=>{}, id}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const currentPage = useSelector(state => state.currentPage);\n\n    const modalKey = currentPage.toLowerCase();\n    const modalObj = {...modals[modalKey]};\n    const modal = {...modalObj.modal};\n    const add = 'ADD'+modalObj.editString;\n    const update = 'UPDATE'+modalObj.editString;\n    const remove = 'REMOVE'+modalObj.editString; \n\n    const onChange = (obj, key) => (e) => {\n        let value = e.target.value;\n        if (typeof modal[key] === 'number') value = parseFloat(value);\n\n        obj[key] = value;\n        //make sure false and true are boolean not string\n        if (obj[key] === 'false') obj[key] = false;\n        if (obj[key] === 'true') obj[key] = true;\n        dispatch({type: update, payload: obj});\n    }\n\n    const onDelete = (id) => () => {\n        dispatch({type: remove, payload: id});\n    }\n\n    const onAdd = () => {      \n        let newObj = {...modal};\n        Object.keys(newObj).forEach(key => {\n            if (typeof newObj[key] === 'string' && newObj[key].includes(',')) newObj[key] = newObj[key].split(',')[0];\n            if (typeof newObj[key] === 'string' && newObj[key] === 'date') newObj[key] = format(new Date(), 'yyyy-MM-dd');\n        });  \n        dispatch({type: add, payload: newObj});\n    }\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    if (isMobile) return (\n        <StyledComp>\n            <HeaderDropdown value={'Edit'} options={array.map(obj => ({display: obj.name, value: obj.id}))} onChange={onChangePage} />\n            {\n                array.map(obj => {\n                    return (\n                        <MobileEditGroup key={'MobileEditGroup-'+obj.id} modal={modal} obj={obj} onChange={onChange} onDelete={onDelete}/>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n\n    return (\n        <StyledComp>\n            <h4>Edit {currentPage}</h4>\n            {\n                array.map(obj => {\n                    return (\n                        <Table key={'EditListTable-'+obj.id} style={{display: 'inline-block', margin: '10px'}} padding='2px 5px'>\n                            <tbody>\n                                {\n                                    Object.keys(modal).map(key => {\n                                        return (\n                                            <tr key={'EditListRow-'+key}>\n                                                <th>{fromCamelCase(key)}</th>\n                                                <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='140px'/></td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                                <tr>\n                                    <td colSpan='2'>\n                                    { checkIfCanDelete(obj) \n                                        ? <Button value=\"Delete\" onClick={onDelete(obj.id)} width='50%' color='red'/> \n                                        : <div style={{height: 'var(--input-height)', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>Being Used</div> }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n}\n\nexport default EditList;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Categories = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allCategories = useSelector(state => filterDeleted(state.categories));\n    const categories = allCategories.filter(cat => !cat.hidden);\n    const hiddenCategories = allCategories.filter(cat => cat.hidden);\n    const firstCategory = categories[0];\n    let firstCategoryId = firstCategory !== undefined ? firstCategory.id : undefined;\n    let firstCategoryName = firstCategory !== undefined ? firstCategory.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [category, setCategory] = useState(firstCategoryId);\n    const [categoryName, setCategoryName] = useState(firstCategoryName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (categories.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let category = allCategories.find(obj => obj.id === id);\n        setCategory(id);\n        setCategoryName(category.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.category !== undefined && obj.category === category ? true : false;\n    });    \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Categories'} array={categories} hiddenArray={hiddenCategories} onClickObj={onClickObj} selected={category}/> }\n                    { editMode \n                        ? <EditList array={allCategories} onClickDropdown={onClickObj} id={category}/>\n                        : <Transactions transactions={filteredTransactions} heading={categoryName} onClickDropdown={onClickObj} objArray={allCategories} id={category}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Categories;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Funds = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allFunds = useSelector(state => filterDeleted(state.funds));\n    const funds = allFunds.filter(fund => !fund.complete);\n    const hiddenFunds = allFunds.filter(fund => fund.complete);\n    const firstFund = funds[0];\n    let firstFundId = firstFund !== undefined ? firstFund.id : undefined;\n    let firstFundName = firstFund !== undefined ? firstFund.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const [fund, setFund] = useState(firstFundId);\n    const [fundName, setFundName] = useState(firstFundName);\n\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (funds.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let fund = allFunds.find(obj => obj.id === id);\n        setFund(id);\n        setFundName(fund.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    }); \n\n    const filteredFundAdditions = fundAdditions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    });\n\n    const combined = [...filteredTransactions, ...filteredFundAdditions];\n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Funds'} array={funds} hiddenArray={hiddenFunds} onClickObj={onClickObj} selected={fund}/> }\n                    { editMode \n                        ? <EditList array={allFunds} onClickDropdown={onClickObj} id={fund}/>\n                        : <Transactions transactions={combined} heading={fundName} onClickDropdown={onClickObj} objArray={allFunds} id={fund}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Funds;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Accounts = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allAccounts = useSelector(state => filterDeleted(state.accounts));\n    const accounts = allAccounts.filter(account => !account.closed);\n    const closedAccounts = allAccounts.filter(account => account.closed);\n    const firstAccount = accounts[0];\n    let firstAccountId = firstAccount !== undefined ? firstAccount.id : undefined;\n    let firstAccountName = firstAccount !== undefined ? firstAccount.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [account, setAccount] = useState(firstAccountId);\n    const [accountName, setAccountName] = useState(firstAccountName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (accounts.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let account = allAccounts.find(obj => obj.id === id);\n        setAccount(id);\n        setAccountName(account.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        if (obj.from !== undefined && obj.to !== undefined && (obj.from === account || obj.to === account)) return true; \n        return obj.account !== undefined && obj.account === account ? true : false;\n    });   \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Accounts'} array={accounts} hiddenArray={closedAccounts} onClickObj={onClickObj} selected={account}/> }\n                    { editMode \n                        ? <EditList array={allAccounts} vertical={true} onClickDropdown={onClickObj} id={account}/>\n                        : <Transactions transactions={filteredTransactions} heading={accountName} id={account} onClickDropdown={onClickObj} objArray={allAccounts}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Accounts;","import React, { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\n\nimport { changeColourScheme } from '../functions';\nimport { sync } from '../redux/store';\n\nimport Container from '../components/Container';\nimport LabelledInput from '../components/LabelledInput';\nimport Button from '../components/Button';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst Settings = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user);\n    const lastSync = useSelector(state => state.lastSync);\n    const fetching = useSelector(state => state.fetching);\n\n    const payPeriodType = useSelector(state => state.general.payPeriodType);\n    const currencySymbol = useSelector(state => state.general.currencySymbol);\n    const showDecimals = useSelector(state => state.general.showDecimals);\n    const startDate = useSelector(state => state.general.startDate);\n    const colourScheme = useSelector(state => state.general.colourScheme);\n    const swapSummaries = useSelector(state => state.general.swapSummaries);\n    const periodsToDisplay = useSelector(state => state.general.periodsToDisplay);\n    const reverseSummaryTable = useSelector(state => state.general.reverseSummaryTable);\n\n    const setPayPeriodType = (e) => dispatch({type: 'SET_PAY_PERIOD_TYPE', payload: e.target.value});\n    const setCurrencySymbol = (e) => dispatch({type: 'SET_CURRENCY_SYMBOL', payload: e.target.value});\n    const setShowDecimals = (e) => {\n        let value = e.target.value === 'false' ? false : true;\n        dispatch({type: 'SET_SHOW_DECIMALS', payload: value});\n    }\n    const setStartDate = (e) => dispatch({type: 'SET_START_DATE', payload: e.target.value});\n    const setColourScheme = (value) => dispatch({type: 'SET_COLOUR_SCHEME', payload: value});\n    const setSwapSummaries = (e) => dispatch({type: 'SET_SWAP_SUMMARIES', payload: e.target.value === 'false' ? false : true});\n    const setPeriodsToDisplay = (e) => dispatch({type: 'SET_PERIODS_TO_DISPLAY', payload: parseInt(e.target.value)});\n    const setReverseSummaryTable = (e) => dispatch({type: 'SET_REVERSE_SUMMARY_TABLE', payload: e.target.value === 'false' ? false : true});\n\n    const setUser = (value) => dispatch({type: 'SET_USER', payload: value});\n    const setMessage = (value) => dispatch({type: 'SET_MESSAGE', payload: value});\n    const setFetching = (value) => dispatch({type: 'SET_FETCHING', payload: value});\n    const importBackup = (value) => dispatch({type: 'IMPORT_BACKUP', payload: value});\n\n    const [importData, setImportData] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [restoreMessage, setRestoreMessage] = useState('');\n    const fileInput = useRef(null);\n\n\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions,\n            user: state.user\n        };\n    });\n\n    const downloadJson = () => {\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(backupData, null, 2));\n\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", dataStr);\n        link.setAttribute(\"download\", `Budget Backup - ${format(new Date(),'yyyy-MM-dd')}.json`);\n        link.click();\n    }\n\n    const onFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file === undefined) return;\n\n        if (file.type.match('application/json')) {\n            const reader = new FileReader();\n\n            reader.onload = (e) => {\n                let text = reader.result;\n                let obj = JSON.parse(text);\n\n                let newObj = {};\n\n                if (obj.general !== undefined) newObj.general = obj.general;\n                if (obj.accounts !== undefined) newObj.accounts = obj.accounts;\n                if (obj.categories !== undefined) newObj.categories = obj.categories;\n                if (obj.budgets !== undefined) newObj.budgets = obj.budgets;\n                if (obj.funds !== undefined) newObj.funds = obj.funds;\n                if (obj.fundAdditions !== undefined) newObj.fundAdditions = obj.fundAdditions;\n                if (obj.transactions !== undefined) newObj.transactions = obj.transactions;\n                if (obj.user !== undefined) newObj.user = obj.user;\n                \n                setImportData(newObj);\n            }\n\n            reader.readAsText(file);\n        } else {\n            setImportData(null);\n        }\n    }\n\n    const onImportBackup = () => {\n        importBackup(importData);\n        setImportData(null);\n        setRestoreMessage('Data Restored.')\n        fileInput.current.value = '';\n    }\n\n    const onChangeColorScheme = (e) => {\n        let value = e.target.value;\n        changeColourScheme(value);\n        setColourScheme(value);\n    }\n\n    const manualSync = () => {\n        sync(backupData, dispatch, true);\n    }\n\n    const login = () => {\n        dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n        setFetching(true);\n        fetch(url+'api/login', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            setFetching(false);\n            if (data.status === 'success') {\n                setUsername('');\n                setPassword('');\n                setUser(data.user);\n            } else {\n                if (data.type === 'logout') setUser(null);\n                setMessage({text: data.message, type: 'error'});\n            }\n        }).catch(err => {\n            console.log(err.message);\n            setMessage({text: 'Failed to contact server.', type: 'error'});\n            setFetching(false);\n        });\n    }\n\n    const register = () => {\n        if (username.length < 3) {\n            setMessage({text: 'Username should be 3 or more characters', type: 'error'});\n            return;\n        }\n\n        if (password.length < 5) {\n            setMessage({text: 'Password should be 5 or more characters', type: 'error'});\n            return;\n        }\n\n        setMessage({text: '', type: ''});\n        setFetching(true);\n        fetch(url+'api/register', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            console.log(data);\n            setUsername('');\n            setPassword('');\n            setFetching(false);\n            if (data.status === 'success') dispatch({type: 'SET_USER', payload: data.user});\n            else setMessage({text: data.message, type: 'error'});\n        }).catch(err => {\n            console.log(err.message);\n            setUser(null);\n            setMessage({text: 'Failed to contact server. Please try again.', type: 'error'});\n            setFetching(false);\n        });\n    }\n\n    const logout = () => {\n        setUser(null);\n    }\n\n    const onChangeUsername = (e) => setUsername(e.target.value);\n    const onChangePassword = (e) => setPassword(e.target.value);\n\n    let lastSyncDate = lastSync.toFixed(0);\n    let lastSyncDisplay = `${lastSyncDate.slice(6,8)}/${lastSyncDate.slice(4,6)}/${lastSyncDate.slice(0,4)} at ${lastSyncDate.slice(8,10)}:${lastSyncDate.slice(10,12)}`;\n    if (lastSync === 0 || lastSync === undefined) lastSyncDisplay = 'Never';\n\n    const labelWidth = '200px';\n\n    return (\n        <div>\n            <Container paddingBottom='100px'>\n                <h4>Settings</h4>\n\n                <LabelledInput label=\"Start Date\" type=\"date\" value={startDate} onChange={setStartDate} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Currency Symbol\" value={currencySymbol} onChange={setCurrencySymbol} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Show Decimals\" type=\"dropdown\" value={showDecimals} options={[{value: true, display: 'Yes'}, {value: false, display: 'No'}]} onChange={setShowDecimals} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Pay Period\" type=\"dropdown\" value={payPeriodType} onChange={setPayPeriodType} labelWidth={labelWidth} options={[\n                    {value: 'monthly', display: 'Monthly'}, \n                    {value: 'fourWeekly', display: '4-Weekly'}, \n                    {value: 'twoWeekly', display: '2-Weekly'}, \n                    {value: 'weekly', display: 'Weekly'}\n                ]}/>\n                <LabelledInput label=\"Periods to Display\" type=\"number\" value={periodsToDisplay} onChange={setPeriodsToDisplay} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Swap Summaries\" type=\"dropdown\" value={swapSummaries} options={[{value: true, display: 'Yes'}, {value: false, display: 'No'}]} onChange={setSwapSummaries} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Reverse Summary Table\" type=\"dropdown\" value={reverseSummaryTable} options={[{value: true, display: 'Yes'}, {value: false, display: 'No'}]} onChange={setReverseSummaryTable} labelWidth={labelWidth}/>\n                <LabelledInput label=\"Background Colour\" type=\"dropdown\" value={colourScheme} options={[{value: 'dark', display: 'Dark'}, {value: 'black', display: 'Black'}, {value: 'light', display: 'Light'}]} onChange={onChangeColorScheme} labelWidth={labelWidth}/>\n\n                <h4>Backup</h4>\n                <p>This will download a backup of all data as a JSON file, and allow you to restore from a backup if needed.</p>\n                <Button value=\"Backup\" width=\"120px\" inline={true} onClick={downloadJson}/>\n\n                <h4>Restore</h4>\n                <p>Use this to restore from a previously taken backup JSON file. This will overwrite any current data and replace it with the backup data.</p>\n                <p style={{color: '#0F0'}}>{restoreMessage}</p>\n                <input type=\"file\" onChange={onFileChange} ref={fileInput}/>\n                { importData !== null ? <Button value=\"Import\" width=\"120px\" inline={true} onClick={onImportBackup}/> : null }\n\n                <h4>Syncing</h4>\n                <p>This will allow you to upload your data to a server for backup and to sync with other devices.</p>\n                <p>Last synced on: {lastSyncDisplay}</p>\n                { user === null \n                ?   <div>\n                        <LabelledInput label=\"Username\" value={username} onChange={onChangeUsername}/>\n                        <LabelledInput label=\"Password\" value={password} onChange={onChangePassword} type=\"password\"/>\n                        <Button value=\"Login\" width=\"120px\" inline={true} onClick={login} loading={fetching}/> \n                        <Button value=\"Register\" width=\"120px\" inline={true} onClick={register} loading={fetching}/>\n                    </div>\n\n                :   <div>\n                        <Button value=\"Sync Now\" width=\"120px\" inline={true} onClick={manualSync} loading={fetching}/> \n                        <Button value=\"Logout\" width=\"120px\" inline={true} onClick={logout}/>\n                    </div>\n                }\n            </Container>\n        </div>\n    );\n}\n\nexport default Settings;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getAccountSummary, filterDeleted, parseCurrency } from '../functions';\n\nimport Container from '../components/Container';\nimport Table from '../components/Table';\nimport Input from '../components/Input';\n\nconst InterestCalc = () => {\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    const [customInterest, setCustomInterest] = useState(0);\n    const [customAmount, setCustomAmount] = useState(0);\n    const [customCharges, setCustomCharges] = useState(0);\n    let yearlyInterest = customAmount * (customInterest/100);\n    const monthlyInterest = (yearlyInterest / 12) - customCharges;\n    yearlyInterest = monthlyInterest * 12;\n\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n    const { totalYearly, totalMonthly } = addExtras(accountSummary, accounts);\n\n    const onChangeCustomInterest = (e) => {\n        setCustomInterest(e.target.value);\n    }\n\n    const onChangeCustomAmount = (e) => {\n        setCustomAmount(e.target.value);\n    }\n\n    const onChangeCustomCharges = (e) => {\n        setCustomCharges(e.target.value);\n    }\n    \n    return (\n        <div>\n            <Container>\n                <h4>Interest Calculator</h4>\n                <p>This will show you the estimated amount of interest you should be receiving based on the interest rates provided, taking into account any extra charges (such as bank fees). You can change these rates on the Accounts page by using the 'Edit Accounts' button.</p>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>Account</td>\n                            <td>Interest Rate</td>\n                            <td>Amount</td>\n                            <td>Extra Charges</td>\n                            <td>Yearly Interest</td>\n                            <td>Monthly Interest</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        accountSummary.map(account => {\n                            let yearlyInterestBase = account.total * (account.interestRate/100);\n                            let monthlyInterestBase = yearlyInterestBase / 12;\n                            let monthlyInterest = monthlyInterestBase - account.extraCharges;\n                            let yearlyInterest = monthlyInterest * 12;\n                            return <tr key={'account-'+account.id}>\n                                <td>{account.name}</td>\n                                <td>{account.interestRate}%</td>\n                                <td>{parseCurrency(account.total)}</td>\n                                <td>{parseCurrency(account.extraCharges)}</td>\n                                <td>{parseCurrency(yearlyInterest)}</td>\n                                <td>{parseCurrency(monthlyInterest)}</td>\n                            </tr>;\n                        })\n                    }\n                        <tr>\n                            <th colSpan='4' style={{textAlign: 'right'}}>Totals</th>\n                            <td>{parseCurrency(totalYearly)}</td>\n                            <td>{parseCurrency(totalMonthly)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <h4>Custom</h4>\n                <p>Use this to check how much interest you'll get with different amounts and interest rates etc.</p>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>Interest Rate</td>\n                            <td>Amount</td>\n                            <td>Extra Charges</td>\n                            <td>Yearly Interest</td>\n                            <td>Monthly Interest</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className=\"input\"><Input type=\"number\" width=\"120px\" value={customInterest} onChange={onChangeCustomInterest}/></td>\n                            <td className=\"input\"><Input type=\"number\" width=\"120px\" value={customAmount} onChange={onChangeCustomAmount}/></td>\n                            <td className=\"input\"><Input type=\"number\" width=\"130px\" value={customCharges} onChange={onChangeCustomCharges}/></td>\n                            <td>{parseCurrency(yearlyInterest)}</td>\n                            <td>{parseCurrency(monthlyInterest)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nconst addExtras = (accountSummary, accounts) => {\n    let totalYearly = 0;\n    let totalMonthly = 0;\n\n    accountSummary.forEach(account => {\n        let extras = getExtraDetails(account.id, accounts);\n        let yearlyInterestBase = account.total * (extras.interestRate/100);\n        let monthlyInterestBase = yearlyInterestBase / 12;\n        let monthlyInterest = monthlyInterestBase - extras.extraCharges;\n        let yearlyInterest = monthlyInterest * 12;\n        totalYearly += yearlyInterest;\n        totalMonthly += monthlyInterest;\n\n        account.extraCharges = extras.extraCharges;\n        account.interestRate = extras.interestRate;\n    });\n\n    return {totalYearly, totalMonthly};\n}\n\nconst getExtraDetails = (id, accounts) => {\n    let account = accounts.find(obj => obj.id === id);\n    if (account === undefined) return null;\n    return {\n        interestRate: account.interestRate,\n        extraCharges: account.extraCharges\n    };\n}\n\nexport default InterestCalc;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { parseISO, compareAsc } from 'date-fns';\n\nimport { today, getAllDates, getPeriodOfTransaction, filterDeleted, parseCurrency, reverseDate } from '../functions';\n\nimport Container from '../components/Container';\nimport Grid from '../components/Grid';\nimport LabelledInput from '../components/LabelledInput';\nimport Table from '../components/Table';\n\nconst Breakdown = () => {\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const startDate = useSelector(state => state.general.startDate);\n    const payPeriodType = useSelector(state => state.general.payPeriodType);\n\n    const firstCategory = categories.length > 0 ? categories[0].id : 0;\n    const [category, setCategory] = useState(firstCategory);\n\n    const [fromDate, setFromDate] = useState(startDate);\n    const [toDate, setToDate] = useState(today());\n    \n    if (categories.length === 0) return <div>Please add a category to use this feature.</div>;\n    \n    //get an array of dates that apply to this period\n    let dates = getAllDates(startDate, payPeriodType);\n    let firstPeriod = getPeriodOfTransaction(dates, fromDate);\n    let index = dates.indexOf(firstPeriod);\n    if (index > 0) dates = dates.slice(index);\n\n    //setup the table object ready for data\n    let tableObj = {totals: {}};\n    dates.forEach(date => {\n        let accountObj = {};\n        accounts.forEach(account => {\n            accountObj[account.id] = 0;\n            tableObj.totals[account.id] = 0;\n        });\n        tableObj[date] = accountObj;\n    });\n\n    //add data from transactions\n    transactions.forEach(tr => {\n        if (tr.type !== \"spend\") return;\n        if (compareAsc(parseISO(tr.date), parseISO(fromDate)) === -1) return; //if before fromDate, ignore\n        if (compareAsc(parseISO(tr.date), parseISO(toDate)) === 1) return; //if after toDate, ignore\n        if (tr.category === undefined || tr.category !== category) return; //if not selected category\n\n        let period = getPeriodOfTransaction(dates, tr.date);\n        tableObj[period][tr.account] += tr.amount;\n        tableObj.totals[tr.account] += tr.amount;\n    });\n\n    let totalAmount = Object.values(tableObj.totals).reduce((a,c) => a+c, 0);\n\n    const onChangeCategory = (e) => {\n        setCategory(Number(e.target.value));\n    }\n\n    const onChangeFrom = (e) => {\n        setFromDate(e.target.value);\n    }\n\n    const onChangeTo = (e) => {\n        setToDate(e.target.value);\n    }\n\n    const getTableRow = (date) => {\n        let dateObj = tableObj[date];\n        let total = Object.values(dateObj).reduce((a,c) => a+c, 0);\n        return <tr key={'table-row-date-'+date}>\n            <td>{reverseDate(date)}</td>\n            <td>{parseCurrency(total)}</td>\n            {\n                accounts.map(account => <td key={'table-row-data-'+account.id}>{parseCurrency(dateObj[account.id])}</td>)\n            }\n        </tr>;\n    }\n\n    return (\n        <div>\n            <Container>\n                <h4>Breakdown</h4>\n                <LabelledInput label=\"Category\" type=\"dropdown\" value={category} options={categories.map(obj => ({value: obj.id, display: obj.name}))} onChange={onChangeCategory}/>\n                <Grid width=\"600px\">\n                    <LabelledInput label=\"From\" type=\"date\" value={fromDate} onChange={onChangeFrom} min={startDate} max={toDate}/>\n                    <LabelledInput label=\"To\" type=\"date\" value={toDate} onChange={onChangeTo} min={fromDate}/>\n                </Grid>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td></td>\n                            <td>Total</td>\n                            {\n                                accounts.map(obj => <td key={'table-head-'+obj.id}>{obj.name}</td>)\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { \n                            dates.map(date => getTableRow(date)) \n                        }\n                        <tr>\n                            <th>Totals</th>\n                            <td>{parseCurrency(totalAmount)}</td>\n                            {\n                                accounts.map(account => <td key={'table-totals-'+account.id}>{parseCurrency(tableObj.totals[account.id])}</td>)\n                            }\n                        </tr>\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Breakdown;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { parseISO, compareAsc } from 'date-fns';\n\nimport { today, getAllDates, getPeriodOfTransaction, filterDeleted, parseCurrency, formatDate } from '../functions';\n\nimport Container from '../components/Container';\nimport Grid from '../components/Grid';\nimport LabelledInput from '../components/LabelledInput';\nimport Table from '../components/Table';\n\nconst FundList = () => {\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const startDate = useSelector(state => state.general.startDate);\n    const payPeriodType = useSelector(state => state.general.payPeriodType);\n\n    const firstFund = funds.length > 0 ? funds[0].id : 0;\n    const [fund, setFund] = useState(firstFund);\n\n    const [fromDate, setFromDate] = useState(startDate);\n    const [toDate, setToDate] = useState(today());\n    \n    if (funds.length === 0) return <div>Please add a fund to use this feature.</div>;\n    \n    //get an array of dates that apply to this period\n    let dates = getAllDates(startDate, payPeriodType);\n    let firstPeriod = getPeriodOfTransaction(dates, fromDate);\n    let index = dates.indexOf(firstPeriod);\n    if (index > 0) dates = dates.slice(index);\n\n    //setup the table object ready for data\n    let total = 0;\n\n    //filter transactions and add to total\n    let filteredTransactions = transactions.filter(tr => {\n        if (tr.type !== \"spend\") return false;\n        if (compareAsc(parseISO(tr.date), parseISO(fromDate)) === -1) return false; //if before fromDate, ignore\n        if (compareAsc(parseISO(tr.date), parseISO(toDate)) === 1) return false; //if after toDate, ignore\n        if (tr.fund === undefined || tr.fund !== fund) return false; //if not selected category\n        total += tr.amount;\n        return true;\n    });\n\n    //sort to display oldest first\n    filteredTransactions.sort((a,b) => compareAsc(parseISO(a.date), parseISO(b.date)));\n\n    const onChangeFund = (e) => {\n        setFund(Number(e.target.value));\n    }\n\n    const onChangeFrom = (e) => {\n        setFromDate(e.target.value);\n    }\n\n    const onChangeTo = (e) => {\n        setToDate(e.target.value);\n    }\n\n    return (\n        <div>\n            <Container>\n                <h4>Fund Breakdown</h4>\n                <LabelledInput label=\"Category\" type=\"dropdown\" value={fund} options={funds.map(obj => ({value: obj.id, display: obj.name}))} onChange={onChangeFund}/>\n                <Grid width=\"600px\">\n                    <LabelledInput label=\"From\" type=\"date\" value={fromDate} onChange={onChangeFrom} min={startDate} max={toDate}/>\n                    <LabelledInput label=\"To\" type=\"date\" value={toDate} onChange={onChangeTo} min={fromDate}/>\n                </Grid>\n                { filteredTransactions.length > 0 ? <Table>\n                    <thead>\n                        <tr>\n                            <td>Date</td>\n                            <td>Description</td>\n                            <td>Cost</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredTransactions.map(obj => {\n                                return <tr key={'fund-transaction-'+obj.id}>\n                                    <td>{formatDate(obj.date)}</td>\n                                    <td>{obj.description}</td>\n                                    <td>{parseCurrency(obj.amount)}</td>\n                                </tr>\n                            })\n                        }\n                        <tr>\n                            <th colSpan='2' style={{textAlign: 'right'}}>Total</th>\n                            <td>{parseCurrency(total)}</td>\n                        </tr>\n                    </tbody>\n                </Table> : <p>No transactions to display.</p> }\n            </Container>\n        </div>\n    );\n}\n\nexport default FundList;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { parseISO, compareAsc } from 'date-fns';\n\nimport { today, filterDeleted, parseCurrency, parseTransaction } from '../functions';\n\nimport Container from '../components/Container';\nimport Grid from '../components/Grid';\nimport LabelledInput from '../components/LabelledInput';\nimport Table from '../components/Table';\n\nconst Spendings = () => {\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const startDate = useSelector(state => state.general.startDate);\n\n    const [fromDate, setFromDate] = useState(startDate);\n    const [toDate, setToDate] = useState(today());\n    \n    if (accounts.length === 0) return <div>Please add an account to use this feature.</div>;\n    if (transactions.length === 0) return <div>There are no transactions to display.</div>;\n\n    //Setup table object\n    const tableObj = {totals: {}};\n    const accountTotals = {};\n\n    const setupTableObj = (obj) => {\n        if (obj.type === 'income') return;\n        let itemObj = {};\n        accounts.forEach(account => itemObj[account.name] = 0);\n        tableObj[obj.name] = itemObj;\n        tableObj.totals[obj.name] = 0;\n    };\n\n    categories.forEach(setupTableObj);\n    funds.forEach(setupTableObj);\n    accounts.forEach(account => accountTotals[account.name] = 0);\n    \n    //add transaction data to table object\n    transactions.forEach(tr => {\n        if (tr.type !== 'spend') return;\n        if (compareAsc(parseISO(tr.date), parseISO(fromDate)) === -1) return; //if before fromDate, ignore\n        if (compareAsc(parseISO(tr.date), parseISO(toDate)) === 1) return; //if after toDate, ignore\n\n        let category = categories.find(obj => obj.id === tr.category);\n        if (category !== undefined && category.type === 'income') return; //ignore income categories\n\n        let parsed = parseTransaction(tr);\n        let key = parsed.category !== undefined ? parsed.category : parsed.fund;\n\n        tableObj[key][parsed.account] += parsed.amount;\n        tableObj.totals[key] += parsed.amount;\n        accountTotals[parsed.account] += parsed.amount;\n    });\n\n    let totalAmount = Object.values(tableObj.totals).reduce((a,c) => a+c, 0);\n\n    const onChangeFrom = (e) => {\n        setFromDate(e.target.value);\n    }\n\n    const onChangeTo = (e) => {\n        setToDate(e.target.value);\n    }\n\n    const getTableRow = (key) => {\n        let obj = tableObj[key];\n        if (tableObj.totals[key] === 0) return null;\n\n        return <tr key={'row-'+key}>\n            <td>{key}</td>\n            <td>{parseCurrency(tableObj.totals[key])}</td>\n            {\n                accounts.map(account => <td key={`data-${key}-${account.name}`}>{parseCurrency(obj[account.name])}</td>)\n            }\n        </tr>;\n    }\n\n    return (\n        <div>\n            <Container>\n                <h4>Spendings</h4>\n                <Grid width=\"600px\">\n                    <LabelledInput label=\"From\" type=\"date\" value={fromDate} onChange={onChangeFrom} min={startDate} max={toDate}/>\n                    <LabelledInput label=\"To\" type=\"date\" value={toDate} onChange={onChangeTo} min={fromDate}/>\n                </Grid>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td></td>\n                            <td>Total</td>\n                            { accounts.map(obj => <td key={'account-'+obj.id}>{obj.name}</td>) }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            categories.map(obj => {\n                                if (obj.type === 'income') return null;\n                                return getTableRow(obj.name);\n                            })\n                        }\n                        {\n                            funds.map(obj => {\n                                return getTableRow(obj.name);\n                            })\n                        }\n                        <tr>\n                            <th>Totals</th>\n                            <td>{parseCurrency(totalAmount)}</td>\n                            {\n                                accounts.map(obj => <td key={'totals-'+obj.name}>{parseCurrency(accountTotals[obj.name])}</td>)\n                            }\n                        </tr>\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Spendings;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { parseISO, differenceInMonths } from 'date-fns';\n\nimport { getAccountSummary, parseCurrency } from '../functions';\n\nimport Container from '../components/Container';\nimport LabelledInput from '../components/LabelledInput';\nimport Table from '../components/Table';\n\nconst SavingsGoal = () => {\n    const dispatch = useDispatch();\n    const targetDate = useSelector(state => state.general.savingsGoalDate);\n    const target = useSelector(state => state.general.savingsGoalTarget);\n    const transactions = useSelector(state => state.transactions);\n    const accounts = useSelector(state => state.accounts);\n    const categories = useSelector(state => state.categories);\n\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n    const totalMoney = accountSummary.reduce((a,c) => a+c.total, 0);\n    const amountToSave = target - totalMoney;\n    const monthsToTarget = differenceInMonths(parseISO(targetDate), new Date());\n    const monthlySavings = amountToSave / monthsToTarget;\n\n    const setTargetDate = (e) => dispatch({type: 'SET_SAVINGS_GOAL_DATE', payload: e.target.value});\n    const setTarget = (e) => dispatch({type: 'SET_SAVINGS_GOAL_TARGET', payload: e.target.value});\n\n    return (\n        <div>\n            <Container>\n                <h4>Savings Goal</h4>\n                <LabelledInput label=\"Target Date\" type=\"date\" value={targetDate} onChange={setTargetDate}/>\n                <LabelledInput label=\"Target\" type=\"number\" value={target} onChange={setTarget}/>\n                <br/>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>Total Money</td>\n                            <td>Months to Target</td>\n                            <td>Amount to Save</td>\n                            <td>Monthly</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{parseCurrency(totalMoney)}</td>\n                            <td>{monthsToTarget}</td>\n                            <td>{parseCurrency(amountToSave > 0 ? amountToSave : 0)}</td>\n                            <td>{parseCurrency(monthlySavings > 0 ? monthlySavings : 0)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default SavingsGoal;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getAccountSummary, parseCurrency } from '../functions';\n\nimport Container from '../components/Container';\nimport LabelledInput from '../components/LabelledInput';\nimport Table from '../components/Table';\n\nconst VisaTool = () => {\n    const dispatch = useDispatch();\n    const salary = useSelector(state => state.general.salary);\n    const setSalary = (e) => dispatch({type: 'SET_SALARY', payload: e.target.value});\n\n    const transactions = useSelector(state => state.transactions);\n    const accounts = useSelector(state => state.accounts);\n    const categories = useSelector(state => state.categories);\n\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n    const totalMoney = accountSummary.reduce((a,c) => a+c.total, 0);\n    const baseSalary = 18600;\n    const savingsMinimum = 16000;\n    let savingsNeeded = ((baseSalary - salary) * 2.5) + savingsMinimum;\n    if (salary >= baseSalary) savingsNeeded = 0;\n    let moneyRequired = savingsNeeded - totalMoney;\n\n    return (\n        <div>\n            <Container>\n                <h4>UK Visa Requirements</h4>\n                <p>This tool calculates how much cash savings you need to meet the UK visa requirements, taking into account your current salary. If your salary is above £18,600, then no savings are required.</p>\n                <LabelledInput label=\"Salary\" type=\"number\" value={salary} onChange={setSalary}/>\n                <Table>\n                    <thead>\n                        <tr>\n                            <td>Savings Required</td>\n                            <td>Total Money</td>\n                            <td>{moneyRequired > 0 ? 'Still Needed' : 'Spare Money'}</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{parseCurrency(savingsNeeded)}</td>\n                            <td>{parseCurrency(totalMoney)}</td>\n                            <td>{parseCurrency(moneyRequired >= 0 ? moneyRequired : -moneyRequired)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default VisaTool;","import React, { useState } from 'react';\n\nimport Container from '../components/Container';\nimport Button from '../components/Button';\n\nimport InterestCalc from './InterestCalc';\nimport Breakdown from './Breakdown';\nimport FundList from './FundList';\nimport Spendings from './Spendings';\nimport SavingGoal from './SavingGoal';\nimport VisaTool from './VisaTool';\n\nconst Tools = () => {\n    const [subPage, setSubPage] = useState('Breakdown');\n\n    const onClickSubMenu = (page) => () => {\n        setSubPage(page);\n    }\n\n    return (\n        <div>\n            <Container>\n                <h4>Tools</h4>\n                <Button value='Category Breakdown' width='180px' inline={true} onClick={onClickSubMenu('Breakdown')} selected={subPage === 'Breakdown' ? true : false}/>\n                <Button value='Fund List' width='100px' inline={true} onClick={onClickSubMenu('FundList')} selected={subPage === 'FundList' ? true : false}/>\n                <Button value='Spendings' width='120px' inline={true} onClick={onClickSubMenu('Spendings')} selected={subPage === 'Spendings' ? true : false}/>\n                <Button value='Interest' width='100px' inline={true} onClick={onClickSubMenu('Interest')} selected={subPage === 'Interest' ? true : false}/>\n                <Button value='Savings Goal' width='120px' inline={true} onClick={onClickSubMenu('SavingsGoal')} selected={subPage === 'SavingsGoal' ? true : false}/>\n                <Button value='Visa Tool' width='120px' inline={true} onClick={onClickSubMenu('VisaTool')} selected={subPage === 'VisaTool' ? true : false}/>\n            </Container>\n            { subPage === 'Interest' ? <InterestCalc/> : null }\n            { subPage === 'Breakdown' ? <Breakdown/> : null }\n            { subPage === 'FundList' ? <FundList/> : null }\n            { subPage === 'SavingsGoal' ? <SavingGoal/> : null }\n            { subPage === 'VisaTool' ? <VisaTool/> : null }\n            { subPage === 'Spendings' ? <Spendings/> : null }\n        </div> \n    );\n}\n\nexport default Tools;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { IoIosAdd, IoIosRemove } from 'react-icons/io';\n\nimport AddTransaction from './AddTransaction';\n\nconst BottomArea = styled.div`\n    position: fixed;\n    bottom: -275px;\n    transition: 0.3s;\n    width: 100%;\n    height: 308px;\n    background-color: var(--footer-bg);\n    padding: 10px;\n    padding-top: 30px;\n    border: 2px solid var(--footer-bg);\n    z-index: 3;\n    ${props => props.open ? 'transform: translateY(-275px);' : ''};\n    ${props => props.open ? 'padding-top: 10px' : ''};\n\n    & > div {\n        margin: auto;\n    }\n`;\n\nconst MobileAddButton = styled.div`\n    & > * {\n        transition: 0.3s;\n    }\n\n    & > svg {\n        background-color: var(--footer-bg);\n        border: 3px solid var(--footer-border);\n        border-radius: 100%;\n        font-size: 51px;\n        position: fixed;\n        bottom: 5px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-295px' : '-20px'});\n        z-index: 4;\n        fill: var(--footer-border);\n    }\n\n    & > div.left, & > div.right {\n        border-bottom: 3px solid var(--footer-border);\n        position: fixed;\n        bottom: 31px;\n        width: calc(50% - 22.5px);\n        height: 20px;\n        z-index: 4;\n        ${props => props.open ? 'transform: translateY(-275px);' : ''};\n    }\n\n    & > div.right {\n        border-left: 3px solid var(--footer-border);\n        right: 0px;\n        border-radius: 0px 0px 0px 20px;\n    }\n\n    & > div.left {\n        border-right: 3px solid var(--footer-border);\n        left: 0px;\n        border-radius: 0px 0px 20px 0px;\n    }\n\n    & > div.middle {\n        background-color: var(--footer-bg);\n        position: fixed;\n        z-index: 1;\n        width: 55px;\n        height: 55px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-295px' : '-20px'}) rotate(-45deg);\n        bottom: -16px;\n        border-radius: 0px 51px 0px 100%;\n    }\n`;\n\nconst Footer = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n    const [isOpen, setOpen] = useState(false);\n    const [isFullyOpen, setFullyOpen] = useState(false);\n\n    if (!isMobile) return null;\n\n    const toggle = () => {\n        setOpen(!isOpen);\n\n        setTimeout(() => {\n            setFullyOpen(!isFullyOpen);\n        }, 300);\n    }\n\n    const onAddTransaction = () => {\n        setOpen(false);\n        setTimeout(() => {\n            setFullyOpen(false);\n        }, 300);\n    }\n\n    return (\n        <div>\n            <MobileAddButton open={isOpen}>\n                { isFullyOpen ? <IoIosRemove onClick={toggle}/> : <IoIosAdd onClick={toggle}/> }\n                <div className=\"right\"></div>\n                <div className=\"left\"></div>\n                <div className=\"middle\"></div>\n            </MobileAddButton>\n            <BottomArea open={isOpen}>\n                <AddTransaction onAdd={onAddTransaction}/> \n                {/* { isOpen ? <AddTransaction onAdd={onAddTransaction}/> : isFullyOpen ? <AddTransaction onAdd={onAddTransaction}/> : null } */}\n            </BottomArea>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { sync } from './redux/store';\n\nimport Header from './components/Header';\nimport TopPopup from './components/TopPopup';\nimport MessagePopup from './components/MessagePopup';\n\nimport SummaryTables from './containers/SummaryTables';\nimport AddTransaction from './containers/AddTransaction';\nimport Categories from './containers/Categories';\nimport Funds from './containers/Funds';\nimport Accounts from './containers/Accounts';\nimport Settings from './containers/Settings';\nimport Tools from './containers/Tools';\nimport Footer from './containers/Footer';\n\nfunction App() {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.currentPage);\n    let addTransaction = useSelector(state => state.addTransaction);\n    const user = useSelector(state => state.user);\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions\n        };\n    });\n\n    //sync with server when starting app\n    useEffect(() => {\n        if (user !== null) sync(backupData, dispatch);\n    }, []);\n\n    const onClosePopup = () => {\n        dispatch({type: 'SET_ADD_TRANSACTION', payload: false});\n    }\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div style={{height: '40px'}}></div>\n            <MessagePopup/>\n            { page === 'Home' ? <SummaryTables/> : null }\n            { page === 'Categories' ? <Categories/> : null }\n            { page === 'Funds' ? <Funds/> : null }\n            { page === 'Accounts' ? <Accounts/> : null }\n            { page === 'Settings' ? <Settings/> : null }\n            { page === 'Tools' ? <Tools/> : null }\n            { addTransaction ? <TopPopup onClose={onClosePopup}><AddTransaction/></TopPopup> : null }\n            <Footer/>\n        </div>\n    );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n      <Provider store={store}>\n          <App />\n      </Provider>\n        , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}