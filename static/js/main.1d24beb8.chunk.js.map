{"version":3,"sources":["redux/reducer.js","functions.js","redux/store.js","components/Header.js","components/TopPopup.js","components/MessagePopup.js","components/Table.js","components/Grid.js","components/BudgetInput.js","components/AmountGroup.js","components/IconButton.js","containers/SummaryTables.js","components/Input.js","components/LabelledInput.js","components/Button.js","containers/AddTransaction.js","components/ListContainer.js","components/List.js","components/Transaction.js","components/HeaderDropdown.js","components/TotalsDisplay.js","components/Modal.js","components/TransactionDetails.js","components/Transactions.js","components/Container.js","components/EditInput.js","components/MobileEditGroup.js","modals.js","containers/EditList.js","containers/Categories.js","containers/Funds.js","containers/Accounts.js","containers/Settings.js","containers/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","currentPage","addTransaction","editMode","lastSync","user","fetching","message","text","type","general","payPeriodType","currencySymbol","colourScheme","showDecimals","startDate","updated","accounts","categories","id","name","description","hidden","dateCreated","budgets","funds","targetAmount","complete","fundAdditions","transactions","updateBudget","newBudget","Number","format","Date","previousBudget","getPreviousBudget","category","budget","find","obj","undefined","amount","removeObject","replaceObject","newBudgets","sort","a","b","compareAsc","parseISO","date","i","length","compareDesc","arr","map","deleted","object","copy","index","findIndex","splice","replaceAccount","defaultAccount","forEach","getNewArray","createNameObjects","categoryNames","fundNames","fund","getFundTarget","tr","getTransactionHeading","getPeriodOfTransaction","dates","trDate","periodDate","parseCurrency","value","store","getState","isNaN","string","toFixed","negative","includes","replace","split","fromRight","unshift","join","checkBudget","categoryId","number","getLatestBudget","checkFundTarget","target","capitalize","slice","toUpperCase","fromCamelCase","replaceCapitals","getAmount","transaction","accountId","asCurrency","from","to","checkIfCanDelete","allObjs","account","filterDeleted","filter","changeColourScheme","scheme","root","document","documentElement","style","setProperty","url","sync","state","dispatch","manual","setUser","payload","setMessage","setFetching","backupData","fetch","method","headers","credentials","body","JSON","stringify","then","res","json","data","status","console","log","catch","err","createStore","action","dateValue","newAccounts","newCategories","newFunds","newFundAdditions","newTransactions","updatedAccounts","updatedCategories","updatedBudgets","updatedFunds","updatedFundAdditions","removedAccounts","removedCategories","removedBudgets","removedFunds","removedFundAdditions","removedTransactions","localStorage","getItem","parse","getFromLocalStorage","applyMiddleware","next","result","setItem","StyledComp","styled","div","props","isMobile","Header","useMediaQuery","maxWidth","useDispatch","useSelector","onClick","className","TopPopup","children","MessagePopup","Table","table","padding","Grid","template","start","end","input","BudgetInput","useState","oldValue","setOldValue","currentValue","setCurrentValue","onChange","e","parseFloat","onBlur","carryOver","AmountGroup","title","editBudget","setEditMode","color","size","bordered","width","topAdjust","IconButton","Icon","SummaryTables","filteredFunds","periodLength","daysInPeriod","currentDate","today","add","months","days","latestDate","latestDates","numberOfPeriods","push","reverse","getLatestDates","setLatestDate","editCategory","setEditCategory","rows","filteredTransactions","filteredFundAdditions","addFunc","heading","Object","values","row","incomeCategories","expenseCategories","remaining","getSummaryRows","summaryTotals","saved","startingBalance","spent","addToTotals","totalRemaining","getSummaryTotals","accountSummary","objs","closed","total","reduce","t","c","getAccountSummary","setPreviousDate","newIndex","indexOf","newDate","setNextDate","displayDate","getHeading","fontSize","fontWeight","margin","FiArrowLeft","FiArrowRight","key","noBorder","Input","placeholder","options","groups","as","option","display","group","label","disabled","labelWidth","LabelledInput","inputValue","inline","Loader","Button","loading","AddTransaction","onAdd","defaultAccountObj","setType","setAmount","setDescription","setDate","setAccount","setFund","setCategory","setFrom","setTo","reset","types","ListContainer","List","array","onClickObj","selected","getType","page","Transaction","showDelete","FaTrashAlt","open","maxHeight","HeaderDropdown","setOpen","itemValue","TotalsDisplay","fundObj","Fragment","Modal","visible","getTableRow","TransactionDetails","onClose","onDelete","parsedObj","copyTr","parseTransaction","textAlign","formatMethod","formatDate","StyledGroup","qty","Transactions","onClickDropdown","objArray","setClosed","details","setDetails","showDetails","setShowDetails","currentObj","organisedObj","formatted","organisedArr","keys","month","first","second","onToggleDetails","categoryType","fundInfo","closedObj","dateOpened","Container","EditInput","defaultValue","itemWidth","MobileEditGroup","modal","editing","setEditing","marginBottom","borderTop","backgroundColor","marginRight","modals","editString","note","interestRate","extraCharges","currency","endDate","EditList","vertical","modalKey","toLowerCase","modalObj","update","remove","newObj","colSpan","height","alignItems","justifyContent","Categories","allCategories","cat","firstCategory","firstCategoryId","firstCategoryName","categoryName","setCategoryName","React","useEffect","Funds","allFunds","firstFund","firstFundId","firstFundName","fundName","setFundName","combined","Accounts","allAccounts","firstAccount","firstAccountId","firstAccountName","accountName","setAccountName","Settings","username","setUsername","password","setPassword","lastSyncDate","lastSyncDisplay","setColourScheme","BottomArea","MobileAddButton","Footer","isOpen","isFullyOpen","setFullyOpen","toggle","setTimeout","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.1d24beb8.chunk.js","sourcesContent":["import { format, compareAsc, compareDesc, parseISO } from 'date-fns';\n\nconst initialState = {\n    currentPage: 'Home',\n    addTransaction: false,\n    editMode: false,\n    lastSync: 0,\n    user: null,\n    fetching: false,\n    message: {\n        text: '', \n        type: ''\n    },\n    general: {\n        payPeriodType: 'fourWeekly',\n        currencySymbol: '£',\n        colourScheme: 'dark',\n        showDecimals: true,\n        startDate: '2019-11-08',\n        updated: 20200220153001,\n    },\n    accounts: [],\n    categories: [\n        {\n            id: 20200723153000,\n            name: 'Earnings',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153001,\n            name: 'Interest',\n            description: '',\n            type: 'income',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n        {\n            id: 20200723153102,\n            name: 'Food',\n            description: '',\n            type: 'expense',\n            hidden: false,\n            dateCreated: '2020-06-03'\n        },\n    ],\n    budgets: [],\n    funds: [\n        {\n            id: 20200723153130,\n            name: 'Savings',\n            description: 'General Savings',\n            targetAmount: 0,\n            complete: false,\n            dateCreated: '2020-01-03'\n        }\n    ],\n    fundAdditions: [],\n    transactions: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n    let value = action.payload;\n    let dateValue = Number(format(new Date(),'yyyyMMddHHmmss'));\n    switch(action.type) {\n        case 'SET_CURRENT_PAGE': return {...state, currentPage: value, editMode: false, addTransaction: false, message: {text: '', type: ''}};\n        case 'SET_ADD_TRANSACTION': return {...state, addTransaction: value};\n        case 'SET_EDIT_MODE': return {...state, editMode: value};\n        case 'SET_USER': return {...state, user: value};\n        case 'SET_FETCHING': return {...state, fetching: value};\n        case 'SET_MESSAGE': return {...state, message: value};\n\n        case 'SET_PAY_PERIOD_TYPE': return {...state, general: {...state.general, payPeriodType: value, updated: dateValue}};\n        case 'SET_COLOUR_SCHEME': return {...state, general: {...state.general, colourScheme: value, updated: dateValue}};\n        case 'SET_CURRENCY_SYMBOL': return {...state, general: {...state.general, currencySymbol: value, updated: dateValue}};\n        case 'SET_SHOW_DECIMALS': return {...state, general: {...state.general, showDecimals: value, updated: dateValue}};\n        case 'SET_START_DATE': return {...state, general: {...state.general, startDate: value, updated: dateValue}};\n\n        case 'ADD_ACCOUNT': let newAccounts = getNewArray(state.accounts, value); return {...state, accounts: newAccounts};\n        case 'ADD_CATEGORY': let newCategories = getNewArray(state.categories, value); return {...state, categories: newCategories};\n        case 'ADD_BUDGET': let newBudgets = getNewArray(state.budgets, value); return {...state, budgets: newBudgets};\n        case 'ADD_FUND': let newFunds = getNewArray(state.funds, value); return {...state, funds: newFunds};\n        case 'ADD_FUND_ADDITION': let newFundAdditions = getNewArray(state.fundAdditions, value); return {...state, fundAdditions: newFundAdditions, addTransaction: false};\n        case 'ADD_TRANSACTION': let newTransactions = getNewArray(state.transactions, value); return {...state, transactions: newTransactions, addTransaction: false};\n\n        case 'UPDATE_ACCOUNT': let updatedAccounts = replaceAccount(state.accounts, value); return {...state, accounts: updatedAccounts};\n        case 'UPDATE_CATEGORY': let updatedCategories = replaceObject(state.categories, value); return {...state, categories: updatedCategories};\n        case 'UPDATE_BUDGET': let updatedBudgets = updateBudget(state.budgets, value); return {...state, budgets: updatedBudgets};\n        case 'UPDATE_FUND': let updatedFunds = replaceObject(state.funds, value); return {...state, funds: updatedFunds};\n        case 'UPDATE_FUND_ADDITION': let updatedFundAdditions = replaceObject(state.fundAdditions, value); return {...state, fundAdditions: updatedFundAdditions};\n\n        case 'REMOVE_ACCOUNT': let removedAccounts = removeObject(state.accounts, value); return {...state, accounts: removedAccounts};\n        case 'REMOVE_CATEGORY': let removedCategories = removeObject(state.categories, value); return {...state, categories: removedCategories};\n        case 'REMOVE_BUDGET': let removedBudgets = removeObject(state.budgets, value); return {...state, budgets: removedBudgets};\n        case 'REMOVE_FUND': let removedFunds = removeObject(state.funds, value); return {...state, funds: removedFunds};\n        case 'REMOVE_FUND_ADDITION': let removedFundAdditions = removeObject(state.fundAdditions, value); return {...state, fundAdditions: removedFundAdditions};\n        case 'REMOVE_TRANSACTION': let removedTransactions = removeObject(state.transactions, value); return {...state, transactions: removedTransactions};\n\n        case 'SYNC': return {...state, ...value, lastSync: dateValue};\n        default: return state;\n    }\n}\n\nconst updateBudget = (budgets, newBudget) => {\n    newBudget.id = Number(format(new Date(),'yyyyMMddHHmmss')); \n    //get previous budget\n    let previousBudget = getPreviousBudget(budgets, newBudget.startDate, newBudget.category);\n\n    //check if there's already a budget with this start date\n    let budget = budgets.find(obj => obj.startDate === newBudget.startDate && obj.category === newBudget.category);\n    if (budget !== undefined) {\n        //check if this budget is same as previous - then delete\n        if (previousBudget !== undefined && previousBudget.amount === newBudget.amount) {\n            return removeObject(budgets, budget.id);\n        }\n\n        budget.amount = newBudget.amount;\n        return replaceObject(budgets, budget);\n    }\n\n    //if there's no budget already, but new budget is same as previous budget, don't do anything\n    if (previousBudget !== undefined && newBudget.amount === previousBudget.amount) return budgets;\n\n    //if no budget already, and new budget is different, then add new\n    let newBudgets = [...budgets, newBudget];\n    newBudgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    return newBudgets;\n}\n\nconst getPreviousBudget = (budgets, date, category) => {\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) === 1) return budget;\n    }\n    return undefined;\n}\n\nconst removeObject = (arr, id) => {\n    return arr.map(obj => {\n        if (obj.id === id) {\n            let date = Number(format(new Date(),'yyyyMMddHHmmss'));\n            return {id: obj.id, deleted: date};\n        } else return obj;\n    });\n}\n\nconst replaceObject = (arr, object) => {\n    let copy = [...arr];\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst replaceAccount = (arr, object) => {\n    let copy = [...arr];\n\n    //there can only be one default account\n    if (object.defaultAccount === true) {\n        copy.forEach(obj => obj.id !== object.id ? obj.defaultAccount = false : null);\n    }\n\n    let index = copy.findIndex(obj => obj.id === object.id);\n    if (index === -1) return arr;\n    object.updated = Number(format(new Date(),'yyyyMMddHHmmss'));\n    copy.splice(index,1,object);\n    return copy;\n}\n\nconst getNewArray = (arr, object) => {\n    object.id = Number(format(new Date(),'yyyyMMddHHmmss'));    \n    return [...arr, object];\n}","import { add, compareAsc, compareDesc, parseISO, format } from 'date-fns';\nimport store from './redux/store';\n\nexport const getLatestDates = (startDate, periodLength) => {\n    let daysInPeriod = 0;\n    switch (periodLength) {\n        case 'monthly': daysInPeriod = 30; break;\n        case 'weekly': daysInPeriod = 7; break;\n        case 'twoWeekly': daysInPeriod = 14; break;\n        case 'fourWeekly': daysInPeriod = 28; break;\n        default: daysInPeriod = 30; break;\n    }\n\n    //go forwards from starting date to todays date\n    let currentDate = parseISO(startDate);\n    let today = new Date();\n\n    while (compareAsc(today, currentDate) === 1) {\n        if (periodLength === 'monthly') currentDate = add(currentDate, {months: 1});\n        else currentDate = add(currentDate, {days: daysInPeriod});\n    }\n\n    //go back 1 pay period to get last pay date\n    let latestDate = periodLength === 'monthly' ? add(currentDate, {months: -1}) : add(currentDate, {days: -daysInPeriod});\n\n    //go back and add to array previous pay periods (up to 12/13);\n    let latestDates = [];\n    let numberOfPeriods = periodLength === 'fourWeekly' ? 13 : 12;\n    for (let i = 0; i < numberOfPeriods; i++) {\n        latestDates.push(format(latestDate, 'yyyy-MM-dd'));\n        latestDate = periodLength === 'monthly' ? add(latestDate, {months: -1}) : add(latestDate, {days: -daysInPeriod});\n        if (compareAsc(parseISO(startDate), latestDate) >= 1) break;\n    }\n\n    latestDates.reverse();\n\n    return latestDates;\n};\n\nexport const getSummaryTotals = (transactions, funds, categories, fundAdditions) => {\n    let obj = {};\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //make sure every key has a value even if no transactions for it\n    funds.forEach(fund => {\n        let saved = fund.startingBalance > 0 ? fund.startingBalance : 0;\n        obj[fund.name] = {saved: saved, target: fund.targetAmount, spent: 0, remaining: saved};\n    });\n    categories.forEach(category => obj[category.name] = category.startingBalance > 0 ? category.startingBalance : 0);\n\n    const addToTotals = tr => {\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n\n        if (tr.fund !== undefined) {\n            let target = getFundTarget(funds, tr);            \n            if (obj[heading] === undefined) obj[heading] = {saved: 0, target: target, spent: 0, remaining: 0};            \n            \n            if (tr.account > 0) obj[heading].spent += tr.amount;\n            else obj[heading].saved += tr.amount;\n\n            obj[heading].remaining = obj[heading].saved - obj[heading].spent;\n\n            return;\n        }\n\n        if (obj[heading] === undefined) obj[heading] = 0;\n        obj[heading] += tr.amount;\n    }\n\n    transactions.forEach(addToTotals);\n    fundAdditions.forEach(addToTotals);\n\n    //work out total remaining\n    const incomeCategories = categories.filter(obj => obj.type === 'income');\n    const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n    let totalRemaining = 0;\n    incomeCategories.forEach(category => totalRemaining += obj[category.name]);\n    expenseCategories.forEach(category => totalRemaining -= obj[category.name]);\n    funds.forEach(fund => totalRemaining -= obj[fund.name].saved);\n    obj.remaining = totalRemaining;\n\n    return obj;\n}\n\nexport const getSummaryRows = (dates, transactions, funds, categories, fundAdditions) => {\n    if (dates.length === 0) return [];    \n\n    //create object to store final values\n    let obj = {};\n    dates.forEach(date => obj[date] = {});\n\n    //store names in object for quick lookup\n    let {categoryNames, fundNames} = createNameObjects(categories, funds);\n\n    //filter out transactions that happened before first date and those which are for funds\n    let filteredTransactions = transactions.filter(tr => {\n        if (tr.fund !== undefined) return false;\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    });\n\n    //filter out fund additions that happened before first date\n    let filteredFundAdditions = fundAdditions.filter(tr => {\n        if (compareAsc(parseISO(tr.date), parseISO(dates[0])) >= 0) return true;\n        return false;\n    })\n    \n\n    //add transaction amounts to correct heading in object\n    const addFunc = (tr) => {\n        let periodDate = getPeriodOfTransaction(dates, tr.date);\n        let heading = getTransactionHeading(fundNames, categoryNames, tr);\n        if (obj[periodDate][heading] === undefined) obj[periodDate][heading] = 0;\n        obj[periodDate][heading] += tr.amount;\n    }\n    filteredTransactions.forEach(addFunc);\n    filteredFundAdditions.forEach(addFunc);\n\n    //calculate remaining amount in each period\n    Object.values(obj).forEach(row => {        \n        const incomeCategories = categories.filter(obj => obj.type === 'income');\n        const expenseCategories = categories.filter(obj => obj.type === 'expense');\n\n        let remaining = 0;\n        incomeCategories.forEach(obj => remaining += row[obj.name] !== undefined ? row[obj.name] : 0);\n        expenseCategories.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name] : 0);\n        funds.forEach(obj => remaining -= row[obj.name] !== undefined ? row[obj.name] : 0);\n        \n        row.remaining = remaining;\n    });\n    \n    return obj;\n};\n\nexport const getAccountSummary = (transactions, accounts, categories) => {\n    let objs = [];\n\n    accounts.forEach(account => {\n        if (account.closed) return;\n\n        const filteredTransactions = transactions.filter(obj => {\n            if (obj.from !== undefined && obj.to !== undefined && (obj.from === account.id || obj.to === account.id)) return true; \n            return obj.account !== undefined && obj.account === account.id ? true : false;\n        });   \n\n        let total = filteredTransactions.reduce((t,c) => {\n            t += getAmount(c, categories, account.id, false);\n            return t;\n        }, 0);        \n\n        if (account.startingBalance !== undefined) {\n            total += parseFloat(account.startingBalance);\n        }\n\n        objs.push({name: account.name, total: total, id: account.id});\n    });\n\n    return objs;\n}\n\nconst createNameObjects = (categories, funds) => {\n    let categoryNames = {};\n    let fundNames = {};\n\n    categories.forEach(category => categoryNames[category.id] = category.name);\n    funds.forEach(fund => fundNames[fund.id] = fund.name);\n\n    return {categoryNames, fundNames};\n}\n\nconst getFundTarget = (funds, tr) => {\n    let fund = funds.find(obj => obj.id === tr.fund);\n    if (fund !== undefined) return fund.targetAmount;\n    return 0;\n}\n\nconst getTransactionHeading = (fundNames, categoryNames, tr) => {\n    if (tr.category !== undefined) {\n        let name = categoryNames[tr.category];\n        if (name !== undefined) return name;\n    } else if (tr.fund !== undefined) {\n        let name = fundNames[tr.fund];\n        if (name !== undefined) return name;\n    }\n    return 'Un-Categorised';\n}\n\nconst getPeriodOfTransaction = (dates, trDate) => {\n    let periodDate = dates[0];\n\n    for (let date of dates) {\n        if (compareAsc(parseISO(trDate), parseISO(date)) >= 0) periodDate = date;\n        else break;\n    }\n    \n    return periodDate;\n};\n\nexport const parseCurrency = (value) => {\n    let { general } = store.getState();    \n    let { currencySymbol, showDecimals } = general;    \n\n    //make sure it doens't return -£0.00\n    if (value > -0.009 && value < 0.009) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    if (value === null || value === undefined || value === 0 || isNaN(value)) return `${currencySymbol}0${showDecimals ? '.00' : ''}`;\n    let string = Number(value).toFixed(showDecimals ? 2 : 0);    \n\n    let negative = false;\n    if (string.includes('-')) {\n        string = string.replace('-','');\n        negative = true;\n    }\n    let arr = string.split('');\n\n    for (let i = arr.length-4; i >= 0; i--) {\n        let fromRight = arr.length - i - 4;\n        if (fromRight > 0 && fromRight%3 === 0) arr[i] += ',';\n    }\n\n    arr.unshift(currencySymbol);\n    if (negative) arr.unshift('-');\n    return arr.join('');    \n}\n\nexport const checkBudget = (budgets, date, categoryId, transactions, number=false) => {\n    let budget = getLatestBudget(budgets, date, categoryId);\n\n    if (budget !== undefined && budget.amount > 0) {\n        if (number) return budget.amount;\n        return ` / ${parseCurrency(budget.amount)}`;\n    } else {\n        if (number) return 0;\n        return '';\n    }    \n}\n\n\nconst getLatestBudget = (budgets, date, category) => {\n    budgets.sort((a,b) => {\n        return compareAsc(parseISO(a.startDate), parseISO(b.startDate));\n    });\n\n    for (let i = budgets.length-1; i >= 0; i--) {\n        let budget = budgets[i];\n        if (budget.category !== category) continue;\n        if (compareDesc(parseISO(budget.startDate), parseISO(date)) >= 0) return budget;\n    }\n    return undefined;\n}\n\nexport const checkFundTarget = (fund) => {\n    if (fund === undefined) return '';\n    if (fund.target !== 0) return ` / ${parseCurrency(fund.target)}`;\n    else return '';\n}\n\nexport const capitalize = (string) => {\n    return string.slice(0,1).toUpperCase() + string.slice(1);\n}\n\nexport const toCamelCase = (string) => {\n    let removeSpaces = string.replace(/ /g, '');\n    return removeSpaces.slice(0,1).toLowerCase() + removeSpaces.slice(1);\n}\n\nexport const fromCamelCase = (string) => {\n    let replaceCapitals = string.replace(/[A-Z]/g, ' $&');\n    return capitalize(replaceCapitals);\n}\n\n//determine whether amount should be positive or negative\nexport const getAmount = (transaction, categories, accountId, asCurrency=true) => {\n    //fund addition, so positive\n    if (transaction.type === undefined) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n\n    //transaction for a fund, so negative\n    if (transaction.fund !== undefined) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            //transaction for expense category, so negative\n            if (category.type === 'expense') return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n            //transaction for income category, so positive\n            if (category.type ===  'income') return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n        } else {\n            //has a category, but can't find it, so return 0\n            return asCurrency ? parseCurrency(0) : 0;\n        }\n    }    \n\n    if (transaction.from !== undefined && accountId !== undefined) {\n        //transfer from this account, so negative\n        if (transaction.from === accountId) return asCurrency ? parseCurrency(-transaction.amount) : -transaction.amount;\n\n        //transfer to this account, so positive\n        if (transaction.to === accountId) return asCurrency ? parseCurrency(transaction.amount) : transaction.amount;\n    }\n}\n\nexport const checkIfCanDelete = (obj) => {\n    let id = obj.id;\n\n    let { transactions, fundAdditions, budgets } = store.getState();\n\n    let allObjs = [...transactions, ...fundAdditions, ...budgets];\n\n    for (let obj of allObjs) {\n        if (obj.category === id) return false;\n        if (obj.fund === id) return false;\n        if (obj.account === id) return false;\n    }\n\n    return true;\n}\n\nexport const filterDeleted = (arr) => {\n    return arr.filter(obj => obj.deleted !== undefined ? false : true);\n}\n\nexport const formatDate = (date, formatMethod='MMM d, yyyy') => {\n    if (date === undefined) return '';\n    if (date.length === 0) return '';\n    return format(parseISO(date), formatMethod);\n} \n\nexport const parseTransaction = (tr) => {\n    let { categories, accounts, funds } = store.getState();\n    let copyTr = {...tr};\n\n    if (copyTr.category !== undefined) {\n        let category = categories.find((obj) => obj.id === copyTr.category);\n        if (category !== undefined) copyTr.category = category.name;\n    }\n\n    if (copyTr.account !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.account);\n        if (account !== undefined) copyTr.account = account.name;\n    }\n\n    if (copyTr.fund !== undefined) {\n        let fund = funds.find((obj) => obj.id === copyTr.fund);\n        if (fund !== undefined) copyTr.fund = fund.name;\n    }\n\n    if (copyTr.from !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.from);\n        if (account !== undefined) copyTr.from = account.name;\n    }\n\n    if (copyTr.to !== undefined) {\n        let account = accounts.find((obj) => obj.id === copyTr.to);\n        if (account !== undefined) copyTr.to = account.name;\n    }\n\n    return copyTr;\n}\n\nexport const changeColourScheme = (scheme) => {\n    let root = document.documentElement;\n\n    if (scheme === 'dark') {\n        root.style.setProperty('--bg-color', '#222');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', '#222');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#555');\n        root.style.setProperty('--table-heading-text-color', 'white');\n    }\n\n    if (scheme === 'black') {\n        root.style.setProperty('--bg-color', 'black');\n        root.style.setProperty('--text-color', 'white');\n        root.style.setProperty('--light-text-color', '#CCC');\n        root.style.setProperty('--icon-color', '#4dc6ff');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', '#BBB');\n        \n        root.style.setProperty('--footer-bg', 'black');\n        root.style.setProperty('--footer-border', '#009fe8');\n        \n        root.style.setProperty('--table-heading-bg-color', '#555');\n        root.style.setProperty('--table-heading-text-color', 'white');\n    }\n\n    if (scheme === 'light') {\n        root.style.setProperty('--bg-color', 'white');\n        root.style.setProperty('--text-color', 'black');\n        root.style.setProperty('--light-text-color', '#555');\n        root.style.setProperty('--icon-color', 'black');\n\n        root.style.setProperty('--menu-bg-color', '#009fe8');\n        root.style.setProperty('--menu-selected-bg-color', '#0076ad');\n        root.style.setProperty('--menu-text-color', 'white');\n        root.style.setProperty('--menu-selected-text-color', 'white');\n        root.style.setProperty('--menu-border-color', 'black');\n        \n        root.style.setProperty('--footer-bg', 'white');\n        root.style.setProperty('--footer-border', 'black');\n        \n        root.style.setProperty('--table-heading-bg-color', '#AAA');\n        root.style.setProperty('--table-heading-text-color', 'black');\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { reducer } from './reducer';\nimport { changeColourScheme } from '../functions';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst localStorageMiddleware = ({getState}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        \n        const ignore = ['SET_CURRENT_PAGE', 'SET_ADD_TRANSACTION', 'SET_EDIT_MODE', 'SET_FETCHING'];\n        if (ignore.includes(action.type)) return result;\n\n        localStorage.setItem('budgetState', JSON.stringify(getState()));\n\n        return result;\n    }\n};\n\nconst syncMiddleware = ({getState, dispatch}) => {\n    return (next) => (action) => {\n        const result = next(action);\n        //sync with server if possible\n        const ignore = ['SET_CURRENT_PAGE', 'SET_EDIT_MODE', 'SYNC', 'SET_USER', 'SET_ADD_TRANSACTION', 'SET_MESSAGE', 'SET_FETCHING'];\n        if (ignore.includes(action.type)) return result;\n        sync(getState(), dispatch);\n\n        return result;\n    }\n};\n\nexport const sync = (state, dispatch, manual=false) => {\n    if (!state.user) return;\n    const setUser = (value) => dispatch({type: 'SET_USER', payload: value});\n    const setMessage = (value) => dispatch({type: 'SET_MESSAGE', payload: value});\n    const setFetching = (value) => dispatch({type: 'SET_FETCHING', payload: value});\n\n    const backupData = {\n        general: state.general,\n        accounts: state.accounts,\n        categories: state.categories,\n        budgets: state.budgets,\n        funds: state.funds,\n        fundAdditions: state.fundAdditions,\n        transactions: state.transactions,\n        user: state.user\n    };\n\n    setFetching(true);\n    fetch(url+'api/backup', {\n        method: 'POST', \n        headers: {'content-type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify(backupData)\n    }).then(res => res.json()).then(data => {\n        setFetching(false);\n        if (data.status === 'success') {\n            dispatch({type: 'SYNC', payload: data.data});\n            setUser(data.user);\n            changeColourScheme(data.data.general.colourScheme);\n            if (manual) setMessage({text: 'Data successfully synced!', type: 'success'});\n        } else {\n            console.log(data);\n            if (data.type === 'logout') setUser(null);\n            setMessage({text: data.message, type: 'error'});\n        }\n    }).catch(err => {\n        console.log('Error Syncing: ', err.message);\n        setFetching(false);\n        setUser(null);\n        setMessage({text: 'Failed to contact server for syncing. Please try to login again.', type: 'error'});\n    });\n}\n\nconst getFromLocalStorage = () => {\n    let state = localStorage.getItem('budgetState');\n    if (state !== null) {\n        state = JSON.parse(state);\n        state.currentPage = 'Home';\n        state.message = {text: '', type: ''};\n        state.editMode = false;\n        state.addTransaction = false;\n        state.fetching = false;\n        changeColourScheme(state.general.colourScheme);\n        return state;\n    }\n}\n\nconst store = createStore(reducer, getFromLocalStorage(), applyMiddleware(localStorageMiddleware, syncMiddleware));\n\nexport default store;","import React from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FaHome } from 'react-icons/fa';\nimport { MdSettings } from 'react-icons/md';\n\nconst StyledComp = styled.div`\n    display: flex;\n    border-bottom: 1px solid var(--menu-border-color);\n    width: 100%;\n    background-color: var(--menu-bg-color);\n\n    & > div {\n        color: var(--menu-text-color);\n        padding: 5px 10px;\n        border-right: 1px solid var(--menu-border-color);\n        ${props => props.isMobile ? 'flex-grow: 1;' : ''};\n        ${props => props.isMobile ? 'padding: 10px' : ''};\n    }\n\n    & > div:last-of-type {\n        ${props => props.isMobile ? 'border-right: none;' : ''};\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        cursor: pointer;\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div.spacer:hover {\n        background-color: transparent;\n        cursor: default;\n    }\n\n    & > div.spacer {\n        flex-grow: 1;\n    }\n\n    & > div.right {\n        border-right: none;\n    }\n\n    & > div > svg {\n        position: relative;\n        top: 3px;\n    }\n`;\n\nconst Header = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const addTransaction = useSelector(state => state.addTransaction);\n    const currentPage = useSelector(state => state.currentPage);\n\n    return (\n        <StyledComp isMobile={isMobile}>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Home'})} className={currentPage === 'Home' ? 'selected' : ''}>\n                { isMobile ? <FaHome/> : 'Home' }\n            </div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Categories'})} className={currentPage === 'Categories' ? 'selected' : ''}>Categories</div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Funds'})} className={currentPage === 'Funds' ? 'selected' : ''}>Funds</div>\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Accounts'})} className={currentPage === 'Accounts' ? 'selected' : ''}>Accounts</div>\n            { !isMobile ? <div onClick={() => dispatch({type: 'SET_ADD_TRANSACTION', payload: !addTransaction})}>Add Transaction</div> : null }\n            { !isMobile ? <div className=\"spacer\"></div> : null }\n            <div onClick={() => dispatch({type: 'SET_CURRENT_PAGE', payload: 'Settings'})} className={currentPage === 'Settings' ? 'selected right' : 'right'}>\n                { isMobile ? <MdSettings/> : 'Settings' }\n            </div>\n        </StyledComp>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    position: fixed;\n    top: 28px;\n    width: 100%;\n\n    & > div {\n        border: 1px solid var(--menu-border-color);\n        width: 300px;\n        margin: auto;\n        padding: 10px;\n        background-color: var(--bg-color);\n    }\n`;\n\nconst TopPopup = ({children}) => {\n    return (\n        <StyledComp>{children}</StyledComp>\n    );\n}\n\nexport default TopPopup;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nconst StyledComp = styled.div`\n    width: 95%;\n    max-width: 1200px;\n    border: 2px solid white;\n    ${props => props.type === 'error' ? 'border: 2px solid red' : ''};\n    ${props => props.type === 'success' ? 'border: 2px solid #0F0' : ''};\n    margin: auto;\n    margin-top: 5px;\n    padding: 5px;\n    position: relative;\n\n    & > div:last-child {\n        position: absolute;\n        right: -1px;\n        top: -2px;\n        font-size: 2em;\n    }\n\n    & > div:last-child:hover {\n        color: red;\n        cursor: pointer;\n    }\n`;\n\nconst MessagePopup = () => {\n    const dispatch = useDispatch();\n    const message = useSelector(state => state.message);\n    const clearMessage = () => dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n\n    if (message.text.length === 0) return null;\n\n    return (\n        <StyledComp type={message.type}>\n            <div>{message.text}</div>\n            <div onClick={clearMessage}><IoMdClose/></div>\n        </StyledComp>\n    );\n}\n\nexport default MessagePopup;","import styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 5px auto;\n    ${'' /* border-collapse: collapse; */}\n    border-spacing: 0px;\n    overflow: hidden;\n    border-radius: 5px;\n    background-color: var(--bg-color);\n    color: var(--text-color);\n\n    & thead td {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n    }\n\n    & thead td.income {\n        background-color: green;\n        color: white;\n    }\n\n    & thead td.expense {\n        background-color: darkorange;\n        color: black;\n    }\n\n    & thead td.fund {\n        background-color: lightsteelblue;\n        color: black;\n    }\n\n    & thead td.remaining {\n        background-color: deepskyblue;\n        color: black;\n    }\n\n    & tbody th {\n        background-color: var(--table-heading-bg-color);\n        color: var(--table-heading-text-color);\n        font-weight: normal;\n    }\n\n    & tr td.corner-top-left {\n        border-top: none !important;\n        border-left: none !important;\n        background-color: transparent;\n    }\n\n    & td, & th {\n        padding: ${props => props.padding ? props.padding : '10px 15px'};\n        border-right: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n    \n    & > *:first-child tr:first-child > * {\n        border-top: 1px solid var(--menu-border-color);\n    }\n\n    & tr td:first-child, & tr th:first-child {\n        border-left: 1px solid var(--menu-border-color);\n    }\n\n    & > *:first-child tr:first-child > *:first-child {\n        border-top-left-radius: 5px;\n    }\n\n    & > *:first-child tr:first-child > *:last-child {\n        border-top-right-radius: 5px;\n    }\n\n    & tbody tr:last-child td:first-child {\n        border-bottom-left-radius: 5px;\n    }\n\n    & tbody tr:last-child td:last-child {\n        border-bottom-right-radius: 5px;\n    }\n\n    & td {\n        position: relative;\n    }\n\n    & .budgetIcon {\n        ${'' /* position: absolute; */}\n        float: right;\n        margin-left: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n`;\n\nexport default Table;","import styled from 'styled-components';\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: ${props => props.template ? props.template : '1fr 1fr'};\n    grid-gap: 10px;\n    margin: 10px;\n    ${props => props.start !== undefined ? 'grid-column-start:'+props.start : ''};\n    ${props => props.end !== undefined ? 'grid-column-end:'+props.end : ''};\n`;\n\nexport default Grid;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    width: 60px;\n    border: 1px solid var(--text-color);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n`;\n\nconst BudgetInput = ({value, category, date}) => {\n    const [oldValue, setOldValue] = useState(value);\n    const [currentValue, setCurrentValue] = useState(value);\n    const dispatch = useDispatch();\n    const updateBudget = (val) => dispatch({type: 'UPDATE_BUDGET', payload: val});\n\n    //use local state for editing object, but change if global state changes (don't want to sync with server for every keystroke)\n    if (value !== oldValue) {\n        setOldValue(value);\n        setCurrentValue(value);\n    }\n\n    const onChangeBudget = (e) => {\n        let amount = parseFloat(e.target.value);\n        setCurrentValue(amount);\n    }\n\n    const onBlurBudget = (e) => {\n        let newBudget = {\n            category: category,\n            amount: currentValue,\n            startDate: date,\n            carryOver: false,\n        };\n\n        updateBudget(newBudget);\n    }\n\n    return (\n        <StyledComp type=\"number\" value={isNaN(currentValue) || currentValue === null ? '' : currentValue} onChange={onChangeBudget} onBlur={onBlurBudget}/>\n    );\n}\n\nexport default BudgetInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaPiggyBank } from 'react-icons/fa';\n\nimport { parseCurrency } from '../functions';\n\nimport BudgetInput from './BudgetInput';\n\nconst StyledComp = styled.div`\n    text-align: center;\n    border-radius: 5px;\n    box-shadow: 0px 1px 4px gray;\n    width: 100%;\n    overflow: hidden;\n\n    &.fullRow {\n        grid-column-start: 1;\n        grid-column-end: 3;\n    }\n\n    & > div:first-of-type {\n        position: relative;\n        font-size: 1.2em;\n        font-weight: bold;\n        padding: 2px;\n        margin-bottom: 4px;\n        ${props => props.type === 'income' ? 'background-color: green; color: white;' : ''};\n        ${props => props.type === 'expense' ? 'background-color: darkorange; color: black;' : ''};\n        ${props => props.type === 'fund' ? 'background-color: lightsteelblue; color: black;' : ''};\n        ${props => props.type === 'remaining' ? 'background-color: deepskyblue; color: black;' : ''};\n        ${props => props.type === 'account' ? 'background-color: deepskyblue; color: black;' : ''};\n    }\n\n    & > div:last-of-type {\n        font-size: 1em;\n        margin-bottom: 5px;\n    }\n\n    & .budgetIcon {\n        position: absolute;\n        right: 5px;\n        top: 5px;\n    }\n\n    & .budgetIcon:hover {\n        cursor: pointer;\n    }\n`;\n\nconst AmountGroup = ({title, amount, type, budget=0, editBudget=false, id, date}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode);\n    }\n\n    return (\n        <StyledComp type={type} className={title === 'Earnings' || title === 'Remaining' ? 'fullRow' : ''}>\n            <div>\n                { title }\n                { editBudget ? <div className=\"budgetIcon\" onClick={toggleEditMode}><FaPiggyBank/></div> : null }\n            </div>\n            <div>\n                { amount }\n                { !editMode && budget > 0 ? ` / ${parseCurrency(budget)}` : '' }\n                { editMode ? <span> / <BudgetInput value={budget} category={id} date={date}/></span> : null }\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default AmountGroup;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    color: ${props => props.color};\n    display: inline-block;\n    font-size: ${props => props.size};\n    ${props => props.bordered ? 'border: 1px solid white' : ''};\n    width: ${props => props.width ? props.width : 'auto'};\n    padding: ${props => props.bordered ? '5px' : '0px'};\n    border-radius: 5px;\n    \n    :hover {\n        cursor: pointer;\n    }\n\n    & > svg {\n        position: relative;\n        top: ${props => props.topAdjust};\n    }\n`;\n\nconst IconButton = ({Icon, onClick, color='var(--icon-color)', topAdjust='3px', size='1em', width='auto', bordered=false}) => {\n    return (\n        <StyledComp color={color} topAdjust={topAdjust} size={size} width={width} bordered={bordered}>\n            <Icon onClick={onClick}/>\n        </StyledComp>\n    );\n}\n\nexport default IconButton;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FiArrowLeft, FiArrowRight } from 'react-icons/fi';\nimport { FaPiggyBank } from 'react-icons/fa';\n\nimport Table from '../components/Table';\nimport Grid from '../components/Grid';\nimport AmountGroup from '../components/AmountGroup';\nimport IconButton from '../components/IconButton';\nimport BudgetInput from '../components/BudgetInput';\n\nimport { getLatestDates, getSummaryRows, getSummaryTotals, getAccountSummary, parseCurrency, checkBudget, checkFundTarget, filterDeleted } from '../functions';\n\nconst SummaryTables = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const general = useSelector(state => state.general);\n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const budgets = useSelector(state => filterDeleted(state.budgets));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n\n    const filteredFunds = funds.filter(obj => obj.complete === false);\n\n    const dates = getLatestDates(general.startDate, general.payPeriodType);\n    const [latestDate, setLatestDate] = useState(dates[dates.length-1]);\n\n    const [editCategory, setEditCategory] = useState(0);\n\n    const rows = getSummaryRows(dates, transactions, funds, categories, fundAdditions);\n\n    const incomeCategories = categories.filter(obj => obj.type === 'income' && obj.hidden === false);\n    const expenseCategories = categories.filter(obj => obj.type === 'expense' && obj.hidden === false);\n\n    const summaryTotals = getSummaryTotals(transactions, funds, categories, fundAdditions);\n    const accountSummary = getAccountSummary(transactions, accounts, categories);\n\n    const toggleEditCategory = (id) => () => {\n        if (editCategory === id) setEditCategory(0);\n        else setEditCategory(id);\n    }\n\n    const setPreviousDate = () => {\n        if (latestDate === 'Totals') {\n            setLatestDate(dates[dates.length-1]);\n            return;\n        }\n\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex-1;\n        if (newIndex < 0) return;\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    const setNextDate = () => {\n        let currentIndex = dates.indexOf(latestDate);\n        let newIndex = currentIndex+1;\n        if (newIndex > dates.length-1) {\n            setLatestDate('Totals');\n            return;\n        } else if (latestDate === 'Totals') {\n            return;\n        }\n\n        let newDate = dates[newIndex];\n        setLatestDate(newDate);\n    }\n\n    if (isMobile) {\n        let displayDate = latestDate;\n        if (latestDate !== 'Totals') {\n            displayDate = format(new Date(latestDate), 'do MMMM yyyy');\n        }\n\n        let index = dates.indexOf(latestDate);\n\n        const getHeading = () => {\n            return (\n                <Grid style={{fontSize: '1.5em', fontWeight: 'bold', margin: '0px'}} start='1' end='3' template='50px auto 50px'>\n                    { index === 0 ? <div></div> : <IconButton Icon={FiArrowLeft} onClick={setPreviousDate} size='1.3em' topAdjust='0px'/> }\n                    <div>{displayDate}</div> \n                    { latestDate === 'Totals' ? <div></div> : <IconButton Icon={FiArrowRight} onClick={setNextDate} size='1.3em' topAdjust='0px'/> }\n                </Grid>\n            );\n        }\n\n        //when user goes foward from starting date, they can see the totals for each category\n        if (latestDate === 'Totals') {\n            return (\n                <div>\n                    <Grid>\n                        { getHeading() }\n                        { incomeCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='income'/>) }\n                        { filteredFunds.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name] ? summaryTotals[obj.name].remaining : 0)+checkFundTarget(summaryTotals[obj.name])} type='fund'/>) }\n                        { expenseCategories.map(obj => <AmountGroup key={'totals-heading-'+obj.id} title={obj.name} amount={parseCurrency(summaryTotals[obj.name])} type='expense'/>) }\n                        <AmountGroup title='Remaining' amount={parseCurrency(summaryTotals.remaining)} type='remaining'/>\n                    </Grid>\n\n                    <h3>Accounts</h3>\n                    <Grid>\n                        { accountSummary.map(obj => <AmountGroup key={'account-'+obj.id} title={obj.name} amount={parseCurrency(obj.total)} type='account'/>) }\n                    </Grid>\n                </div>\n            );\n        }\n        \n        return (\n            <div>\n                <Grid>\n                    { getHeading() }\n                    { incomeCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='income'/>) }\n                    { filteredFunds.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='fund'/>) }\n                    { expenseCategories.map(obj => <AmountGroup key={'heading-'+obj.id} title={obj.name} amount={parseCurrency(rows[latestDate][obj.name])} type='expense' editBudget={true} budget={checkBudget(budgets, latestDate, obj.id, transactions, true)} id={obj.id} date={latestDate}/>) }\n                    <AmountGroup title='Remaining' amount={parseCurrency(rows[latestDate].remaining)} type='remaining'/>\n                </Grid>\n            </div>\n        );\n    }    \n\n    return (\n        <div>\n            <h4>Period Summaries</h4>\n            <Table>\n                <thead>\n                    <tr>\n                        <td>Date</td>\n                        { incomeCategories.map(obj => <td key={'heading-'+obj.id} className=\"income\">{obj.name}</td>) }\n                        { filteredFunds.map(obj => <td key={'heading-'+obj.id} className=\"fund\">{obj.name}</td>) }\n                        { expenseCategories.map(obj => <td key={'heading-'+obj.id} className=\"expense\">{obj.name}<div className=\"budgetIcon\" onClick={toggleEditCategory(obj.id)}><FaPiggyBank/></div></td>) }\n                        <td className=\"remaining\">Remaining</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        dates.map(date => {\n                            return (\n                                <tr key={'summaryDate-'+date}>\n                                    <td>{date}</td>\n                                    { incomeCategories.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}</td>) }\n                                    { filteredFunds.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}</td>) }\n                                    { expenseCategories.map(obj => <td key={obj.id}>{parseCurrency(rows[date][obj.name])}{editCategory === obj.id ? <span> / <BudgetInput value={checkBudget(budgets, date, obj.id, transactions, true)} category={obj.id} date={date}/></span> : checkBudget(budgets, date, obj.id, transactions)}</td>) }\n                                    <td>{ parseCurrency(rows[date].remaining) }</td>\n                                </tr>\n                            )\n                        })\n                    }\n                    <tr>\n                        <td>Total</td>\n                        { incomeCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                        { filteredFunds.map(obj => <td key={'fundHeading-'+obj.id}>{parseCurrency(summaryTotals[obj.name].remaining)}{checkFundTarget(summaryTotals[obj.name])}</td>) }\n                        { expenseCategories.map(obj => <td key={'totalsRow-'+obj.id}>{parseCurrency(summaryTotals[obj.name])}</td>) }\n                        <td>{parseCurrency(summaryTotals.remaining)}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <h4>Account Summaries</h4>\n            <Table>\n                <thead>\n                    <tr>\n                        <td>Account</td>\n                        <td>Total</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    accountSummary.map(obj => \n                        <tr key={'account-'+obj.id}>\n                            <td>{obj.name}</td>\n                            <td>{parseCurrency(obj.total)}</td>\n                        </tr>\n                    )\n                }\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default SummaryTables;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.input`\n    border: ${props => props.noBorder ? 'none' : '1px solid var(--menu-border-color)'};\n    height: var(--input-height);\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    padding-left: 10px;\n    font-size: 1em;\n    width: ${props => props.width};\n    border-radius: 0px;\n    -webkit-appearance: none;\n\n    :focus {\n        outline: none;\n        border: 1px solid #33C9F9;\n    }\n\n    &::-webkit-calendar-picker-indicator {\n        filter: invert(100%);\n    }\n`;\n\nconst Input = ({value, type='text', placeholder='', onChange, options=[], groups=[], width=\"100px\", noBorder=false}) => {\n    if (type === 'dropdown' && (options.length > 0 || groups.length > 0)) return (\n        <StyledComp as='select' onChange={onChange} value={value} width={width} noBorder={noBorder}>\n            <option hidden value={undefined}>Select an Option</option>\n        {\n            options.length > 0 \n            ? options.map(option => {\n                if (option.display.length === 0) return null;\n                return <option key={'inputOption-'+option.value} value={option.value}>{option.display}</option>\n            })\n            : groups.map(group => {\n                return (\n                    <optgroup key={'inputGroup-'+group.label} label={group.label}>\n                    {\n                        group.options.map(option => {\n                            if (option.display.length === 0) return null;\n                            return <option key={'inputGroupOption-'+option.value} value={option.value}>{option.display}</option>\n                        })\n                    }\n                    </optgroup>\n                )\n            })\n        }\n        </StyledComp>\n    );\n\n    if (type === 'dropdown' && (options.length === 0 && groups.length === 0)) return <StyledComp value={'No Options'} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder} disabled={true}/>\n\n    if (type === 'number' && isNaN(value)) value = '';\n\n    return (\n        <StyledComp value={value} type={type} onChange={onChange} placeholder={placeholder} width={width} noBorder={noBorder}/>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Input from './Input';\n\nconst StyledComp = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 5px;\n\n    & > label {\n        width: ${props => props.labelWidth};\n        display: inline-flex;\n        justify-content: flex-end;\n        align-items: center;\n        height: var(--input-height);\n        padding: 0px 10px;\n        border-left: 1px solid var(--menu-border-color);\n        border-top: 1px solid var(--menu-border-color);\n        border-bottom: 1px solid var(--menu-border-color);\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n        background-color: var(--table-heading-bg-color);\n    }\n\n    & > input, & > select {\n        border-top-right-radius: 5px;\n        border-bottom-right-radius: 5px;\n        width: 150px;\n    }\n`;\n\nconst LabelledInput = ({label, type='text', value, placeholder='', onChange, options=[], groups=[], labelWidth='120px'}) => {\n    let inputValue = value;\n    if (isNaN(inputValue) && type === 'number') inputValue = '';\n\n    return (\n        <StyledComp labelWidth={labelWidth}>\n            <label>{label}</label>\n            <Input value={inputValue} type={type} onChange={onChange} placeholder={placeholder} options={options} groups={groups}/>\n        </StyledComp>\n    );\n}\n\nexport default LabelledInput;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    background-color: var(--menu-bg-color);\n    color: var(--menu-text-color);\n    border: 1px solid var(--menu-border-color);\n    ${props => props.color ? `border-color: ${props.color}` : ''};\n    border-radius: 5px;\n    height: var(--input-height);\n    display: ${props => props.inline ? 'inline flex' : 'flex'};\n    justify-content: center;\n    align-items: center;\n    width: ${props => props.width};\n    margin: auto;\n    position: relative;\n\n    :hover {\n        cursor: pointer;\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n`;\n\nconst Loader = styled.div`\n    position: absolute;\n    left: 0px;\n    right: 0px;\n    top: 0px;\n    bottom: 0px;\n\n    background-color: rgba(0,0,0,0.6);\n    border-radius: 5px;\n    cursor: default;\n\n    :after {\n        content: ' ';\n        position: relative;\n        top: 2px;\n        border: 3px solid black;\n        border-radius: 50%;\n        border-top: none;\n        border-left: none;\n        width: 20px;\n        height: 20px;\n        display: block;\n        margin: auto;\n        animation-name: spin;\n        animation-duration: 0.9s;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n\n    @keyframes spin {\n        from {transform: rotate(0deg);}\n        to {transform: rotate(360deg);}\n    }\n`;\n\nconst Button = ({value, onClick, width='100%', inline=false, color=undefined, style={}, loading=false}) => {\n    if (loading) return <StyledComp width={width} inline={inline} color={color} style={style}><Loader/>{value}</StyledComp>\n\n    return <StyledComp width={width} onClick={onClick} inline={inline} color={color} style={style}>{value}</StyledComp>\n}\n\nexport default Button;","import React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterDeleted } from '../functions';\n\nimport LabelledInput from '../components/LabelledInput';\nimport Button from '../components/Button';\n\nconst AddTransaction = ({onAdd=()=>{}}) => {\n    const dispatch = useDispatch();\n\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let defaultAccountObj = accounts.find(obj => obj.defaultAccount === true);\n    let defaultAccount = defaultAccountObj !== undefined ? defaultAccountObj.id : accounts.length > 0 ? accounts[0].id : undefined;\n\n    const [type, setType] = useState('spend');\n    const [amount, setAmount] = useState('');\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n    const [account, setAccount] = useState(defaultAccount);\n    const [fund, setFund] = useState(undefined);\n    const [category, setCategory] = useState(undefined);\n    const [from, setFrom] = useState(undefined);\n    const [to, setTo] = useState(undefined);\n\n    const reset = () => {\n        setType('spend');\n        setAmount('');\n        setDescription('');\n        setDate(format(new Date(), 'yyyy-MM-dd'));\n        setAccount(defaultAccount);\n        setFund(undefined);\n        setCategory(undefined);\n        setFrom(undefined);\n        setTo(undefined);\n    }\n\n\n    const addTransaction = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (account === undefined) return;\n        if (type === 'spend' && fund === undefined && category === undefined) return;\n        if (type === 'transfer' && from === undefined && to === undefined) return;\n\n        let transaction;\n        if (type === 'spend') {\n            transaction = {type, amount, description, date, account, fund, category};\n        } else if (type === 'transfer') {\n            transaction = {type, amount, date, from, to};\n        }        \n\n        dispatch({type: 'ADD_TRANSACTION', payload: transaction});\n        onAdd();\n        reset();\n    }\n\n    const addFundAddition = () => {\n        //make sure transaction is valid\n        if (amount === 0 || isNaN(amount)) return;\n        if (date.length === 0) return;\n        if (fund === undefined) return;\n\n        let fundAddition = {amount, date, fund};        \n        dispatch({type: 'ADD_FUND_ADDITION', payload: fundAddition});\n        onAdd();\n        reset();\n    }\n\n    const onChangeGroup = (e) => {\n        let value = e.target.value;\n        let [id, name] = value.split(':');\n        id = Number(id);\n        \n        let fund = funds.find(obj => obj.id === id && obj.name === name);\n        \n        if (fund !== undefined) {\n            setFund(id);\n            setCategory(undefined);\n        } else {\n            let category = categories.find(obj => obj.id === id && obj.name === name);\n            if (category !== undefined) {\n                setCategory(id);\n                setFund(undefined);\n            }\n        }\n    }\n\n    let types = [\n        {value: 'spend', display: 'Spend/Receive'},\n        {value: 'fundAddition', display: 'Add to Fund'},\n    ];\n\n    if (accounts.length > 1) types.push({value: 'transfer', display: 'Transfer'});\n\n    if (type === 'fundAddition') {\n        return (\n            <div>\n                <strong>Add Transaction</strong>\n                <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/>\n                <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n                <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n                <LabelledInput label={'Fund'} type='dropdown' value={fund} onChange={(e) => setFund(Number(e.target.value))} options={funds.map(obj => ({value: obj.id, display: obj.name}))}/>\n                <Button value=\"Add Transaction\" onClick={addFundAddition} width=\"140px\"/>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <strong>Add Transaction</strong>\n            <LabelledInput label={'Type'} type='dropdown' value={type} onChange={(e) => setType(e.target.value)} options={types}/>\n            <LabelledInput label={'Amount'} type='number' value={amount} onChange={(e) => setAmount(parseFloat(e.target.value))}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Description'} value={description} onChange={(e) => setDescription(e.target.value)}/> }\n            <LabelledInput label={'Date'} type='date' value={date} onChange={(e) => setDate(e.target.value)}/>\n            { type === 'transfer' ? null : <LabelledInput label={'Account'} type='dropdown' value={account} onChange={(e) => setAccount(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> }\n            { type === 'transfer' ? <LabelledInput label={'From'} type='dropdown' value={from} onChange={(e) => setFrom(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? <LabelledInput label={'To'} type='dropdown' value={to} onChange={(e) => setTo(Number(e.target.value))} options={accounts.map(obj => ({value: obj.id, display: obj.name}))}/> : null }\n            { type === 'transfer' ? null : <LabelledInput label={'Group'} type='dropdown' value={undefined} onChange={onChangeGroup} groups={[ \n                                                                    {label: 'Funds', options: funds.map(obj => ({value: obj.id+':'+obj.name, display: obj.name}) )} , \n                                                                    {label: 'Categories', options: categories.map(obj => ({value: obj.id+':'+obj.name, display: obj.name}) )}  ]}/> }\n            <Button value=\"Add Transaction\" onClick={addTransaction} width=\"140px\"/>\n        </div>\n    );\n}\n\nexport default AddTransaction;","import styled from 'styled-components';\n\nconst ListContainer = styled.div`\n    display: flex;\n    width: 100%;\n    height: calc(100vh - 70px);\n\n    & > div:last-child {\n        flex-grow: 1;\n    }\n`;\n\nexport default ListContainer;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    width: 200px;\n    margin: 5px;\n    padding: 0px 5px;\n    overflow: scroll;\n    position: relative;\n\n    & > div {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        width: 100%;\n        margin-bottom: 5px;\n        background-color: var(--menu-bg-color);\n        color: var(--menu-text-color);\n    }\n\n    & > div:hover {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n        cursor: pointer;\n    }\n\n    & > div.selected {\n        background-color: var(--menu-selected-bg-color);\n        color: var(--menu-selected-text-color);\n    }\n\n    & > div:last-child {\n        position: absolute;\n        bottom: 0px;\n        left: 5px;\n        width: calc(100% - 10px);\n    }\n`;\n\nconst List = ({heading='', array=[], onClickObj, selected}) => {\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n\n    const toggleEditMode = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: !editMode});\n    }\n\n    return (\n        <StyledComp>\n            <h4>{heading}</h4>\n            {\n                array.map(obj => {\n                    if (obj.name.length === 0) return null;\n                    return (\n                        <div key={'objList-'+obj.id} onClick={onClickObj(obj.id)} className={selected === obj.id && editMode === false ? 'selected': ''}>{obj.name}</div>\n                    );\n                })\n            }\n            <div onClick={toggleEditMode} className={editMode ? 'selected' : ''}>Edit {heading}</div>\n        </StyledComp>\n    );\n}\n\nexport default List;","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { format, parseISO } from 'date-fns';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport IconButton from '../components/IconButton';\n\nconst StyledComp = styled.div`\n    & > table {\n        width: 100%;\n        max-width: 650px;\n        margin: auto;\n    }\n\n    & td {\n        ${'' /* border: 1px solid white; */}\n        height: 39px;\n    }\n\n    & td:nth-child(1) {\n        text-align: left;\n    }\n\n    & td:nth-child(2) {\n        width: 100px;\n        text-align: right;\n    }\n\n    & td:nth-child(3) {\n        width: 50px;\n        text-align: right;\n    }\n\n    & div.description {\n        max-width: 540px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    & td span.date {\n        font-size: 0.8em;\n        color: var(--light-text-color);\n    }\n\n    &:hover {\n        cursor: pointer;\n        background-color: var(--table-heading-bg-color);\n    }\n\n    @media screen and (max-width: 700px) {        \n        & > table {\n            width: 100%;\n        }\n\n        & div.description {\n            max-width: 250px;\n        }\n\n        & td {\n            height: 40px;\n        }\n\n        & tr > td:first-child {\n            padding-left: 15px;\n        }\n\n        & tr > td:last-child {\n            padding-right: 15px;\n        }\n    }\n`;\n\nconst Transaction = ({obj, accountId, showDelete=false, onClick=()=>{}}) => {\n    const dispatch = useDispatch();\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const funds = useSelector(state => filterDeleted(state.funds));\n    const accounts = useSelector(state => filterDeleted(state.accounts));\n    const currentPage = useSelector(state => state.currentPage);\n\n    const remove = () => {     \n        if (obj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: obj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: obj.id});\n    }\n\n    let date = obj.date !== undefined ? format(parseISO(obj.date), 'MMM d, yyyy') : '';\n    let description = getType(obj, accountId, categories, funds, accounts, currentPage);\n\n    return (\n        <StyledComp onClick={onClick(obj)}>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            { description.length > 0 ? <div className='description'>{ description }</div> : null }\n                            { description.length > 0 ? <span className='date'>{ date }</span> : <div className='description'>{ date }</div>}\n                        </td>\n                        <td>{getAmount(obj, categories, accountId)}</td>\n                        { showDelete ? <td><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px'/></td> : null }\n                    </tr>\n                </tbody>\n            </table>\n        </StyledComp>\n    );\n}\n\nconst getType = (transaction, accountId, categories, funds, accounts, page) => {\n    if (page === 'Categories') {\n        let id = transaction.account;\n        let account = accounts.find(obj => obj.id === id);\n        if (account !== undefined) {\n            if (transaction.description.length > 0) return account.name + ' - ' + transaction.description;\n            return account.name;\n        } else {\n            if (transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    if (page === 'Funds') {\n        if (transaction.description && transaction.description.length > 0) return transaction.description;\n        else return '';\n    }\n\n    if (accountId === undefined) return '';\n\n    //get category name\n    if (transaction.category !== undefined) {\n        let category = categories.find(obj => obj.id === transaction.category);\n        if (category !== undefined) {\n            if (transaction.description.length > 0) return category.name + ' - ' + transaction.description;\n            return category.name;\n        } else {\n            if (transaction.description.length > 0) return transaction.description;\n        }\n    }\n\n    //get fund name\n    if (transaction.fund !== undefined) {\n        let fund = funds.find(obj => obj.id === transaction.fund);\n        if (fund !== undefined) {\n            if (transaction.description.length > 0) return `${fund.name} Fund - ${transaction.description}`;\n            return `${fund.name} Fund`;\n        }\n    }\n\n    //get transfer details\n    if (transaction.from !== undefined) {\n        if (transaction.from === accountId) {\n            let account = accounts.find(obj => obj.id === transaction.to);\n            if (account !== undefined) return `Transfered to ${account.name}`;\n        } else {\n            let account = accounts.find(obj => obj.id === transaction.from);\n            if (account !== undefined) return `Transfered from ${account.name}`;\n        }\n    }\n\n    return '';\n}\n\nexport default Transaction;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { TiArrowSortedDown } from 'react-icons/ti';\n\nconst StyledComp = styled.div`\n    width: 250px;\n    margin: 5px auto;\n    position: relative;\n\n    & > div > svg {\n        fill: var(--icon-color);\n    }\n\n    & > div.dropdownDisplay {\n        font-size: 1.5em;\n        font-weight: bold;\n        border-bottom: 2px solid var(--icon-color);\n        padding: 5px;\n        position: relative;\n        padding-right: 30px;\n        padding-left: 30px;\n        overflow: hidden;\n    }\n\n    & > div.dropdownDisplay > svg {\n        position: absolute;\n        right: 0px;\n        top: 2px;\n        font-size: 1.5em;\n    }\n\n    & > div.dropdownGroup {\n        border-left: 1px solid var(--menu-border-color);\n        border-bottom: ${props => props.open ? '1px solid var(--menu-border-color)' : 'none'};\n        border-right: 1px solid var(--menu-border-color);\n        position: absolute;\n        top: 100%;\n        left: 0px;\n        right: 0px;\n        background-color: var(--bg-color);\n        max-height: ${props => props.open ? props.maxHeight : '0px'};\n        overflow: scroll;\n        transition: 0.3s;\n    }\n\n    & div.dropdownItem {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n    }\n\n    & div.dropdownItem:last-child {\n        border-bottom: none;\n    }\n`;\n\nconst HeaderDropdown = ({value, options=[], onChange}) => {\n    const dispatch = useDispatch();\n    const [open, setOpen] = useState(false);\n\n    let currentValue = options.find(obj => obj.value === value);\n    if (value === 'Edit') currentValue = {display: 'Edit'};\n\n    if (currentValue === undefined) {\n        currentValue = {display: 'Edit'};\n    }\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    }\n\n    const onClickItem = (itemValue) => () => {\n        onChange(itemValue);\n        setOpen(false);\n    }\n\n    const onClickEdit = () => {\n        dispatch({type: 'SET_EDIT_MODE', payload: true});\n    }\n\n    let maxHeight = (options.length * 40) + 40;\n    if (maxHeight > 300) maxHeight = 300;\n    \n    return (\n        <StyledComp open={open} maxHeight={maxHeight+'px'}>\n            <div className='dropdownDisplay' onClick={toggleOpen}>{currentValue.display}<TiArrowSortedDown/></div>\n            <div className='dropdownGroup'>\n            {\n                options.map(obj => <div key={'headerDropdown-'+obj.value} className='dropdownItem' onClick={onClickItem(obj.value)}>{obj.display}</div>)\n            }\n                <div className='dropdownItem' onClick={onClickEdit}>Edit</div>\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default HeaderDropdown;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { parseCurrency } from '../functions';\n\nconst StyledComp = styled.div`\n    margin: 10px;\n    font-size: 1em;\n    font-weight: bold;\n\n    & > table {\n        margin: auto;\n    }\n\n    & > table td:first-of-type {\n        text-align: right;\n    }\n\n    & > table td:last-of-type {\n        text-align: left;\n    }\n`;\n\nconst TotalsDisplay = ({label, value, fundObj}) => {\n    if (fundObj !== undefined) {\n        return (\n            <StyledComp>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Total Saved: </td>\n                            <td>{parseCurrency(value)}</td>\n                        </tr>\n                        {\n                            fundObj.target > 0 ?\n                                <React.Fragment>\n                                    <tr>\n                                        <td>Fund Target: </td>\n                                        <td>{parseCurrency(fundObj.target)}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total Needed: </td>\n                                        <td>{parseCurrency(fundObj.remaining)}</td>\n                                    </tr>\n                                </React.Fragment> : null \n                        }\n                    </tbody>\n                </table>\n            </StyledComp>\n        );\n    }\n\n    return (\n        <StyledComp>\n            {label}: {parseCurrency(value)}\n        </StyledComp>\n    );\n}\n\nexport default TotalsDisplay;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledComp = styled.div`\n    width: ${props => props.width+'px'};\n    border: 1px solid white;\n    position: fixed;\n    top: 50px;\n    background-color: var(--bg-color);\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    opacity: 0;\n    transition: 0.4s;\n    pointer-events: none;\n\n    &.visible {\n        opacity: 1;\n        transition: 0.4s;\n        pointer-events: all;\n    }\n`;\n\nconst Modal = ({children, width=350, visible=false}) => {\n    return (\n        <StyledComp width={width} className={visible ? 'visible' : ''}>{children}</StyledComp>\n    );\n}\n\nexport default Modal;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { formatDate, parseTransaction, parseCurrency } from '../functions';\n\nimport Button from './Button';\nimport IconButton from './IconButton';\nimport Grid from './Grid';\n\nconst StyledComp = styled.div`    \n    padding: 10px;\n\n    & > table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    & > table td {\n        border: 1px solid var(--menu-border-color);\n        padding: 5px;\n        text-transform: capitalize;\n    }\n\n    & > table tr > td:first-child {\n        width: 110px;\n    }\n\n    & strong {\n        font-size: 1.3em;\n    }\n`;\n\nconst getTableRow = (heading, value) => {\n    if (value === undefined) return null;\n    if (value.length === 0) return null;\n\n    return <tr><td>{heading}</td><td>{value}</td></tr>\n}\n\nconst TransactionDetails = ({obj, onClose, onDelete}) => {\n    const dispatch = useDispatch();\n\n    if (obj === null) return null;\n    let parsedObj = parseTransaction(obj);\n\n    const remove = () => {     \n        if (parsedObj.type === undefined) dispatch({type: 'REMOVE_FUND_ADDITION', payload: parsedObj.id});\n        else dispatch({type: 'REMOVE_TRANSACTION', payload: parsedObj.id});\n        onClose();\n    }\n\n    return (\n        <StyledComp>\n            <Grid template=\"50px auto 50px\">\n                <div style={{textAlign: 'left'}}><IconButton Icon={FaTrashAlt} onClick={remove} color='red' topAdjust='1px' size=\"1.3em\"/></div>\n                <strong>Transaction Details</strong>\n            </Grid>\n\n            <table>\n                <tbody>\n                    { getTableRow('Type', parsedObj.type) }\n                    { getTableRow('From', parsedObj.from) }\n                    { getTableRow('To', parsedObj.to) }\n                    { getTableRow('Category', parsedObj.category) }\n                    { getTableRow('Account', parsedObj.account) }\n                    { getTableRow('Fund', parsedObj.fund) }\n                    { getTableRow('Date', formatDate(parsedObj.date)) }\n                    { getTableRow('Description', parsedObj.description) }\n                    { getTableRow('Amount', parseCurrency(parsedObj.amount)) }\n                </tbody>\n            </table>\n\n            <br/>\n\n            <Button onClick={onClose} value=\"Close\"/>\n        </StyledComp>\n    );\n}\n\nexport default TransactionDetails;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { format, parseISO, parse, compareAsc } from 'date-fns';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { getAmount, filterDeleted } from '../functions';\n\nimport Transaction from './Transaction';\nimport HeaderDropdown from './HeaderDropdown';\nimport TotalsDisplay from './TotalsDisplay';\nimport Modal from './Modal';\nimport TransactionDetails from './TransactionDetails';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n    position: relative;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n    }\n`;\n\nconst StyledGroup = styled.div`\n    margin: 0px 10px;\n\n    & > div > div {\n        border-bottom: 1px solid gray;\n        padding: 3px;\n    }\n\n    & > div > div:first-of-type {\n        margin-top: 0px;\n        border-top: none;\n    }\n\n    & > div > div:last-of-type {\n        border-bottom: none;\n    }\n\n    & > div {\n        border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n        ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*51}px`};\n        overflow: hidden;\n        transition: 0.3s;\n    }\n\n    & > strong {\n        display: block;\n        width: 100%;\n        background-color: var(--menu-bg-color);\n        padding: 10px;\n        color: var(--menu-text-color);\n    }\n\n    & > strong:hover {\n        cursor: pointer;\n    }\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n\n        & > div > div {\n            padding: 0px;\n        }\n\n        & > div {\n            border-bottom: ${props => props.open === false ? '1px solid var(--menu-border-color)' : '1px solid var(--bg-color)'};\n            ${props => props.open === false ? 'height: 0px' : `height: ${props.qty*45}px`};\n            overflow: hidden;\n            transition: 0.3s;\n        }\n    }\n`;\n\nconst Transactions = ({transactions=[], heading='', id, onClickDropdown=()=>{}, objArray=[]}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const categories = useSelector(state => filterDeleted(state.categories));\n    const currentPage = useSelector(state => state.currentPage);\n    const [closed, setClosed] = useState({});\n\n    const [details, setDetails] = useState({});\n    const [showDetails, setShowDetails] = useState(false);\n\n    let accountId = currentPage === 'Accounts' ? id : undefined;    \n    let currentObj = objArray.find(obj => obj.id === id);\n\n    //organise by month/year\n    let organisedObj = {};\n    transactions.forEach(obj => {\n        let date = obj.date;\n        let formatted = format(parseISO(date), 'MMMM yyyy');\n        if (organisedObj[formatted] === undefined) organisedObj[formatted] = [];\n        organisedObj[formatted].push(obj);\n    });\n\n    //put into an array and sort by date so newest first\n    let organisedArr = Object.keys(organisedObj).map(key => {\n        let sortedTransactions = organisedObj[key].sort((a,b) => {\n            return compareAsc(parseISO(b.date), parseISO(a.date));\n        });\n        return {month: key, transactions: sortedTransactions};\n    }).sort((a,b) => {\n        let first = parse(a.month, 'MMMM yyyy', new Date());\n        let second = parse(b.month, 'MMMM yyyy', new Date());\n        return compareAsc(second, first);\n    });\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    const onToggleGroup = (month) => () => {\n        let closedObj = {...closed};\n        closedObj[month] === undefined ? closedObj[month] = true : closedObj[month] = !closedObj[month];\n        setClosed(closedObj);\n    }\n\n    const onToggleDetails = (obj) => () => {\n        setDetails(obj);\n        setShowDetails(true);\n    }\n\n    const onCloseDetails = () => {\n        setShowDetails(false);\n    }\n\n    let total = transactions.reduce((t,c) => {\n        t += getAmount(c, categories, id, false);\n        return t;\n    }, 0);        \n\n    let negative = false;\n    if (currentObj && currentObj.startingBalance !== undefined) {\n        if (currentObj.type === 'expense') {\n            total -= parseFloat(currentObj.startingBalance);\n            negative = true;\n        } else total += parseFloat(currentObj.startingBalance);\n    }\n    \n    let categoryType = 'Expense';\n    if (currentPage === 'Categories') {\n        if (currentObj !== undefined) categoryType = currentObj.type;\n    }\n\n    let fundInfo = {};\n    if (currentPage === 'Funds') {\n        if (currentObj !== undefined) {\n            fundInfo = {\n                target: currentObj.targetAmount,\n                remaining: currentObj.targetAmount - total\n            }\n        }\n    }\n\n    return (\n        <StyledComp>\n            { isMobile ? null : <h4>{heading}</h4> }\n            { isMobile ? <HeaderDropdown value={id} options={objArray.map(obj => ({display: obj.name, value: obj.id}))} onChange={onChangePage} /> : null }\n            <Modal visible={showDetails}><TransactionDetails obj={details} onClose={onCloseDetails}/></Modal>\n            {/* <EditButton><IconButton Icon={FaEdit} onClick={toggleDelete}/></EditButton> */}\n            { currentPage === 'Accounts' ? <TotalsDisplay label=\"Balance\" value={total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'expense' ? <TotalsDisplay label=\"Total Spent\" value={-total}/> : null }\n            { currentPage === 'Categories' && categoryType === 'income' ? <TotalsDisplay label=\"Total Earned\" value={total}/> : null }\n            { currentPage === 'Funds' ? <TotalsDisplay value={total} fundObj={fundInfo}/> : null }\n            {\n                organisedArr.length === 0 && objArray.length > 0 ? <div style={{margin: '10px'}}>No Transactions to Display</div> : null\n            }\n            {\n                organisedArr.map(group => {\n                    return (\n                        <StyledGroup key={'transactionGroup-'+group.month+id} open={closed[group.month] !== true} qty={group.transactions.length}>\n                            <strong onClick={onToggleGroup(group.month)}>{group.month}</strong>\n                            <div>\n                                { group.transactions.map(obj => <Transaction key={'transaction-'+obj.id} obj={obj} accountId={accountId} showDelete={false} onClick={onToggleDetails}/>) }\n                            </div>\n                        </StyledGroup>\n                    )\n\n                })\n            }\n            {\n                currentObj && currentObj.startingBalance !== undefined ? (\n                    <StyledGroup>\n                        <strong>Opening Balance</strong>\n                        <Transaction obj={{date: currentObj.dateOpened, amount: negative ? -currentObj.startingBalance : currentObj.startingBalance, description: ''}} accountId={accountId}/>\n                    </StyledGroup>\n                ) : null\n            }\n        </StyledComp>\n    );\n}\n\nexport default Transactions;","import styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 90%;\n    max-width: 1150px;\n    margin: 10px auto;\n\n    @media screen and (max-width: 700px) {\n        width: 100%;\n        margin: 0px;\n    }\n`;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Input from './Input';\n\nimport { capitalize, filterDeleted } from '../functions';\n\nconst EditInput = ({label, defaultValue, value, onChange, width=undefined}) => {\n    const categories = useSelector(state => filterDeleted(state.categories));\n\n    let itemWidth = '100px';\n    if (width === undefined && label === 'description') itemWidth = '300px';\n    else if (width !== undefined) itemWidth = width;\n\n    if (label === 'category') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={categories.map(obj => ({value: obj.id, display: obj.name}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'number') return <Input type=\"number\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue === 'date') return <Input type=\"date\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string' && defaultValue.includes(',') > 0) return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={defaultValue.split(',').map(obj => ({value: obj, display: capitalize(obj)}))} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'string') return <Input onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} width={itemWidth} noBorder={true}/>;\n    if (typeof defaultValue === 'boolean') return <Input type=\"dropdown\" onChange={onChange} value={value !== undefined ? value : defaultValue} placeholder={label} options={[{display: 'Yes', value: true}, {display: 'No', value: false}]} width={itemWidth} noBorder={true}/>;\n}\n\nexport default EditInput;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Table from './Table';\nimport Button from './Button';\nimport EditInput from './EditInput';\n\nimport { fromCamelCase, checkIfCanDelete } from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid var(--menu-border-color);\n    display: inline-block;\n    margin: 10px;\n    border-radius: 5px;\n    width: 40%;\n\n    & > div:first-child {\n        padding: 10px;\n        border-bottom: 1px solid var(--menu-border-color);\n        font-weight: bold;\n    }\n\n    & > div:last-child {\n        display: flex;\n    }\n\n    & > div:last-child > div {\n        padding: 10px;\n        width: 50%;\n    }\n\n    & > div:last-child > div:first-child {\n        border-right: 1px solid white;\n    }\n\n    & > div.popup {\n        background-color: rgba(0,0,0,0.5);\n        position: absolute;\n        top: 0px;\n        bottom: 0px;\n        left: 0px;\n        right: 0px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transform: scale(${props => props.open ? '1.0' : '0.0'});\n        transition: 0.3s;\n    }\n\n    & > div.popup > div {\n        width: 100%;\n        padding: 10px;\n    }\n`;\n\nconst MobileEditGroup = ({modal, obj, onChange, onDelete}) => {\n    const [open, setOpen] = useState(obj.name.length === 0 ? true : false);\n    const [editing, setEditing] = useState(false);\n\n    const onEdit = () => {\n        setOpen(true);\n        setEditing(true);\n    }\n\n    const onCancel = () => {\n        onDelete(obj.id)();\n    }\n\n    const close = () => {\n        if (obj.name.length === 0) return;\n        setOpen(false);\n        setEditing(false);\n    }\n\n    return (\n        <StyledComp open={open}>\n            <div>{obj.name}</div>\n            <div className=\"popup\">\n                <div>\n                    <Table key={'EditListTable-'+obj.id} style={{marginBottom: '10px', width: '100%', borderTop: '1px solid #555'}} padding='2px'>\n                        <tbody>\n                        {\n                            Object.keys(modal).map(key => {\n                                return (\n                                    <tr key={'EditListRow-'+key}>\n                                        <td style={{backgroundColor: '#222', fontWeight: 'bold'}}>{fromCamelCase(key)}</td>\n                                        <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='100%'/></td>\n                                    </tr>\n                                );\n                            })\n                        }\n                        </tbody>\n                    </Table>\n                    { !editing ? <Button value=\"Cancel\" onClick={onCancel} width=\"150px\" inline={true} style={{marginRight: '5px'}}/> : null }\n                    <Button value=\"Close\" onClick={close} width=\"150px\" inline={true}/>\n                </div>\n            </div>\n            <div>\n                <div onClick={onEdit}>Edit</div>\n                { checkIfCanDelete(obj) ? <div onClick={onDelete(obj.id)}>Delete</div> : <div style={{color: 'grey'}}>Delete</div>}\n            </div>\n        </StyledComp>\n    );\n}\n\nexport default MobileEditGroup;","const category = {\n    name: '',\n    description: '',\n    type: 'income,expense',\n    hidden: false,\n    startingBalance: 0\n};\n\nconst fund = {\n    name: '',\n    description: '',\n    targetAmount: 0,\n    complete: false,\n    startingBalance: 0\n}\n\nconst account = {\n    name: '',\n    note: '',\n    interestRate: 0.0,\n    startingBalance: 0,\n    defaultAccount: false,\n    closed: false,\n    extraCharges: 0,\n    currency: '£',\n    dateOpened: 'date'\n}\n\nconst budget = {\n    category: 0,\n    amount: 0,\n    startDate: 'date',\n    endDate: 'date'\n}\n\nexport const modals = {\n    categories: {\n        modal: category,\n        editString: '_CATEGORY'\n    },\n    funds: {\n        modal: fund,\n        editString: '_FUND'\n    },\n    accounts: {\n        modal: account,\n        editString: '_ACCOUNT'\n\n    },\n    budgets: {\n        modal: budget,\n        editString: '_BUDGET'\n    }\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useMediaQuery } from 'react-responsive';\nimport { format } from 'date-fns';\n\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport IconButton from '../components/IconButton';\nimport HeaderDropdown from '../components/HeaderDropdown';\nimport EditInput from '../components/EditInput';\nimport MobileEditGroup from '../components/MobileEditGroup';\n\nimport { modals } from '../modals';\nimport { fromCamelCase, checkIfCanDelete} from '../functions';\n\nconst StyledComp = styled.div`\n    border: 1px solid white;\n    margin: 5px 5px 5px 0px;\n    overflow: scroll;\n\n    @media screen and (max-width: 700px) {\n        margin: 0px;\n        border: none;\n    }\n`;\n\nconst EditList = ({array=[], vertical=false, onClickDropdown=()=>{}, id}) => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const currentPage = useSelector(state => state.currentPage);\n\n    const modalKey = currentPage.toLowerCase();\n    const modalObj = {...modals[modalKey]};\n    const modal = {...modalObj.modal};\n    const add = 'ADD'+modalObj.editString;\n    const update = 'UPDATE'+modalObj.editString;\n    const remove = 'REMOVE'+modalObj.editString; \n\n    const onChange = (obj, key) => (e) => {\n        let value = e.target.value;\n        if (typeof modal[key] === 'number') value = parseFloat(value);\n\n        obj[key] = value;\n        //make sure false and true are boolean not string\n        if (obj[key] === 'false') obj[key] = false;\n        if (obj[key] === 'true') obj[key] = true;\n        dispatch({type: update, payload: obj});\n    }\n\n    const onDelete = (id) => () => {\n        dispatch({type: remove, payload: id});\n    }\n\n    const onAdd = () => {      \n        let newObj = {...modal};\n        Object.keys(newObj).forEach(key => {\n            if (typeof newObj[key] === 'string' && newObj[key].includes(',')) newObj[key] = newObj[key].split(',')[0];\n            if (typeof newObj[key] === 'string' && newObj[key] === 'date') newObj[key] = format(new Date(), 'yyyy-MM-dd');\n        });  \n        dispatch({type: add, payload: newObj});\n    }\n\n    const onChangePage = (id) => {\n        onClickDropdown(Number(id))();\n    }\n\n    if (isMobile) return (\n        <StyledComp>\n            <HeaderDropdown value={'Edit'} options={array.map(obj => ({display: obj.name, value: obj.id}))} onChange={onChangePage} />\n            {\n                array.map(obj => {\n                    return (\n                        <MobileEditGroup key={'MobileEditGroup-'+obj.id} modal={modal} obj={obj} onChange={onChange} onDelete={onDelete}/>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n\n    if (true || isMobile) return (\n        <StyledComp>\n            <h4>Edit {currentPage}</h4>\n            {\n                array.map(obj => {\n                    return (\n                        <Table key={'EditListTable-'+obj.id} style={{display: 'inline-block', margin: '10px'}} padding='2px 5px'>\n                            <tbody>\n                                {\n                                    Object.keys(modal).map(key => {\n                                        return (\n                                            <tr key={'EditListRow-'+key}>\n                                                <th>{fromCamelCase(key)}</th>\n                                                <td><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)} width='140px'/></td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                                <tr>\n                                    <td colSpan='2'>\n                                    { checkIfCanDelete(obj) \n                                        ? <Button value=\"Delete\" onClick={onDelete(obj.id)} width='50%' color='red'/> \n                                        : <div style={{height: 'var(--input-height)', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>Being Used</div> }\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    );\n                })\n            }\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n\n    return (\n        <StyledComp>\n            <h4>Edit {currentPage}</h4>\n            <Table padding='2px'>\n                <thead>\n                    <tr>\n                    {\n                        Object.keys(modal).map(key => {\n                            return <td key={\"EditListHeading-\"+key}>{fromCamelCase(key)}</td>\n                        })\n                    }\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    array.map((obj, i) => {\n                        return (\n                            <tr key={\"EditListRow-\"+i}>\n                            {\n                                Object.keys(modal).map((key,j) => {\n                                    return (\n                                        <td key={\"EditListData-\"+key+i}><EditInput label={key} defaultValue={modal[key]} value={obj[key]} onChange={onChange(obj, key)}/></td>\n                                    );\n                                })\n                            }\n                                { checkIfCanDelete(obj) ? <td><IconButton Icon={FaTrashAlt} onClick={onDelete(obj.id)} color='red'/></td> : <td></td> }\n                            </tr>\n                        );\n                    })\n                }\n                </tbody>\n            </Table>\n\n            <Button value=\"Add New\" width=\"150px\" onClick={onAdd} color='#0F0'/>\n        </StyledComp>\n    );\n}\n\nexport default EditList;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Categories = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allCategories = useSelector(state => filterDeleted(state.categories));\n    const categories = allCategories.filter(cat => !cat.hidden);\n    const firstCategory = categories[0];\n    let firstCategoryId = firstCategory !== undefined ? firstCategory.id : undefined;\n    let firstCategoryName = firstCategory !== undefined ? firstCategory.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [category, setCategory] = useState(firstCategoryId);\n    const [categoryName, setCategoryName] = useState(firstCategoryName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (categories.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let category = categories.find(obj => obj.id === id);\n        setCategory(id);\n        setCategoryName(category.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.category !== undefined && obj.category === category ? true : false;\n    });    \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Categories'} array={categories} onClickObj={onClickObj} selected={category}/> }\n                    { editMode \n                        ? <EditList array={allCategories} onClickDropdown={onClickObj} id={category}/>\n                        : <Transactions transactions={filteredTransactions} heading={categoryName} onClickDropdown={onClickObj} objArray={categories} id={category}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Categories;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Funds = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allFunds = useSelector(state => filterDeleted(state.funds));\n    const funds = allFunds.filter(fund => !fund.complete);\n    const firstFund = funds[0];\n    let firstFundId = firstFund !== undefined ? firstFund.id : undefined;\n    let firstFundName = firstFund !== undefined ? firstFund.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const fundAdditions = useSelector(state => filterDeleted(state.fundAdditions));\n    const [fund, setFund] = useState(firstFundId);\n    const [fundName, setFundName] = useState(firstFundName);\n\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (funds.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let fund = funds.find(obj => obj.id === id);\n        setFund(id);\n        setFundName(fund.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    }); \n\n    const filteredFundAdditions = fundAdditions.filter(obj => {\n        return obj.fund !== undefined && obj.fund === fund ? true : false;\n    });\n\n    const combined = [...filteredTransactions, ...filteredFundAdditions];\n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Funds'} array={funds} onClickObj={onClickObj} selected={fund}/> }\n                    { editMode \n                        ? <EditList array={allFunds} onClickDropdown={onClickObj} id={fund}/>\n                        : <Transactions transactions={combined} heading={fundName} onClickDropdown={onClickObj} objArray={funds} id={fund}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Funds;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { filterDeleted } from '../functions';\n\nimport ListContainer from '../components/ListContainer';\nimport List from '../components/List';\nimport Transactions from '../components/Transactions';\nimport Container from '../components/Container';\nimport EditList from './EditList';\n\nconst Accounts = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n\n    const dispatch = useDispatch();\n    const editMode = useSelector(state => state.editMode);\n    const allAccounts = useSelector(state => filterDeleted(state.accounts));\n    const accounts = allAccounts.filter(account => !account.closed);\n    const firstAccount = accounts[0];\n    let firstAccountId = firstAccount !== undefined ? firstAccount.id : undefined;\n    let firstAccountName = firstAccount !== undefined ? firstAccount.name : '';\n    \n    const transactions = useSelector(state => filterDeleted(state.transactions));\n    const [account, setAccount] = useState(firstAccountId);\n    const [accountName, setAccountName] = useState(firstAccountName);\n\n    React.useEffect(() => {\n        //If there's no object in the array, then go straight to edit mode\n        if (accounts.length === 0 && !editMode) {\n            dispatch({type: 'SET_EDIT_MODE', payload: true});\n        }\n    });\n\n    const onClickObj = (id) => () => {\n        let account = accounts.find(obj => obj.id === id);\n        setAccount(id);\n        setAccountName(account.name);\n        dispatch({type: 'SET_EDIT_MODE', payload: false});\n    }\n\n    const filteredTransactions = transactions.filter(obj => {\n        if (obj.from !== undefined && obj.to !== undefined && (obj.from === account || obj.to === account)) return true; \n        return obj.account !== undefined && obj.account === account ? true : false;\n    });   \n\n    return (\n        <div>  \n            <Container>\n                <ListContainer>\n                    { isMobile ? null : <List heading={'Accounts'} array={accounts} onClickObj={onClickObj} selected={account}/> }\n                    { editMode \n                        ? <EditList array={allAccounts} vertical={true} onClickDropdown={onClickObj} id={account}/>\n                        : <Transactions transactions={filteredTransactions} heading={accountName} id={account} onClickDropdown={onClickObj} objArray={accounts}/> \n                    }\n                </ListContainer>\n            </Container>\n        </div>\n    );\n}\n\nexport default Accounts;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { changeColourScheme } from '../functions';\nimport { sync } from '../redux/store';\n\nimport Container from '../components/Container';\nimport LabelledInput from '../components/LabelledInput';\nimport Button from '../components/Button';\n\nconst url = process.env.NODE_ENV === 'development' ? 'http://localhost:3001/' : 'https://budget-app-ap1.herokuapp.com/';\n\nconst Settings = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user);\n    const lastSync = useSelector(state => state.lastSync);\n    const fetching = useSelector(state => state.fetching);\n\n    const payPeriodType = useSelector(state => state.general.payPeriodType);\n    const currencySymbol = useSelector(state => state.general.currencySymbol);\n    const showDecimals = useSelector(state => state.general.showDecimals);\n    const startDate = useSelector(state => state.general.startDate);\n    const colourScheme = useSelector(state => state.general.colourScheme);\n\n    const setPayPeriodType = (e) => dispatch({type: 'SET_PAY_PERIOD_TYPE', payload: e.target.value});\n    const setCurrencySymbol = (e) => dispatch({type: 'SET_CURRENCY_SYMBOL', payload: e.target.value});\n    const setShowDecimals = (e) => {\n        let value = e.target.value === 'false' ? false : true;\n        dispatch({type: 'SET_SHOW_DECIMALS', payload: value});\n    }\n    const setStartDate = (e) => dispatch({type: 'SET_START_DATE', payload: e.target.value});\n    const setColourScheme = (value) => dispatch({type: 'SET_COLOUR_SCHEME', payload: value});\n    const setUser = (value) => dispatch({type: 'SET_USER', payload: value});\n    const setMessage = (value) => dispatch({type: 'SET_MESSAGE', payload: value});\n    const setFetching = (value) => dispatch({type: 'SET_FETCHING', payload: value});\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions,\n            user: state.user\n        };\n    });\n\n    const onChangeColorScheme = (e) => {\n        let value = e.target.value;\n        changeColourScheme(value);\n        setColourScheme(value);\n    }\n\n    const manualSync = () => {\n        sync(backupData, dispatch, true);\n    }\n\n    const login = () => {\n        dispatch({type: 'SET_MESSAGE', payload: {text: '', type: ''}});\n        setFetching(true);\n        fetch(url+'api/login', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            setFetching(false);\n            if (data.status === 'success') {\n                setUsername('');\n                setPassword('');\n                setUser(data.user);\n            } else {\n                if (data.type === 'logout') setUser(null);\n                setMessage({text: data.message, type: 'error'});\n            }\n        }).catch(err => {\n            console.log(err.message);\n            setMessage({text: 'Failed to contact server.', type: 'error'});\n            setFetching(false);\n        });\n    }\n\n    const register = () => {\n        if (username.length < 3) {\n            setMessage({text: 'Username should be 3 or more characters', type: 'error'});\n            return;\n        }\n\n        if (password.length < 5) {\n            setMessage({text: 'Password should be 5 or more characters', type: 'error'});\n            return;\n        }\n\n        setMessage({text: '', type: ''});\n        setFetching(true);\n        fetch(url+'api/register', {\n            method: 'POST', \n            headers: {'content-type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({username, password})\n        }).then(res => res.json()).then(data => {\n            console.log(data);\n            setUsername('');\n            setPassword('');\n            setFetching(false);\n            if (data.status === 'success') dispatch({type: 'SET_USER', payload: data.user});\n            else setMessage({text: data.message, type: 'error'});\n        }).catch(err => {\n            console.log(err.message);\n            setUser(null);\n            setMessage({text: 'Failed to contact server. Please try again.', type: 'error'});\n            setFetching(false);\n        });\n    }\n\n    const logout = () => {\n        setUser(null);\n    }\n\n    const onChangeUsername = (e) => setUsername(e.target.value);\n    const onChangePassword = (e) => setPassword(e.target.value);\n\n    let lastSyncDate = lastSync.toFixed(0);\n    let lastSyncDisplay = `${lastSyncDate.slice(6,8)}/${lastSyncDate.slice(4,6)}/${lastSyncDate.slice(0,4)} at ${lastSyncDate.slice(8,10)}:${lastSyncDate.slice(10,12)}`;\n    if (lastSync === 0 || lastSync === undefined) lastSyncDisplay = 'Never';\n\n    return (\n        <div>\n            <Container>\n                <h4>Settings</h4>\n\n                <LabelledInput label=\"Start Date\" type=\"date\" value={startDate} onChange={setStartDate} labelWidth='150px'/>\n                <LabelledInput label=\"Currency Symbol\" value={currencySymbol} onChange={setCurrencySymbol} labelWidth='150px'/>\n                <LabelledInput label=\"Show Decimals\" type=\"dropdown\" value={showDecimals} options={[{value: true, display: 'Yes'}, {value: false, display: 'No'}]} onChange={setShowDecimals} labelWidth='150px'/>\n                <LabelledInput label=\"Pay Period\" type=\"dropdown\" value={payPeriodType} onChange={setPayPeriodType} labelWidth='150px' options={[\n                    {value: 'monthly', display: 'Monthly'}, \n                    {value: 'fourWeekly', display: '4-Weekly'}, \n                    {value: 'twoWeekly', display: '2-Weekly'}, \n                    {value: 'weekly', display: 'Weekly'}\n                ]}/>\n                <LabelledInput label=\"Colour Scheme\" type=\"dropdown\" value={colourScheme} options={[{value: 'dark', display: 'Dark'}, {value: 'black', display: 'Black'}, {value: 'light', display: 'Light'}]} onChange={onChangeColorScheme} labelWidth='150px'/>\n\n                <h4>Syncing</h4>\n                <p>This will allow you to upload your data to a server for backup and to sync with other devices.</p>\n                <p>Last synced on: {lastSyncDisplay}</p>\n                { user === null \n                ?   <div>\n                        <LabelledInput label=\"Username\" value={username} onChange={onChangeUsername}/>\n                        <LabelledInput label=\"Password\" value={password} onChange={onChangePassword} type=\"password\"/>\n                        <Button value=\"Login\" width=\"120px\"inline={true} onClick={login} loading={fetching}/> <Button value=\"Register\" width=\"120px\"inline={true} onClick={register} loading={fetching}/>\n                    </div>\n\n                :   <div>\n                        <Button value=\"Sync Now\" width=\"120px\"inline={true} onClick={manualSync} loading={fetching}/> <Button value=\"Logout\" width=\"120px\"inline={true} onClick={logout}/>\n                    </div>\n                }\n            </Container>\n        </div>\n    );\n}\n\nexport default Settings;","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport styled from 'styled-components';\nimport { IoIosAdd, IoIosRemove } from 'react-icons/io';\n\nimport AddTransaction from './AddTransaction';\n\nconst BottomArea = styled.div`\n    position: fixed;\n    bottom: -275px;\n    transition: 0.3s;\n    width: 100%;\n    height: 288px;\n    background-color: var(--footer-bg);\n    padding: 10px;\n    border: 2px solid var(--footer-bg);\n    z-index: 3;\n    ${props => props.open ? 'transform: translateY(-275px);' : ''};\n\n    & > div {\n        margin: auto;\n    }\n`;\n\nconst MobileAddButton = styled.div`\n    & > * {\n        transition: 0.3s;\n    }\n\n    & > svg {\n        background-color: var(--footer-bg);\n        border: 3px solid var(--footer-border);\n        border-radius: 100%;\n        font-size: 51px;\n        position: fixed;\n        bottom: 5px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-275px' : '0px'});\n        z-index: 4;\n        fill: var(--footer-border);\n    }\n\n    & > div.left, & > div.right {\n        border-bottom: 3px solid var(--footer-border);\n        position: fixed;\n        bottom: 11px;\n        width: calc(50% - 22.5px);\n        height: 20px;\n        z-index: 4;\n        ${props => props.open ? 'transform: translateY(-275px);' : ''};\n    }\n\n    & > div.right {\n        border-left: 3px solid var(--footer-border);\n        right: 0px;\n        border-radius: 0px 0px 0px 20px;\n    }\n\n    & > div.left {\n        border-right: 3px solid var(--footer-border);\n        left: 0px;\n        border-radius: 0px 0px 20px 0px;\n    }\n\n    & > div.middle {\n        background-color: var(--footer-bg);\n        position: fixed;\n        z-index: 1;\n        width: 55px;\n        height: 55px;\n        left: 50%;\n        transform: translate(-50%,${props => props.open ? '-275px' : '0px'}) rotate(-45deg);\n        bottom: -16px;\n        border-radius: 0px 51px 0px 100%;\n    }\n`;\n\nconst Footer = () => {\n    const isMobile = useMediaQuery({ maxWidth: 700 });\n    const [isOpen, setOpen] = useState(false);\n    const [isFullyOpen, setFullyOpen] = useState(false);\n\n    if (!isMobile) return null;\n\n    const toggle = () => {\n        setOpen(!isOpen);\n\n        setTimeout(() => {\n            setFullyOpen(!isFullyOpen);\n        }, 300);\n    }\n\n    const onAddTransaction = () => {\n        setOpen(false);\n        setTimeout(() => {\n            setFullyOpen(false);\n        }, 300);\n    }\n\n    return (\n        <div>\n            <MobileAddButton open={isOpen}>\n                { isFullyOpen ? <IoIosRemove onClick={toggle}/> : <IoIosAdd onClick={toggle}/> }\n                <div className=\"right\"></div>\n                <div className=\"left\"></div>\n                <div className=\"middle\"></div>\n            </MobileAddButton>\n            <BottomArea open={isOpen}>\n                <AddTransaction onAdd={onAddTransaction}/> \n                {/* { isOpen ? <AddTransaction onAdd={onAddTransaction}/> : isFullyOpen ? <AddTransaction onAdd={onAddTransaction}/> : null } */}\n            </BottomArea>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { sync } from './redux/store';\n\nimport Header from './components/Header';\nimport TopPopup from './components/TopPopup';\nimport MessagePopup from './components/MessagePopup';\n\nimport SummaryTables from './containers/SummaryTables';\nimport AddTransaction from './containers/AddTransaction';\nimport Categories from './containers/Categories';\nimport Funds from './containers/Funds';\nimport Accounts from './containers/Accounts';\nimport Settings from './containers/Settings';\nimport Footer from './containers/Footer';\n\nfunction App() {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.currentPage);\n    const addTransaction = useSelector(state => state.addTransaction);\n    const user = useSelector(state => state.user);\n    const backupData = useSelector(state => {\n        return {\n            general: state.general,\n            accounts: state.accounts,\n            categories: state.categories,\n            budgets: state.budgets,\n            funds: state.funds,\n            fundAdditions: state.fundAdditions,\n            transactions: state.transactions\n        };\n    });\n\n    //sync with server when starting app\n    useEffect(() => {\n        if (user !== null) sync(backupData, dispatch);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <MessagePopup/>\n            { page === 'Home' ? <SummaryTables/> : null }\n            { page === 'Categories' ? <Categories/> : null }\n            { page === 'Funds' ? <Funds/> : null }\n            { page === 'Accounts' ? <Accounts/> : null }\n            { page === 'Settings' ? <Settings/> : null }\n            { addTransaction ? <TopPopup><AddTransaction/></TopPopup> : null }\n            <Footer/>\n        </div>\n    );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n      <Provider store={store}>\n          <App />\n      </Provider>\n        , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}